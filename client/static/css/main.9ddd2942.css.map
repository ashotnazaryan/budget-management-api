{"version":3,"file":"static/css/main.9ddd2942.css","mappings":"AACA,WAGE,kBAFA,mBACA,kBAEA,gBACA,2LACA,iFAQA,YACA,0PASA,gEACA,6BACA,CADA,qCACA,qMASA,qBACA,YAKA,iBACA,CANA,kBAKA,mBACA,eACA,8KAGA,oSASA,2JACA,YAMA,iBACA,CAHF,kBACE,kBACA,CACA,eACA,sLAEA,+iBClEF,WAGE,kBAFA,mBACA,kBAEA,gBACA,2LACA,iFAQA,YACA,0PASA,gEACA,6BACA,CADA,qCACA,qMASA,qBACA,YAKA,iBACA,CANA,kBAKA,mBACA,eACA,8KAGA,oSASA,2JACA,YAMA,iBACA,CAHF,kBACE,kBACA,CACA,eACA,sLAEA,+iBC5DF,aACE,gBACF,CAUA,WACE,aAAc,CACd,sBAAwB,CACxB,wBACF,CASA,kCACE,kBAAmB,CACnB,oBACF,CAOA,WACE,kBAAuB,CACvB,aAAc,CACd,QACF,CAOA,YACE,+BAAiC,CACjC,aACF,CASA,oBACE,yBAA0B,CAC1B,wCAAiC,CAAjC,gCACF,CAMA,iBACE,kBACF,CAOA,sBACE,+BAAiC,CACjC,aACF,CAMA,cACE,aACF,CAUA,cACE,yBAA0B,CAC1B,aACF,CASA,4BACE,QACF,CAMA,eACE,mBACF,CAMA,wEACE,yBACF,CAMA,iBACE,sBACF,CAMA,eACE,mBACF,CAMA,iBACE,QACF,CAOA,6BACE,4BAA6B,CAC7B,mBACF,CAMA,wDAEE,WACF,CAMA,4BACE,aAAc,CACd,WACF,CAMA,4BACE,uBACF,CAOA,6BACE,yBAA0B,CAC1B,YACF,CAMA,yGACE,iBAAkB,CAClB,SACF,CAMA,uGACE,6BACF,CAMA,yBACE,eACF,CASA,eACE,qBAAuB,CACvB,YAAa,CACb,UAAY,CACZ,uBAAwB,CACxB,0BAAmB,CAAnB,kBAAmB,CACnB,MAAO,CACP,WAAY,CACZ,WAAY,CACZ,iBAAkB,CAClB,OAAQ,CACR,sBAAuB,CACvB,yBAAkB,CAAlB,iBACF,CAEA,2BACE,YACF,CAMA,gBACE,iBACF,CC1FI,WAGE,oBAFA,mBACA,kBAEA,gBAGA,6KCpKJ,CDmKI,wKCnKJ,iBACA,iBACA,kCAQA,kCAIA,CAbA,6BACA,CADA,QAaA,mBAGA,wBAEE","sources":["../node_modules/@fontsource/roboto/400.css","../node_modules/@fontsource/roboto/700.css","../node_modules/@csstools/normalize.css/normalize.css","../node_modules/@fontsource/roboto/scss/mixins.scss","index.scss"],"sourcesContent":["/* roboto-cyrillic-ext-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-cyrillic-ext-400-normal.woff2) format('woff2'), url(./files/roboto-cyrillic-ext-400-normal.woff) format('woff');\n  unicode-range: U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;\n}\n\n/* roboto-cyrillic-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-cyrillic-400-normal.woff2) format('woff2'), url(./files/roboto-cyrillic-400-normal.woff) format('woff');\n  unicode-range: U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;\n}\n\n/* roboto-greek-ext-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-greek-ext-400-normal.woff2) format('woff2'), url(./files/roboto-greek-ext-400-normal.woff) format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n\n/* roboto-greek-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-greek-400-normal.woff2) format('woff2'), url(./files/roboto-greek-400-normal.woff) format('woff');\n  unicode-range: U+0370-03FF;\n}\n\n/* roboto-vietnamese-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-vietnamese-400-normal.woff2) format('woff2'), url(./files/roboto-vietnamese-400-normal.woff) format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB;\n}\n\n/* roboto-latin-ext-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-latin-ext-400-normal.woff2) format('woff2'), url(./files/roboto-latin-ext-400-normal.woff) format('woff');\n  unicode-range: U+0100-02AF,U+0304,U+0308,U+0329,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n\n/* roboto-latin-400-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url(./files/roboto-latin-400-normal.woff2) format('woff2'), url(./files/roboto-latin-400-normal.woff) format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}","/* roboto-cyrillic-ext-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-cyrillic-ext-700-normal.woff2) format('woff2'), url(./files/roboto-cyrillic-ext-700-normal.woff) format('woff');\n  unicode-range: U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F;\n}\n\n/* roboto-cyrillic-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-cyrillic-700-normal.woff2) format('woff2'), url(./files/roboto-cyrillic-700-normal.woff) format('woff');\n  unicode-range: U+0301,U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116;\n}\n\n/* roboto-greek-ext-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-greek-ext-700-normal.woff2) format('woff2'), url(./files/roboto-greek-ext-700-normal.woff) format('woff');\n  unicode-range: U+1F00-1FFF;\n}\n\n/* roboto-greek-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-greek-700-normal.woff2) format('woff2'), url(./files/roboto-greek-700-normal.woff) format('woff');\n  unicode-range: U+0370-03FF;\n}\n\n/* roboto-vietnamese-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-vietnamese-700-normal.woff2) format('woff2'), url(./files/roboto-vietnamese-700-normal.woff) format('woff');\n  unicode-range: U+0102-0103,U+0110-0111,U+0128-0129,U+0168-0169,U+01A0-01A1,U+01AF-01B0,U+0300-0301,U+0303-0304,U+0308-0309,U+0323,U+0329,U+1EA0-1EF9,U+20AB;\n}\n\n/* roboto-latin-ext-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-latin-ext-700-normal.woff2) format('woff2'), url(./files/roboto-latin-ext-700-normal.woff) format('woff');\n  unicode-range: U+0100-02AF,U+0304,U+0308,U+0329,U+1E00-1E9F,U+1EF2-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF;\n}\n\n/* roboto-latin-700-normal */\n@font-face {\n  font-family: 'Roboto';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 700;\n  src: url(./files/roboto-latin-700-normal.woff2) format('woff2'), url(./files/roboto-latin-700-normal.woff) format('woff');\n  unicode-range: U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+0304,U+0308,U+0329,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD;\n}","/* Document\n * ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n */\n\n:where(html) {\n  line-height: 1.15; /* 1 */\n}\n\n/* Sections\n * ========================================================================== */\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Edge, Firefox, and Safari.\n */\n\n:where(h1) {\n  font-size: 2em;\n  margin-block-end: 0.67em;\n  margin-block-start: 0.67em;\n}\n\n/* Grouping content\n * ========================================================================== */\n\n/**\n * Remove the margin on nested lists in Chrome, Edge, and Safari.\n */\n\n:where(dl, ol, ul) :where(dl, ol, ul) {\n  margin-block-end: 0;\n  margin-block-start: 0;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Correct the inheritance of border color in Firefox.\n */\n\n:where(hr) {\n  box-sizing: content-box; /* 1 */\n  color: inherit; /* 2 */\n  height: 0; /* 1 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\n:where(pre) {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n * ========================================================================== */\n\n/**\n * Add the correct text decoration in Safari.\n */\n\n:where(abbr[title]) {\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\n:where(b, strong) {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\n:where(code, kbd, samp) {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\n:where(small) {\n  font-size: 80%;\n}\n\n/* Tabular data\n * ========================================================================== */\n\n/**\n * 1. Correct table border color in Chrome, Edge, and Safari.\n * 2. Remove text indentation from table contents in Chrome, Edge, and Safari.\n */\n\n:where(table) {\n  border-color: currentColor; /* 1 */\n  text-indent: 0; /* 2 */\n}\n\n/* Forms\n * ========================================================================== */\n\n/**\n * Remove the margin on controls in Safari.\n */\n\n:where(button, input, select) {\n  margin: 0;\n}\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\n\n:where(button) {\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style buttons in iOS and Safari.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"reset\" i], [type=\"submit\" i])) {\n  -webkit-appearance: button;\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Edge, and Firefox.\n */\n\n:where(progress) {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the inheritance of text transform in Firefox.\n */\n\n:where(select) {\n  text-transform: none;\n}\n\n/**\n * Remove the margin in Firefox and Safari.\n */\n\n:where(textarea) {\n  margin: 0;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome, Edge, and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n:where(input[type=\"search\" i]) {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Safari.\n */\n\n::-webkit-inner-spin-button,\n::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * Correct the text style of placeholders in Chrome, Edge, and Safari.\n */\n\n::-webkit-input-placeholder {\n  color: inherit;\n  opacity: 0.54;\n}\n\n/**\n * Remove the inner padding in Chrome, Edge, and Safari on macOS.\n */\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style upload buttons in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/**\n * Remove the inner border and padding of focus outlines in Firefox.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"color\" i], [type=\"reset\" i], [type=\"submit\" i]))::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus outline styles unset by the previous rule in Firefox.\n */\n\n:where(button, input:is([type=\"button\" i], [type=\"color\" i], [type=\"reset\" i], [type=\"submit\" i]))::-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Remove the additional :invalid styles in Firefox.\n */\n\n:where(:-moz-ui-invalid) {\n  box-shadow: none;\n}\n\n/* Interactive\n * ========================================================================== */\n\n/*\n * Add the correct styles in Safari.\n */\n\n:where(dialog) {\n  background-color: white;\n  border: solid;\n  color: black;\n  height: -moz-fit-content;\n  height: fit-content;\n  left: 0;\n  margin: auto;\n  padding: 1em;\n  position: absolute;\n  right: 0;\n  width: -moz-fit-content;\n  width: fit-content;\n}\n\n:where(dialog:not([open])) {\n  display: none;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\n:where(summary) {\n  display: list-item;\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n@use 'metadata';\n\n$metadata: meta.module-variables(metadata) !default;\n$directory: null !default;\n\n$family: null !default;\n$display: null !default;\n$formats: null !default;\n$subsets: null !default;\n$weights: null !default;\n$styles: null !default;\n$axes: null !default;\n\n// Deprecated\n$displayVar: null !default;\n\n@mixin generator(\n  $metadata: $metadata,\n  $directory: $directory,\n  $family: $family,\n  $display: $display,\n  $formats: $formats,\n  $subsets: $subsets,\n  $weights: $weights,\n  $styles: $styles,\n  $axes: $axes,\n\n  // Deprecated\n  $displayVar: $displayVar\n) {\n  @if $displayVar != null {\n    @warn \"$displayVar is deprecated due to the limitation of using css variables in @font-face (https://github.com/fontsource/fontsource/issues/726).\";\n  }\n\n  $isVariable: map.get($metadata, axes) != null;\n\n  $directory: if(\n    $directory,\n    $directory,\n    '~@fontsource#{if($isVariable, '-variable', '')}/#{map.get($metadata, id)}/files'\n  );\n\n  $family: if($family, $family, map.get($metadata, family) + if($isVariable, ' Variable', ''));\n  $display: if($display, $display, swap);\n  $formats: if(not $formats or $formats == all, if($isVariable, woff2, (woff2, woff)), $formats);\n  $subsets: if(\n    $subsets,\n    if($subsets == all, map.get($metadata, subsets), $subsets),\n    map.get($metadata, defaults, subset)\n  );\n  $weights: if(\n    $weights,\n    if($weights == all, map.get($metadata, weights), $weights),\n    map.get($metadata, defaults, weight)\n  );\n  $styles: if(\n    $styles,\n    if($styles == all, map.get($metadata, styles), $styles),\n    map.get($metadata, defaults, style)\n  );\n  $axes: if(\n    $axes,\n    if($axes == all, full, $axes),\n    if($isVariable, if(map.has-key($metadata, axes, wght), wght, full), null)\n  );\n\n  @each $subset in $subsets {\n    @each $unicodeSubset, $unicodeRange in map.get($metadata, unicode) {\n      @if (\n        ($subset == $unicodeSubset) or\n          (\n            // Is numeric subset\n            ($subset == map.get($metadata, defaults, subset)) and not\n              list.index(map.get($metadata, subsets), $unicodeSubset)\n          )\n      ) {\n        @each $weight in if($axes, null, $weights) {\n          @each $axis in $axes {\n            @each $style in $styles {\n              $variant: '#{map.get($metadata, id)}-#{if($unicodeSubset, $unicodeSubset, $subset)}-#{if($axis, $axis, $weight)}-#{$style}';\n\n              $src: ();\n              @each $format in $formats {\n                $src: append(\n                  $src,\n                  url('#{$directory}/#{$variant}.#{$format}')\n                    format('#{$format}#{if($axis, '-variations', '')}'),\n                  comma\n                );\n              }\n\n              @content ((\n                metadata: $metadata,\n                directory: $directory,\n                family: $family,\n                display: $display,\n                formats: $formats,\n                subsets: $subsets,\n                weights: $weights,\n                styles: $styles,\n                axes: $axes,\n\n                variant: $variant,\n                subset: $subset,\n                unicodeSubset: $unicodeSubset,\n                unicodeRange: $unicodeRange,\n                weight: $weight,\n                axis: $axis,\n                style: $style,\n\n                font-family: string.quote($family),\n                font-style: if(\n                  (($axis == full) or ($axis == slnt)) and map.has-key($metadata, axes, slnt),\n                  oblique map.get($metadata, axes, slnt, min) + deg map.get($metadata, axes, slnt, max) + deg,\n                  $style\n                ),\n                font-display: $display,\n                font-weight: if(\n                  (($axis == full) or ($axis == wght)) and map.has-key($metadata, axes, wght),\n                  map.get($metadata, axes, wght, min) map.get($metadata, axes, wght, max),\n                  $weight\n                ),\n                font-stretch: if(\n                  (($axis == full) or ($axis == wdth)) and map.has-key($metadata, axes, wdth),\n                  '#{map.get($metadata, axes, wdth, min)}% #{map.get($metadata, axes, wdth, max)}%',\n                  null\n                ),\n                src: $src,\n                unicode-range: $unicodeRange,\n              ));\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin faces(\n  $metadata: $metadata,\n  $directory: $directory,\n  $family: $family,\n  $display: $display,\n  $formats: $formats,\n  $subsets: $subsets,\n  $weights: $weights,\n  $styles: $styles,\n  $axes: $axes,\n\n  // Deprecated\n  $displayVar: $displayVar\n) {\n  @include generator(\n      $metadata: $metadata,\n      $directory: $directory,\n      $family: $family,\n      $display: $display,\n      $formats: $formats,\n      $subsets: $subsets,\n      $weights: $weights,\n      $styles: $styles,\n      $axes: $axes,\n\n      $displayVar: $displayVar\n    )\n    using ($props) {\n    /* #{map.get($props, variant)} */\n    @font-face {\n      font-family: map.get($props, font-family);\n      font-style: map.get($props, font-style);\n      font-display: map.get($props, font-display);\n      font-weight: map.get($props, font-weight);\n      font-stretch: map.get($props, font-stretch);\n      unicode-range: map.get($props, unicode-range);\n      src: map.get($props, src);\n    }\n  }\n}\n","@use \"@fontsource/roboto/scss/mixins\" as Roboto;\n\n@import-normalize;\n@import '@fontsource/roboto/400.css';\n@import '@fontsource/roboto/700.css';\n\n@include Roboto.faces(\n  $display: 'swap'\n);\n\nhtml, body, #root {\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: 'Roboto', sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#root {\n  display: flex;\n}\n\n* {\n  box-sizing: border-box;\n}\n\na {\n  text-decoration: none;\n  color: #000;\n\n  &:visited,\n  &:focus {\n    color: #000;\n  }\n}"],"names":[],"sourceRoot":""}