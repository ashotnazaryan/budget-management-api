{"version":3,"file":"static/js/850.39b171f5.chunk.js","mappings":"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","sources":["modules/Profile.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/Skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { editProfile, getProfile, selectProfile } from 'store/reducers';\nimport { ProfileField, UserProfile } from 'shared/models';\nimport { COUNTRIES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport Button from 'shared/components/Button';\nimport Skeleton from 'shared/components/Skeleton';\n\nconst Profile: React.FC<{}> = () => {\n  const countries = COUNTRIES;\n  const { t } = useTranslation();\n  const { status, editStatus, userProfile } = useAppSelector(selectProfile);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const loading = status === 'loading';\n  const editLoading = editStatus === 'loading';\n\n  const defaultValues: Partial<UserProfile> = {\n    streetAddress: '',\n    streetAddressLine: '',\n    city: '',\n    region: '',\n    zipCode: '',\n    countryCode: '',\n    taxId: '',\n    accountNumber: ''\n  };\n\n  const methods = useForm<UserProfile>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { handleSubmit, setValue, reset, formState: { isDirty } } = methods;\n\n  const resetForm = React.useCallback(() => {\n    reset(userProfile, { keepDirty: false });\n  }, [reset, userProfile]);\n\n  const setFormValues = React.useCallback(() => {\n    if (userProfile) {\n      Object.keys(userProfile).forEach((key) => {\n        setValue(key as keyof UserProfile, userProfile[key as keyof UserProfile], { shouldDirty: false });\n      });\n    }\n  }, [userProfile, setValue]);\n\n  const goBack = React.useCallback(() => {\n    navigate(-1);\n    resetForm();\n  }, [navigate, resetForm]);\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getProfile());\n    }\n  }, [dispatch, status]);\n\n  React.useEffect(() => {\n    setFormValues();\n  }, [setFormValues]);\n\n  const handleCancelButtonClick = (): void => {\n    resetForm();\n  };\n\n  const handleFormSubmit = (data: UserProfile): void => {\n    dispatch(editProfile(data));\n  };\n\n  const renderContent = (): React.ReactElement => {\n    if (loading) {\n      return <Skeleton type='form' />;\n    }\n\n    return (\n      <FormProvider {...methods}>\n        <Grid container columnSpacing={3} rowSpacing={7} alignItems='flex-end'>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('PROFILE.STREET_ADDRESS')}\n              name={ProfileField.streetAddress}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('PROFILE.STREET_ADDRESS_LINE')}\n              name={ProfileField.streetAddressLine}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.CITY')}\n              name={ProfileField.city}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.REGION')}\n              name={ProfileField.region}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.ZIP_CODE')}\n              name={ProfileField.zipCode}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormSelect\n              label={t('PROFILE.COUNTRY')}\n              name={ProfileField.countryCode}\n              MenuProps={{\n                PaperProps: {\n                  style: {\n                    maxHeight: '200px'\n                  }\n                }\n              }}\n            >\n              {countries.map(({ name, code }) => (\n                <MenuItem key={code} value={code}>{name}</MenuItem>\n              ))}\n            </FormSelect>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.VAT_ID')}\n              name={ProfileField.taxId}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.ACCOUNT_NUMBER')}\n              name={ProfileField.accountNumber}\n            />\n          </Grid>\n        </Grid>\n      </FormProvider>\n    );\n  };\n\n  return (\n    <Box component='form' display='flex' flexDirection='column' flexGrow={1} onSubmit={handleSubmit(handleFormSubmit)}>\n      <PageTitle\n        withBackButton\n        withCancelButton={isDirty}\n        data-testid='page-title'\n        text={t('PROFILE.PAGE_TITLE')}\n        onBackButtonClick={goBack}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      <Box flexGrow={1}>\n        {renderContent()}\n      </Box>\n      <Grid container display='flex' justifyContent='flex-end' rowGap={2} columnGap={2} sx={{ marginTop: 6, marginBottom: 4 }}>\n        <Grid item sm='auto' xs={12}>\n          <Button\n            fullWidth\n            aria-label='Save profile'\n            type='submit'\n            variant='contained'\n            loading={editLoading}\n            disabled={!isDirty}\n            onClick={handleSubmit(handleFormSubmit)}\n          >\n            {t('COMMON.SAVE')}\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n"],"names":["Profile","countries","COUNTRIES","t","useTranslation","status","editStatus","userProfile","useAppSelector","selectProfile","dispatch","useAppDispatch","navigate","useNavigate","loading","editLoading","methods","useForm","mode","reValidateMode","defaultValues","streetAddress","streetAddressLine","city","region","zipCode","countryCode","taxId","accountNumber","handleSubmit","setValue","reset","formState","isDirty","resetForm","React","keepDirty","setFormValues","Object","keys","forEach","key","shouldDirty","goBack","getProfile","handleFormSubmit","data","editProfile","_jsxs","Box","component","display","flexDirection","flexGrow","onSubmit","children","_jsx","PageTitle","withBackButton","withCancelButton","text","onBackButtonClick","onCancelButtonClick","handleCancelButtonClick","Skeleton","type","FormProvider","Grid","container","columnSpacing","rowSpacing","alignItems","item","xs","FormInput","label","name","ProfileField","sm","FormSelect","MenuProps","PaperProps","style","maxHeight","map","_ref","code","MenuItem","value","justifyContent","rowGap","columnGap","sx","marginTop","marginBottom","Button","fullWidth","variant","disabled","onClick","StyledTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","props","theme","palette","primary","main","error","rules","useTheme","control","errors","useFormContext","Controller","render","_ref2","field","fieldState","position","FormHelperText","message","InputLabel","Select","isForm","getSize","firstBar","secondBar","thirdBar","width","MuiSkeleton","height","animation"],"sourceRoot":""}