{"version":3,"file":"static/js/133.ef89ce72.chunk.js","mappings":"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","sources":["modules/Invoices/pages/InvoiceList.tsx","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/pages/CreateEditInvoice.styles.ts","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport { useTranslation } from 'core/i18n';\nimport PageTitle from 'shared/components/PageTitle';\nimport { IconType } from 'shared/models';\nimport { ROUTES } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\nimport Button from 'shared/components/Button';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          aria-label='New invoice'\n          color='secondary'\n          variant='contained'\n          startIcon={<Icon name={IconType.receipt}></Icon>}\n          sx={{ width: { sm: 'auto', xs: '100%' }, fontSize: 14 }}\n          onClick={openNewInvoicePage}>\n          {t('INVOICES.NEW_INVOICE')}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    paddingTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1\n  },\n  tableCol: {},\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '13%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '5%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Invoice } from 'shared/models';\nimport {\n  getCurrentDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getLastDateOfPreviousMonth,\n  getPreviousMonthLongName\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.title}>{data.title}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getCurrentDate()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{getLastDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? data.amount?.vatRate : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? data.amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.gross}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>PLN</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {data.amount?.gross} PLN</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport Paper from '@mui/material/Paper';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice, InvoiceField } from 'shared/models';\nimport { invoiceHelper } from 'shared/helpers';\nimport { useAppSelector } from 'store';\nimport { INVOICE_CURRENCIES, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  onSubmit: (formData: Invoice) => void;\n  onCurrencyChange: (currencyIso: Currency['iso']) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, onSubmit, onCurrencyChange }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = INVOICE_CURRENCIES;\n  const defaultCurrencyIso = INVOICE_CURRENCIES.some((currency) => currency.iso === iso) ? iso : 'USD';\n  const [currencyIso, setCurrencyIso] = React.useState<Currency['iso']>(defaultCurrencyIso);\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n\n  const defaultValues: Partial<Invoice> = {\n    title: '',\n    salary: '',\n    currencyIso: defaultCurrencyIso,\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit } = methods;\n\n  React.useEffect(() => {\n    Object.keys(data).forEach((key) => {\n      setValue(key as keyof Invoice, data[key as keyof Invoice]);\n    });\n  }, [data, setValue]);\n\n  const handleCurrencyChange = (event: SelectChangeEvent<string>): void => {\n    const value = event.target.value as Currency['iso'];\n\n    setValue(InvoiceField.currencyIso, value);\n    setCurrencyIso(value);\n    onCurrencyChange(value);\n  };\n\n  const handleVatIncludedChange = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean): void => {\n    setValue(InvoiceField.vatIncluded, checked);\n    setVatIncluded(checked);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    onSubmit(data);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.TITLE')}\n                    name={InvoiceField.title}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.title.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    value={currencyIso}\n                    onChange={handleCurrencyChange}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={vatIncluded}\n                        onChange={handleVatIncludedChange}\n                      />}\n                    label={\n                      <Typography color={contrastText}>{t('INVOICES.INCLUDE_VAT')}</Typography>\n                    }\n                    labelPlacement='start'\n                    sx={{\n                      '&.MuiFormControlLabel-root': {\n                        margin: 0\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Button aria-label='Save invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormSubmit)}>\n              {t('COMMON.PREVIEW')}\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getExchangeRates, getProfile, selectInvoice, selectProfile, selectUser, setAmount } from 'store/reducers';\nimport { Currency, Invoice, ManageMode } from 'shared/models';\nimport { getLastDateOfPreviousMonth, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport InvoiceDocument from '../components/InvoiceDocument';\nimport InvoiceForm from '../components/InvoiceForm';\nimport { StyledPDFViewer } from './CreateEditInvoice.styles';\n\ninterface NewInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<NewInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { rate, amount } = useAppSelector(selectInvoice);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const dispatch = useAppDispatch();\n  const [invoiceData, setInvoiceData] = React.useState<Partial<Invoice>>({} as Invoice);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n  }, [navigate]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const { salary, vatIncluded } = data;\n\n    dispatch(setAmount({ rate, salary, vatIncluded }));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleCurrencyChange = (currencyIso: Currency['iso']): void => {\n    dispatch(getExchangeRates([currencyIso, getLastDateOfPreviousMonth()]));\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        text={t('INVOICES.NEW_INVOICE')}\n        onBackButtonClick={goBack} />\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm data={invoiceData} onSubmit={handleFormSubmit} onCurrencyChange={handleCurrencyChange} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <StyledPDFViewer>\n            <InvoiceDocument data={invoiceData} />\n          </StyledPDFViewer>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n"],"names":["InvoiceList","t","useTranslation","navigate","useNavigate","_jsxs","Box","flexGrow","children","_jsx","PageTitle","text","sx","display","justifyContent","Button","color","variant","startIcon","Icon","name","IconType","width","sm","xs","fontSize","onClick","openNewInvoicePage","concat","ROUTES","Font","family","fonts","src","fontWeight","styles","StyleSheet","page","backgroundColor","fontFamily","padding","title","textAlign","heading","paddingTop","flexDirection","alignItems","label","marginRight","value","account","marginTop","sellerBuyer","seller","flex","buyer","table","headerRow","bodyRow","borderStyle","borderRightWidth","borderBottomWidth","borderLeftWidth","tableCol","noCol","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","margin","total","vatExemption","chunkTextComponent","size","Text","style","hyphenationCallback","event","chunkSubstring","str","numChunks","Math","ceil","length","chunks","Array","i","o","substring","_ref","_data$amount","_data$amount2","_data$amount3","_data$amount4","_data$amount5","_data$amount6","data","Document","Page","View","getFirstDateOfPreviousMonth","getCurrentDate","getLastDateOfPreviousMonth","getDayOfCurrentMonth","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerName","buyerAddress","buyerLocation","buyerVatID","getPreviousMonthLongName","amount","net","vatIncluded","vatRate","vatAmount","gross","onSubmit","onCurrencyChange","helper","invoiceHelper","palette","info","contrastText","useTheme","defaultCurrency","iso","useAppSelector","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","INVOICE_CURRENCIES","defaultCurrencyIso","currency","currencyIso","setCurrencyIso","React","setVatIncluded","defaultValues","salary","methods","useForm","mode","reValidateMode","setValue","handleSubmit","Object","keys","forEach","key","handleFormSubmit","FormProvider","Grid","container","gap","item","Paper","elevation","paddingX","paddingBottom","Typography","marginBottom","FormInput","InvoiceField","rules","required","message","type","pattern","FormSelect","onChange","target","map","_ref2","nameKey","symbol","MenuItem","CurrencyInfoItem","FormControlLabel","control","Switch","checked","handleVatIncludedChange","_","labelPlacement","fullWidth","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","rate","selectInvoice","status","profileStatus","userProfile","selectProfile","user","selectUser","dispatch","useAppDispatch","invoiceData","setInvoiceData","goBack","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","withBackButton","onBackButtonClick","columnSpacing","rowSpacing","InvoiceForm","setAmount","getExchangeRates","InvoiceDocument","Invoices","Routes","Route","path","element","CreateEditInvoice","ManageMode","Navigate","to","replace"],"sourceRoot":""}