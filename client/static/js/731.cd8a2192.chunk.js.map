{"version":3,"file":"static/js/731.cd8a2192.chunk.js","mappings":"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","sources":["modules/Invoices/components/Invoice.tsx","modules/Invoices/pages/InvoiceList.tsx","shared/components/Device.tsx","shared/components/FormSwitch.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/components/PDFViewer.styles.ts","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/PDFViewer.tsx","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/EmptyState.tsx","shared/components/FormDatePicker.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/Skeleton.tsx","shared/components/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport { MONTHS } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\n\ninterface InvoiceProps {\n  data: InvoiceModel;\n  onClick?: (data: InvoiceModel) => void;\n}\n\nconst Invoice: React.FC<InvoiceProps> = ({ data, onClick }) => {\n  const { palette: { primary: { main, contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const { name, amount, month, buyerName } = data;\n  const monthName = MONTHS.find(({ index }) => index === Number(month))?.nameKey || '';\n\n  const onInvoiceClick = (): void => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ paddingX: 2, backgroundColor: main }}>\n      <Grid container display='flex' alignItems='center' justifyContent='space-between' flexGrow={1} columnSpacing={2}\n        sx={{\n          borderRadius: 1,\n          minHeight: 40,\n          cursor: 'pointer'\n        }}\n        onClick={onInvoiceClick}>\n        <Grid item xs={1} display='flex'>\n          <Icon name={IconType.receipt} sx={{ fontSize: { sm: 22, xs: 18 }, color: contrastText }}></Icon>\n        </Grid>\n        <Grid item xs={3} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{name}</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{t(monthName)}</Typography>\n        </Grid>\n        <Grid item xs={3} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{buyerName}</Typography>\n        </Grid>\n        <Grid item xs={3} display='flex' justifyContent='flex-end'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{amount?.gross}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Invoice;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getInvoices, selectInvoice } from 'store/reducers';\nimport { ROUTES } from 'shared/constants';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Invoice from '../components/Invoice';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { invoices, status } = useAppSelector(selectInvoice);\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  const handleInvoiceItemClick = ({ id, name }: InvoiceModel): void => {\n    navigate(`${ROUTES.invoices.path}/view/${name}`, { state: { id } });\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getInvoices());\n    }\n  }, [dispatch, status]);\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !invoices?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('INVOICES.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {\n          invoices.map((invoice) => (\n            <Grid item key={invoice.id} xs={12}>\n              <Invoice data={invoice} onClick={handleInvoiceItemClick} />\n            </Grid>\n          ))\n        }\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Grid item xs={12} display='flex' justifyContent='flex-end'>\n          <IconButton aria-label='Add invoice' color='primary' onClick={openNewInvoicePage} sx={{ alignSelf: 'flex-end' }}>\n            <Icon name={IconType.plus} sx={{ fontSize: 40 }}></Icon>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import * as React from 'react';\nimport * as rdd from 'react-device-detect';\nimport Box from '@mui/material/Box';\n\ntype DeviceProps = {\n  children: (props: typeof rdd) => React.ReactNode;\n};\n\nconst Device: React.FC<DeviceProps> = ({ ...props }) => {\n  return (\n    <Box>\n      {props.children(rdd)}\n    </Box>\n  );\n};\n\nexport default Device;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Typography from '@mui/material/Typography';\nimport { FormControlRules } from 'shared/models';\n\ntype FormSwitchProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n  onSwitchChange?: (checked: boolean) => void;\n} & SwitchProps;\n\nconst FormSwitch: React.FC<FormSwitchProps> = ({ name, label, rules = {}, onSwitchChange, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (onSwitchChange) {\n      onSwitchChange(event.target.checked);\n    }\n  };\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <FormControlLabel\n            control={\n              <Switch\n                {...props}\n                {...field}\n                value={field.value}\n                checked={field.value}\n                onChange={(event) => {\n                  field.onChange(event);\n                  onChange(event);\n                }}\n              />\n            }\n            label={\n              <Typography>{label}</Typography>\n            }\n            labelPlacement='start'\n            sx={{\n              '&.MuiFormControlLabel-root': {\n                margin: 0\n              }\n            }}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSwitch;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { useTranslation } from 'core/i18n';\nimport date, { LocalizedDate } from 'core/date';\nimport { useAppSelector } from 'store';\nimport { Currency, Invoice, InvoiceField, ManageMode } from 'shared/models';\nimport { getPreviousMonthIndex, invoiceHelper } from 'shared/helpers';\nimport { CURRENCIES, MONTHS, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\nimport FormSwitch from 'shared/components/FormSwitch';\nimport FormDatePicker from 'shared/components/FormDatePicker';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  loading: boolean;\n  mode: ManageMode;\n  onSubmit: (formData: Invoice) => void;\n  onPreview: (formData: Invoice) => void;\n  passResetFormFunc: (cb: Function) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, loading, mode, onPreview, onSubmit, passResetFormFunc }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = CURRENCIES.filter((currency) => currency.iso !== iso);\n  const months = MONTHS;\n  const defaultMonth = months.find((month) => month.index === getPreviousMonthIndex());\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n\n  const defaultValues: Partial<Invoice> = {\n    name: `${t('INVOICES.INVOICE')}_${t(defaultMonth?.nameKey || '') || defaultMonth?.name}`,\n    salary: '',\n    currencyIso: isCreateMode ? 'USD' : data.currencyIso || '' as Currency['iso'],\n    month: isCreateMode ? defaultMonth?.index : (data.month || defaultMonth?.index),\n    createdAt: isCreateMode ? date().format() : data.createdAt,\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit, watch, reset } = methods;\n\n  const watchCreatedAt = watch(InvoiceField.createdAt);\n\n  React.useEffect(() => {\n    if (data) {\n      Object.keys(data).forEach((key) => {\n        setValue(key as keyof Invoice, (data as Invoice)[key as keyof Invoice]);\n      });\n    }\n\n    setVatIncluded(!!data.vatIncluded);\n  }, [data, setValue]);\n\n  const handleVatIncludedChange = (checked: boolean): void => {\n    setVatIncluded(checked);\n    setValue(InvoiceField.vatIncluded, checked);\n  };\n\n  const handleDatePickerChange = (value: LocalizedDate | null): void => {\n    setValue(InvoiceField.createdAt, value!.format(), { shouldValidate: true });\n  };\n\n  const handleFormPreview = (data: Invoice): void => {\n    onPreview(data);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    onSubmit(data);\n  };\n\n  const clearState = (): void => {\n    isCreateMode ? reset(defaultValues) : reset(data);\n  };\n\n  passResetFormFunc(clearState);\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.name}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.name.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.MONTH')}\n                    name={InvoiceField.month}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.month.required!.message)\n                      }\n                    }}\n                  >\n                    {months.map((month) => (\n                      <MenuItem key={month.index} value={month.index}>{t(month.nameKey) || month.name}</MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormDatePicker\n                    disableFuture\n                    readOnly={isViewMode}\n                    name={InvoiceField.createdAt}\n                    label={t('COMMON.DATE')}\n                    value={date(watchCreatedAt).isValid() ? date(watchCreatedAt) : null}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.createdAt.required!.message),\n                      },\n                      validate: {\n                        maxDate: (value: string) =>\n                          Promise.resolve(date(value) <= date() || t(helper.createdAt.max!.message)),\n                      }\n                    }}\n                    onChange={handleDatePickerChange}\n                    sx={{ width: '100%' }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitch\n                    name={InvoiceField.vatIncluded}\n                    label={t('INVOICES.INCLUDE_VAT')}\n                    checked={vatIncluded}\n                    disabled={isViewMode}\n                    onSwitchChange={handleVatIncludedChange}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          {!isViewMode && (\n            <>\n              <Grid item xs={12}>\n                <Button aria-label='Preview invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormPreview)}>\n                  {t('COMMON.PREVIEW')}\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Button aria-label='Save invoice' fullWidth variant='contained' loading={loading} onClick={handleSubmit(handleFormSubmit)}>\n                  {t('COMMON.SAVE')}\n                </Button>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20,\n    borderWidth: 0\n  },\n  name: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40,\n    border: '1px solid #000'\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tableCol: {\n    borderRight: '1px solid #000',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '12%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '6%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  },\n  noBorder: {\n    border: 'none'\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport {\n  Currency,\n  Invoice,\n  InvoiceAmount\n} from 'shared/models';\nimport {\n  getDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getPreviousMonthLongName,\n  mapInvoiceAmountDTO\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n  defaultCurrency: Currency;\n  saleDate: string;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data, defaultCurrency, saleDate }) => {\n  const { t } = useTranslation();\n  const amount = data.amount ? mapInvoiceAmountDTO(data.amount) : {} as InvoiceAmount;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.name}>{data.name}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDate(data.createdAt!)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{saleDate}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? `${amount?.vatRate}%` : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{amount?.gross}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{defaultCurrency.iso}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {amount?.gross} {defaultCurrency.iso}</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","// InvoiceContent.js\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice } from 'shared/models';\nimport Loading from 'layout/Loading';\nimport Button from 'shared/components/Button';\nimport { StyledPDFViewer } from './PDFViewer.styles';\nimport InvoiceDocument from './InvoiceDocument';\n\ninterface PDFViewerProps {\n  isAndroid: boolean;\n  invoiceData: Partial<Invoice>;\n  date: string;\n  defaultCurrency: Currency;\n}\n\nconst PDFViewer: React.FC<PDFViewerProps> = ({ isAndroid, invoiceData, date, defaultCurrency }) => {\n  const { t } = useTranslation();\n  const { palette: { info: { contrastText } } } = useTheme();\n\n  if (isAndroid) {\n    return (\n      <PDFDownloadLink\n        document={<InvoiceDocument data={invoiceData} saleDate={date} defaultCurrency={defaultCurrency} />}\n        fileName={invoiceData.name}\n      >\n        {({ loading }) =>\n          loading ? (\n            <Loading />\n          ) : (\n            <Box sx={{ marginY: 2 }}>\n              <Typography variant='subtitle1' color={contrastText}>\n                {t('INVOICES.DOCUMENT.UNSUPPORTED_DEVICE')}\n              </Typography>\n              <Button\n                aria-label='Download'\n                fullWidth\n                color='secondary'\n                variant='contained'\n                sx={{ marginTop: 2 }}\n              >\n                {t('COMMON.DOWNLOAD')}\n              </Button>\n            </Box>\n          )\n        }\n      </PDFDownloadLink>\n    );\n  }\n\n  return (\n    <StyledPDFViewer style={{ width: '100%', height: '100vh' }}>\n      <InvoiceDocument data={invoiceData} saleDate={date} defaultCurrency={defaultCurrency} />\n    </StyledPDFViewer>\n  );\n};\n\nexport default PDFViewer;\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createInvoice,\n  deleteInvoice,\n  editInvoice,\n  getInvoice,\n  getProfile,\n  resetCreateEditInvoiceStatus,\n  resetGetInvoiceStatus,\n  resetInvoiceAmount,\n  selectCurrentInvoice,\n  selectInvoice,\n  selectInvoiceAmount,\n  selectInvoiceError,\n  selectInvoiceRate,\n  selectProfile,\n  selectSettings,\n  selectUser,\n  setGetInvoiceErrorStatus,\n  setInvoiceAmount\n} from 'store/reducers';\nimport { InvoiceAmount, Invoice, InvoiceDTO, ManageMode } from 'shared/models';\nimport { calculateAmount, getPageTitle, mapInvoiceAmountDTO, mapInvoiceDTO, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport Snackbar from 'shared/components/Snackbar';\nimport Dialog from 'shared/components/Dialog';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Device from 'shared/components/Device';\nimport InvoiceForm from '../components/InvoiceForm';\nimport PDFViewer from '../components/PDFViewer';\n\ninterface CreateEditInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<CreateEditInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { getStatus, createEditStatus, deleteStatus } = useAppSelector(selectInvoice);\n  const { rates, date } = useAppSelector(selectInvoiceRate);\n  const amount = useAppSelector(selectInvoiceAmount);\n  const invoice = useAppSelector(selectCurrentInvoice);\n  const error = useAppSelector(selectInvoiceError);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const { defaultCurrency } = useAppSelector(selectSettings);\n  const dispatch = useAppDispatch();\n  const { state } = useLocation();\n  const invoiceId = state?.id as InvoiceDTO['id'];\n  const loading = createEditStatus === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n  const [invoiceData, setInvoiceData] = React.useState<Partial<Invoice>>({});\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const title = getPageTitle<Invoice>(mode, t, getStatus, 'INVOICES', 'NEW_INVOICE', 'EMPTY_TITLE', invoice);\n  let resetForm: Function = () => null;\n\n  const handleFormPreview = (data: Invoice): void => {\n    const amount = getAmount(data);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const amount = getAmount(data);\n    const mappedData = mapInvoiceDTO({ ...data, amount });\n    const amountDTO = mapInvoiceAmountDTO(amount);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n    setFormSubmitted(true);\n\n    isEditMode\n      ? dispatch(editInvoice([invoiceId, { ...mappedData, amount: amountDTO }]))\n      : dispatch(createInvoice({ ...mappedData, amount: amountDTO }));\n  };\n\n  const assignResetForm = (resetFormFunc: Function): void => {\n    resetForm = resetFormFunc;\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.invoices.path}/edit/${invoice?.name}`, { state: { id: invoiceId } });\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isCreateMode ? setInvoiceData({}) : setInvoiceData(invoiceData);\n    resetForm();\n\n    isCreateMode\n      ? navigate(ROUTES.invoices.path)\n      : navigate(`${ROUTES.invoices.path}/view/${invoice?.name}`, { state: { id: invoiceId } });\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleDeleteInvoice = (): void => {\n    dispatch(deleteInvoice(invoiceId));\n    setDeleteClicked(true);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const getAmount = (data: Invoice): InvoiceAmount => {\n    const { salary, vatIncluded, currencyIso } = data;\n    const rate = rates.find((rate) => rate.code === currencyIso)?.value;\n\n    return calculateAmount(defaultCurrency.iso, rate, Number(salary), vatIncluded);\n  };\n\n  const resetInvoice = React.useCallback(() => {\n    dispatch(resetGetInvoiceStatus());\n    dispatch(resetInvoiceAmount());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n    resetInvoice();\n    setInvoiceData({});\n  }, [navigate, resetInvoice]);\n\n  React.useEffect(() => {\n    if (createEditStatus === 'succeeded' && formSubmitted) {\n      setShowSnackbar(false);\n      dispatch(resetCreateEditInvoiceStatus());\n      goBack();\n    }\n\n    if (createEditStatus === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [dispatch, goBack, createEditStatus, formSubmitted]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (!invoiceId) {\n      dispatch(setGetInvoiceErrorStatus());\n    }\n  }, [invoiceId, dispatch]);\n\n  React.useEffect(() => {\n    if (invoiceId && getStatus === 'idle' && !isCreateMode && !deleteClicked) {\n      dispatch(getInvoice(invoiceId));\n    }\n  }, [invoiceId, isCreateMode, getStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoice && getStatus === 'succeeded' && (isEditMode || isViewMode)) {\n      setInvoiceData(invoice);\n    }\n  }, [invoice, isEditMode, isViewMode, getStatus, dispatch]);\n\n  const renderContent = (): React.ReactElement => {\n    if (getStatus === 'loading') {\n      return <Skeleton type='form' />;\n    }\n\n    if (!isCreateMode && (!invoice || !invoiceId) && getStatus === 'failed') {\n      return <EmptyState text={t('INVOICES.EMPTY_TEXT_RENDER_CONTENT')} />;\n    }\n\n    return (\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm\n            data={invoiceData}\n            loading={loading}\n            mode={mode}\n            onPreview={handleFormPreview}\n            onSubmit={handleFormSubmit}\n            passResetFormFunc={assignResetForm}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Device>\n            {({ isAndroid }) => (\n              <PDFViewer isAndroid={isAndroid} invoiceData={invoiceData} date={date} defaultCurrency={defaultCurrency} />\n            )}\n          </Device>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!invoice}\n        withDeleteButton={isEditMode && !!invoice}\n        withCancelButton={!isViewMode && !!invoice}\n        text={title}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      {renderContent()}\n      <Snackbar type='error' open={showSnackbar} text={error?.messageKey ? t(error.messageKey) : error?.message || ''} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('INVOICES.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteInvoice}\n      >\n        <Typography variant='subtitle1'>\n          {t('INVOICES.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import * as React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { DatePicker as MuiDatePicker, DatePickerProps as MuiDatePickerProps } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizedDate } from 'core/date';\nimport { FormControlRules } from 'shared/models';\n\ntype FormDatePickerProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & MuiDatePickerProps<LocalizedDate>;\n\nconst FormDatePicker: React.FC<FormDatePickerProps> = ({ name, label, rules = {}, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DemoContainer sx={{ ...props.sx, paddingTop: 2, overflow: 'initial' }} components={['DatePicker']}>\n        <Controller\n          control={control}\n          name={name}\n          rules={rules}\n          render={({ field, fieldState: { error } }) => (\n            <Box position='relative' sx={{ width: '100%' }}>\n              <InputLabel>{label}</InputLabel>\n              <MuiDatePicker\n                {...field}\n                {...props} />\n              {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n            </Box>\n          )}\n        />\n      </DemoContainer>\n    </LocalizationProvider>\n  );\n};\n\nexport default FormDatePicker;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n"],"names":["_ref","_MONTHS$find","data","onClick","palette","primary","main","contrastText","useTheme","t","useTranslation","name","amount","month","buyerName","monthName","MONTHS","find","_ref2","index","Number","nameKey","_jsx","Paper","elevation","sx","paddingX","backgroundColor","children","_jsxs","Grid","container","display","alignItems","justifyContent","flexGrow","columnSpacing","borderRadius","minHeight","cursor","onInvoiceClick","item","xs","Icon","IconType","receipt","fontSize","sm","color","Typography","noWrap","gross","InvoiceList","navigate","useNavigate","dispatch","useAppDispatch","invoices","status","useAppSelector","selectInvoice","handleInvoiceItemClick","id","concat","ROUTES","path","state","React","getInvoices","Box","PageTitle","text","rowGap","marginTop","Skeleton","type","length","_Fragment","map","invoice","Invoice","EmptyState","IconButton","openNewInvoicePage","alignSelf","plus","props","rdd","label","rules","onSwitchChange","control","formState","errors","useFormContext","Controller","render","field","fieldState","error","position","FormControlLabel","Switch","value","checked","onChange","event","target","labelPlacement","margin","FormHelperText","message","loading","mode","onPreview","onSubmit","passResetFormFunc","helper","invoiceHelper","defaultCurrency","iso","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","CURRENCIES","filter","currency","months","defaultMonth","getPreviousMonthIndex","vatIncluded","setVatIncluded","isViewMode","ManageMode","view","isCreateMode","create","defaultValues","salary","currencyIso","createdAt","date","format","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerAddress","buyerLocation","buyerVatID","methods","useForm","reValidateMode","setValue","handleSubmit","watch","reset","watchCreatedAt","InvoiceField","Object","keys","forEach","key","handleFormSubmit","clearState","FormProvider","gap","paddingTop","paddingBottom","width","marginBottom","FormInput","inputProps","readOnly","required","pattern","FormSelect","symbol","MenuItem","CurrencyInfoItem","FormDatePicker","disableFuture","isValid","validate","maxDate","Promise","resolve","max","shouldValidate","FormSwitch","disabled","Button","fullWidth","variant","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","Font","register","family","fonts","src","fontWeight","styles","StyleSheet","page","fontFamily","padding","borderWidth","textAlign","heading","flexDirection","marginRight","account","sellerBuyer","seller","flex","buyer","table","border","headerRow","bodyRow","tableCol","borderRight","height","noCol","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","total","vatExemption","noBorder","chunkTextComponent","size","Text","style","hyphenationCallback","chunkSubstring","str","numChunks","Math","ceil","chunks","Array","i","o","substring","saleDate","mapInvoiceAmountDTO","Document","Page","View","getFirstDateOfPreviousMonth","getDate","getDayOfCurrentMonth","getPreviousMonthLongName","net","vatRate","vatAmount","isAndroid","invoiceData","info","PDFDownloadLink","document","InvoiceDocument","fileName","Loading","marginY","getStatus","createEditStatus","deleteStatus","rates","selectInvoiceRate","selectInvoiceAmount","selectCurrentInvoice","selectInvoiceError","profileStatus","userProfile","selectProfile","user","selectUser","useLocation","invoiceId","deleteLoading","isEditMode","edit","setInvoiceData","formSubmitted","setFormSubmitted","deleteClicked","setDeleteClicked","dialogOpened","setDialogOpened","showSnackbar","setShowSnackbar","title","getPageTitle","resetForm","handleFormPreview","getAmount","setInvoiceAmount","mappedData","mapInvoiceDTO","amountDTO","editInvoice","createInvoice","assignResetForm","resetFormFunc","_rates$find","rate","code","calculateAmount","resetInvoice","resetGetInvoiceStatus","resetInvoiceAmount","goBack","resetCreateEditInvoiceStatus","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","setGetInvoiceErrorStatus","getInvoice","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","handleEditButtonClick","onDeleteButtonClick","handleOpenDialog","onCancelButtonClick","handleCancelButtonClick","rowSpacing","InvoiceForm","Device","Snackbar","open","messageKey","onClose","handleSnackbarClose","Dialog","maxWidth","actionButtonText","handleCloseDialog","onAction","handleDeleteInvoice","deleteInvoice","Invoices","Routes","Route","element","CreateEditInvoice","Navigate","to","replace","textValue","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","overflow","components","InputLabel","MuiDatePicker","StyledTextField","TextField","theme","Select","isForm","getSize","firstBar","secondBar","thirdBar","columnGap","MuiSkeleton","animation","MuiSnackbar","autoHideDuration","onSnackbarClose","MuiAlert","severity"],"sourceRoot":""}