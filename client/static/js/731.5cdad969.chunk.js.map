{"version":3,"file":"static/js/731.5cdad969.chunk.js","mappings":"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","sources":["modules/Invoices/components/Invoice.tsx","modules/Invoices/pages/InvoiceList.tsx","shared/components/Device.tsx","shared/components/FormSwitch.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/components/PDFViewer.styles.ts","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/PDFViewer.tsx","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/EmptyState.tsx","shared/components/FormDatePicker.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/Skeleton.tsx","shared/components/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, IconType, Invoice as InvoiceModel } from 'shared/models';\nimport { MONTHS } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\n\ninterface InvoiceProps {\n  data: InvoiceModel;\n  defaultCurrency: Currency;\n  onClick?: (data: InvoiceModel) => void;\n}\n\nconst Invoice: React.FC<InvoiceProps> = ({ data, defaultCurrency, onClick }) => {\n  const { palette: { primary: { main, contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const { name, salary, amount, currencyIso, month } = data;\n  const monthName = MONTHS.find(({ index }) => index === Number(month))?.nameKey || '';\n\n  const onInvoiceClick = (): void => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ paddingX: 2, backgroundColor: main }}>\n      <Grid container display='flex' alignItems='center' justifyContent='space-between' flexGrow={1} columnSpacing={2}\n        sx={{\n          borderRadius: 1,\n          minHeight: 40,\n          cursor: 'pointer'\n        }}\n        onClick={onInvoiceClick}>\n        <Grid item xs={1} display='flex'>\n          <Icon name={IconType.receipt} sx={{ fontSize: { sm: 22, xs: 18 }, color: contrastText }}></Icon>\n        </Grid>\n        <Grid item xs={4} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{name}</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{t(monthName)}</Typography>\n        </Grid>\n        <Grid item xs={3} display='flex'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{amount?.gross}</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-end'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{salary} {currencyIso}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Invoice;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getInvoices, selectCurrency, selectInvoice } from 'store/reducers';\nimport { ROUTES } from 'shared/constants';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Invoice from '../components/Invoice';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { invoices, status } = useAppSelector(selectInvoice);\n  const defaultCurrency = useAppSelector(selectCurrency);\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  const handleInvoiceItemClick = ({ id, name }: InvoiceModel): void => {\n    navigate(`${ROUTES.invoices.path}/view/${name}`, { state: { id } });\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getInvoices());\n    }\n  }, [dispatch, status]);\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !invoices?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('INVOICES.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {\n          invoices.map((invoice) => (\n            <Grid item key={invoice.id} xs={12}>\n              <Invoice data={invoice} defaultCurrency={defaultCurrency} onClick={handleInvoiceItemClick} />\n            </Grid>\n          ))\n        }\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Grid item xs={12} display='flex' justifyContent='flex-end'>\n          <IconButton aria-label='Add invoice' color='primary' onClick={openNewInvoicePage} sx={{ alignSelf: 'flex-end' }}>\n            <Icon name={IconType.plus} sx={{ fontSize: 40 }}></Icon>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import * as React from 'react';\nimport * as rdd from 'react-device-detect';\nimport Box from '@mui/material/Box';\n\ntype DeviceProps = {\n  children: (props: typeof rdd) => React.ReactNode;\n};\n\nconst Device: React.FC<DeviceProps> = ({ ...props }) => {\n  return (\n    <Box>\n      {props.children(rdd)}\n    </Box>\n  );\n};\n\nexport default Device;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Typography from '@mui/material/Typography';\nimport { FormControlRules } from 'shared/models';\n\ntype FormSwitchProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n  onSwitchChange?: (checked: boolean) => void;\n} & SwitchProps;\n\nconst FormSwitch: React.FC<FormSwitchProps> = ({ name, label, rules = {}, onSwitchChange, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (onSwitchChange) {\n      onSwitchChange(event.target.checked);\n    }\n  };\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <FormControlLabel\n            control={\n              <Switch\n                {...props}\n                {...field}\n                value={field.value}\n                checked={field.value}\n                onChange={(event) => {\n                  field.onChange(event);\n                  onChange(event);\n                }}\n              />\n            }\n            label={\n              <Typography>{label}</Typography>\n            }\n            labelPlacement='start'\n            sx={{\n              '&.MuiFormControlLabel-root': {\n                margin: 0\n              }\n            }}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSwitch;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { useTranslation } from 'core/i18n';\nimport date, { LocalizedDate } from 'core/date';\nimport { useAppSelector } from 'store';\nimport { Currency, Invoice, InvoiceField, ManageMode } from 'shared/models';\nimport { getPreviousMonthIndex, invoiceHelper } from 'shared/helpers';\nimport { CURRENCIES, MONTHS, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\nimport FormSwitch from 'shared/components/FormSwitch';\nimport FormDatePicker from 'shared/components/FormDatePicker';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  loading: boolean;\n  mode: ManageMode;\n  onSubmit: (formData: Invoice) => void;\n  onPreview: (formData: Invoice) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, loading, mode, onPreview, onSubmit }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = CURRENCIES.filter((currency) => currency.iso !== iso);\n  const months = MONTHS;\n  const defaultMonth = months.find((month) => month.index === getPreviousMonthIndex());\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n\n  const defaultValues: Partial<Invoice> = {\n    name: `${t('INVOICES.INVOICE')}_${t(defaultMonth?.nameKey || '') || defaultMonth?.name}`,\n    salary: '',\n    currencyIso: isCreateMode ? 'USD' : data.currencyIso || '' as Currency['iso'],\n    month: isCreateMode ? defaultMonth?.index : (data.month || defaultMonth?.index),\n    createdAt: isCreateMode ? date().format() : data.createdAt,\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit, watch } = methods;\n\n  const watchCreatedAt = watch(InvoiceField.createdAt);\n\n  React.useEffect(() => {\n    Object.keys(data).forEach((key) => {\n      setValue(key as keyof Invoice, (data as Invoice)[key as keyof Invoice]);\n    });\n\n    setVatIncluded(!!data.vatIncluded);\n  }, [data, setValue]);\n\n  const handleVatIncludedChange = (checked: boolean): void => {\n    setVatIncluded(checked);\n    setValue(InvoiceField.vatIncluded, checked);\n  };\n\n  const handleDatePickerChange = (value: LocalizedDate | null): void => {\n    setValue(InvoiceField.createdAt, value!.format(), { shouldValidate: true });\n  };\n\n  const handleFormPreview = (data: Invoice): void => {\n    onPreview(data);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    onSubmit(data);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.name}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.name.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.MONTH')}\n                    name={InvoiceField.month}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.month.required!.message)\n                      }\n                    }}\n                  >\n                    {months.map((month) => (\n                      <MenuItem key={month.index} value={month.index}>{t(month.nameKey) || month.name}</MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormDatePicker\n                    readOnly={isViewMode}\n                    name={InvoiceField.createdAt}\n                    label={t('COMMON.DATE')}\n                    value={date(watchCreatedAt).isValid() ? date(watchCreatedAt) : null}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.createdAt.required!.message)\n                      }\n                    }}\n                    onChange={handleDatePickerChange}\n                    sx={{ width: '100%' }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitch\n                    name={InvoiceField.vatIncluded}\n                    label={t('INVOICES.INCLUDE_VAT')}\n                    checked={vatIncluded}\n                    disabled={isViewMode}\n                    onSwitchChange={handleVatIncludedChange}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          {!isViewMode && (\n            <>\n              <Grid item xs={12}>\n                <Button aria-label='Preview invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormPreview)}>\n                  {t('COMMON.PREVIEW')}\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Button aria-label='Save invoice' fullWidth variant='contained' loading={loading} onClick={handleSubmit(handleFormSubmit)}>\n                  {t('COMMON.SAVE')}\n                </Button>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20,\n    borderWidth: 0\n  },\n  name: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40,\n    border: '1px solid #000'\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tableCol: {\n    borderRight: '1px solid #000',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '12%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '6%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  },\n  noBorder: {\n    border: 'none'\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice, InvoiceAmount } from 'shared/models';\nimport {\n  getDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getPreviousMonthLongName,\n  mapInvoiceAmountToLocaleString\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n  defaultCurrency: Currency;\n  saleDate: string;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data, defaultCurrency, saleDate }) => {\n  const { t } = useTranslation();\n  const amount = data.amount ? mapInvoiceAmountToLocaleString(data.amount) : {} as InvoiceAmount;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.name}>{data.name}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDate(data.createdAt!)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{saleDate}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{  ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? `${amount?.vatRate}%` : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{amount?.gross}</Text>\n            </View>\n            <View style={{  ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{defaultCurrency.iso}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {amount?.gross} {defaultCurrency.iso}</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","// InvoiceContent.js\nimport React from 'react';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice } from 'shared/models';\nimport Loading from 'layout/Loading';\nimport Button from 'shared/components/Button';\nimport { StyledPDFViewer } from './PDFViewer.styles';\nimport InvoiceDocument from './InvoiceDocument';\n\ninterface PDFViewerProps {\n  isAndroid: boolean;\n  invoiceData: Partial<Invoice>;\n  date: string;\n  defaultCurrency: Currency;\n}\n\nconst PDFViewer: React.FC<PDFViewerProps> = ({ isAndroid, invoiceData, date, defaultCurrency }) => {\n  const { t } = useTranslation();\n  const { palette: { info: { contrastText } } } = useTheme();\n\n  if (isAndroid) {\n    return (\n      <PDFDownloadLink\n        document={<InvoiceDocument data={invoiceData} saleDate={date} defaultCurrency={defaultCurrency} />}\n        fileName={invoiceData.name}\n      >\n        {({ loading }) =>\n          loading ? (\n            <Loading />\n          ) : (\n            <Box sx={{ marginY: 2 }}>\n              <Typography variant='subtitle1' color={contrastText}>\n                {t('INVOICES.DOCUMENT.UNSUPPORTED_DEVICE')}\n              </Typography>\n              <Button\n                aria-label='Download'\n                fullWidth\n                color='secondary'\n                variant='contained'\n                sx={{ marginTop: 2 }}\n              >\n                {t('COMMON.DOWNLOAD')}\n              </Button>\n            </Box>\n          )\n        }\n      </PDFDownloadLink>\n    );\n  }\n\n  return (\n    <StyledPDFViewer style={{ width: '100%', height: '100vh' }}>\n      <InvoiceDocument data={invoiceData} saleDate={date} defaultCurrency={defaultCurrency} />\n    </StyledPDFViewer>\n  );\n};\n\nexport default PDFViewer;\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createInvoice,\n  deleteInvoice,\n  editInvoice,\n  getInvoice,\n  getProfile,\n  resetCreateEditInvoiceStatus,\n  resetGetInvoiceStatus,\n  resetInvoiceAmount,\n  selectCurrentInvoice,\n  selectInvoice,\n  selectInvoiceAmount,\n  selectInvoiceError,\n  selectInvoiceRate,\n  selectProfile,\n  selectSettings,\n  selectUser,\n  setGetInvoiceErrorStatus,\n  setInvoiceAmount\n} from 'store/reducers';\nimport { InvoiceAmount, Invoice, InvoiceDTO, ManageMode } from 'shared/models';\nimport { calculateAmount, getPageTitle, mapInvoiceAmountDTO, mapInvoiceDTO, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport Snackbar from 'shared/components/Snackbar';\nimport Dialog from 'shared/components/Dialog';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Device from 'shared/components/Device';\nimport InvoiceForm from '../components/InvoiceForm';\nimport PDFViewer from '../components/PDFViewer';\n\ninterface CreateEditInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<CreateEditInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { getStatus, createEditStatus, deleteStatus } = useAppSelector(selectInvoice);\n  const { rates, date } = useAppSelector(selectInvoiceRate);\n  const amount = useAppSelector(selectInvoiceAmount);\n  const invoice = useAppSelector(selectCurrentInvoice);\n  const error = useAppSelector(selectInvoiceError);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const { defaultCurrency } = useAppSelector(selectSettings);\n  const dispatch = useAppDispatch();\n  const { state } = useLocation();\n  const invoiceId = state?.id as InvoiceDTO['id'];\n  const loading = createEditStatus === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n  const [invoiceData, setInvoiceData] = React.useState<Partial<Invoice>>({});\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const title = getPageTitle<Invoice>(mode, t, getStatus, 'INVOICES', 'NEW_INVOICE', 'EMPTY_TITLE', invoice);\n\n  const handleFormPreview = (data: Invoice): void => {\n    const mappedData = mapInvoiceDTO(data);\n    const amount = getAmount(mappedData);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const mappedData = mapInvoiceDTO(data);\n    const amount = getAmount(mappedData);\n    const amountDTO = mapInvoiceAmountDTO(amount);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n    setFormSubmitted(true);\n    isEditMode\n      ? dispatch(editInvoice([invoiceId, { ...mappedData, amount: amountDTO }]))\n      : dispatch(createInvoice({ ...mappedData, amount: amountDTO }));\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.invoices.path}/edit/${invoice?.name}`, { state: { id: invoiceId } });\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isEditMode\n      ? navigate(`${ROUTES.invoices.path}/view/${invoice?.name}`, { state: { id: invoiceId } })\n      : navigate(ROUTES.invoices.path);\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleDeleteInvoice = (): void => {\n    dispatch(deleteInvoice(invoiceId));\n    setDeleteClicked(true);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const getAmount = (data: InvoiceDTO): InvoiceAmount => {\n    const { salary, vatIncluded, currencyIso } = data;\n    const rate = rates.find((rate) => rate.code === currencyIso)?.value;\n\n    return calculateAmount(defaultCurrency.iso, rate, Number(salary), vatIncluded);\n  };\n\n  const resetInvoice = React.useCallback(() => {\n    dispatch(resetGetInvoiceStatus());\n    dispatch(resetInvoiceAmount());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n    resetInvoice();\n    setInvoiceData({});\n  }, [navigate, resetInvoice]);\n\n  React.useEffect(() => {\n    if (createEditStatus === 'succeeded' && formSubmitted) {\n      setShowSnackbar(false);\n      dispatch(resetCreateEditInvoiceStatus());\n      goBack();\n    }\n\n    if (createEditStatus === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [dispatch, goBack, createEditStatus, formSubmitted]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (!invoiceId) {\n      dispatch(setGetInvoiceErrorStatus());\n    }\n  }, [invoiceId, dispatch]);\n\n  React.useEffect(() => {\n    if (invoiceId && getStatus === 'idle' && !isCreateMode && !deleteClicked) {\n      dispatch(getInvoice(invoiceId));\n    }\n  }, [invoiceId, isCreateMode, getStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoice && getStatus === 'succeeded' && (isEditMode || isViewMode)) {\n      setInvoiceData(invoice);\n    }\n  }, [invoice, isEditMode, isViewMode, getStatus, dispatch]);\n\n  const renderContent = (): React.ReactElement => {\n    if (getStatus === 'loading') {\n      return <Skeleton type='form' />;\n    }\n\n    if (!isCreateMode && (!invoice || !invoiceId) && getStatus === 'failed') {\n      return <EmptyState text={t('INVOICES.EMPTY_TEXT_RENDER_CONTENT')} />;\n    }\n\n    return (\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm\n            data={invoiceData}\n            loading={loading}\n            mode={mode}\n            onPreview={handleFormPreview}\n            onSubmit={handleFormSubmit}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Device>\n            {({ isAndroid }) => (\n              <PDFViewer isAndroid={isAndroid} invoiceData={invoiceData} date={date} defaultCurrency={defaultCurrency} />\n            )}\n          </Device>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!invoice}\n        withDeleteButton={isEditMode && !!invoice}\n        withCancelButton={!isViewMode && !!invoice}\n        text={title}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      {renderContent()}\n      <Snackbar type='error' open={showSnackbar} text={error?.messageKey ? t(error.messageKey) : error?.message || ''} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('INVOICES.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteInvoice}\n      >\n        <Typography variant='subtitle1'>\n          {t('INVOICES.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import * as React from 'react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { DatePicker as MuiDatePicker, DatePickerProps as MuiDatePickerProps } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizedDate } from 'core/date';\nimport { FormControlRules } from 'shared/models';\n\ntype FormDatePickerProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & MuiDatePickerProps<LocalizedDate>;\n\nconst FormDatePicker: React.FC<FormDatePickerProps> = ({ name, label, rules = {}, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DemoContainer sx={{ ...props.sx, paddingTop: 2, overflow: 'initial' }} components={['DatePicker']}>\n        <Controller\n          control={control}\n          name={name}\n          rules={rules}\n          render={({ field, fieldState: { error } }) => (\n            <Box position='relative' sx={{ width: '100%' }}>\n              <InputLabel>{label}</InputLabel>\n              <MuiDatePicker\n                {...field}\n                {...props} />\n              {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n            </Box>\n          )}\n        />\n      </DemoContainer>\n    </LocalizationProvider>\n  );\n};\n\nexport default FormDatePicker;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n"],"names":["_ref","_MONTHS$find","data","defaultCurrency","onClick","palette","primary","main","contrastText","useTheme","t","useTranslation","name","salary","amount","currencyIso","month","monthName","MONTHS","find","_ref2","index","Number","nameKey","_jsx","Paper","elevation","sx","paddingX","backgroundColor","children","_jsxs","Grid","container","display","alignItems","justifyContent","flexGrow","columnSpacing","borderRadius","minHeight","cursor","onInvoiceClick","item","xs","Icon","IconType","receipt","fontSize","sm","color","Typography","noWrap","gross","InvoiceList","navigate","useNavigate","dispatch","useAppDispatch","invoices","status","useAppSelector","selectInvoice","selectCurrency","handleInvoiceItemClick","id","concat","ROUTES","path","state","React","getInvoices","Box","PageTitle","text","rowGap","marginTop","Skeleton","type","length","_Fragment","map","invoice","Invoice","EmptyState","IconButton","openNewInvoicePage","alignSelf","plus","props","rdd","label","rules","onSwitchChange","control","formState","errors","useFormContext","Controller","render","field","fieldState","error","position","FormControlLabel","Switch","value","checked","onChange","event","target","labelPlacement","margin","FormHelperText","message","loading","mode","onPreview","onSubmit","helper","invoiceHelper","iso","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","CURRENCIES","filter","currency","months","defaultMonth","getPreviousMonthIndex","vatIncluded","setVatIncluded","isViewMode","ManageMode","view","isCreateMode","create","defaultValues","createdAt","date","format","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerName","buyerAddress","buyerLocation","buyerVatID","methods","useForm","reValidateMode","setValue","handleSubmit","watch","watchCreatedAt","InvoiceField","Object","keys","forEach","key","handleFormSubmit","FormProvider","gap","paddingTop","paddingBottom","width","marginBottom","FormInput","inputProps","readOnly","required","pattern","FormSelect","symbol","MenuItem","CurrencyInfoItem","FormDatePicker","isValid","shouldValidate","FormSwitch","disabled","Button","fullWidth","variant","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","Font","register","family","fonts","src","fontWeight","styles","StyleSheet","page","fontFamily","padding","borderWidth","textAlign","heading","flexDirection","marginRight","account","sellerBuyer","seller","flex","buyer","table","border","headerRow","bodyRow","tableCol","borderRight","height","noCol","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","total","vatExemption","noBorder","chunkTextComponent","size","Text","style","hyphenationCallback","chunkSubstring","str","numChunks","Math","ceil","chunks","Array","i","o","substring","saleDate","mapInvoiceAmountToLocaleString","Document","Page","View","getFirstDateOfPreviousMonth","getDate","getDayOfCurrentMonth","getPreviousMonthLongName","net","vatRate","vatAmount","isAndroid","invoiceData","info","PDFDownloadLink","document","InvoiceDocument","fileName","Loading","marginY","getStatus","createEditStatus","deleteStatus","rates","selectInvoiceRate","selectInvoiceAmount","selectCurrentInvoice","selectInvoiceError","profileStatus","userProfile","selectProfile","user","selectUser","useLocation","invoiceId","deleteLoading","isEditMode","edit","setInvoiceData","formSubmitted","setFormSubmitted","deleteClicked","setDeleteClicked","dialogOpened","setDialogOpened","showSnackbar","setShowSnackbar","title","getPageTitle","handleFormPreview","mappedData","mapInvoiceDTO","getAmount","setInvoiceAmount","amountDTO","mapInvoiceAmountDTO","editInvoice","createInvoice","_rates$find","rate","code","calculateAmount","resetInvoice","resetGetInvoiceStatus","resetInvoiceAmount","goBack","resetCreateEditInvoiceStatus","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","setGetInvoiceErrorStatus","getInvoice","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","handleEditButtonClick","onDeleteButtonClick","handleOpenDialog","onCancelButtonClick","handleCancelButtonClick","rowSpacing","InvoiceForm","Device","Snackbar","open","messageKey","onClose","handleSnackbarClose","Dialog","maxWidth","actionButtonText","handleCloseDialog","onAction","handleDeleteInvoice","deleteInvoice","Invoices","Routes","Route","element","CreateEditInvoice","Navigate","to","replace","textValue","LocalizationProvider","dateAdapter","AdapterDayjs","DemoContainer","overflow","components","InputLabel","MuiDatePicker","StyledTextField","TextField","theme","Select","isForm","getSize","firstBar","secondBar","thirdBar","columnGap","MuiSkeleton","animation","MuiSnackbar","autoHideDuration","onSnackbarClose","MuiAlert","severity"],"sourceRoot":""}