{"version":3,"file":"static/js/133.6a375be3.chunk.js","mappings":"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","sources":["modules/Invoices/pages/InvoiceList.tsx","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/pages/CreateEditInvoice.styles.ts","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/EmptyState.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport { useTranslation } from 'core/i18n';\nimport { useAppSelector } from 'store';\nimport { selectInvoice } from 'store/reducers';\nimport { ROUTES } from 'shared/constants';\nimport { IconType } from 'shared/models';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport Button from 'shared/components/Button';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { invoices, status } = useAppSelector(selectInvoice);\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !invoices?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('INVOICES.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {\n          invoices.map((invoice) => (\n            <Grid item key={invoice.id} xs={12}></Grid>\n          ))\n        }\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Button\n          aria-label='New invoice'\n          color='secondary'\n          variant='contained'\n          startIcon={<Icon name={IconType.receipt}></Icon>}\n          sx={{ width: { sm: 'auto', xs: '100%' }, fontSize: 14 }}\n          onClick={openNewInvoicePage}>\n          {t('INVOICES.NEW_INVOICE')}\n        </Button>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    paddingTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1\n  },\n  tableCol: {},\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '12%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '6%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Invoice } from 'shared/models';\nimport {\n  getCurrentDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getLastDateOfPreviousMonth,\n  getPreviousMonthLongName\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.title}>{data.title}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getCurrentDate()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{getLastDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? `${data.amount?.vatRate} %` : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? data.amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.gross}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>PLN</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {data.amount?.gross} PLN</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport Paper from '@mui/material/Paper';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice, InvoiceField } from 'shared/models';\nimport { invoiceHelper } from 'shared/helpers';\nimport { useAppSelector } from 'store';\nimport { INVOICE_CURRENCIES, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  onSubmit: (formData: Invoice) => void;\n  onCurrencyChange: (currencyIso: Currency['iso']) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, onSubmit, onCurrencyChange }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = INVOICE_CURRENCIES;\n  const defaultCurrencyIso = INVOICE_CURRENCIES.some((currency) => currency.iso === iso) ? iso : 'USD';\n  const [currencyIso, setCurrencyIso] = React.useState<Currency['iso']>(defaultCurrencyIso);\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n\n  const defaultValues: Partial<Invoice> = {\n    title: '',\n    salary: '',\n    currencyIso: defaultCurrencyIso,\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit } = methods;\n\n  React.useEffect(() => {\n    Object.keys(data).forEach((key) => {\n      setValue(key as keyof Invoice, data[key as keyof Invoice]);\n    });\n  }, [data, setValue]);\n\n  const handleCurrencyChange = (event: SelectChangeEvent<string>): void => {\n    const value = event.target.value as Currency['iso'];\n\n    setValue(InvoiceField.currencyIso, value);\n    setCurrencyIso(value);\n    onCurrencyChange(value);\n  };\n\n  const handleVatIncludedChange = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean): void => {\n    setValue(InvoiceField.vatIncluded, checked);\n    setVatIncluded(checked);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    onSubmit(data);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.TITLE')}\n                    name={InvoiceField.title}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.title.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    value={currencyIso}\n                    onChange={handleCurrencyChange}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={vatIncluded}\n                        onChange={handleVatIncludedChange}\n                      />}\n                    label={\n                      <Typography color={contrastText}>{t('INVOICES.INCLUDE_VAT')}</Typography>\n                    }\n                    labelPlacement='start'\n                    sx={{\n                      '&.MuiFormControlLabel-root': {\n                        margin: 0\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Button aria-label='Save invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormSubmit)}>\n              {t('COMMON.PREVIEW')}\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getExchangeRates, getProfile, selectInvoice, selectProfile, selectUser, setAmount } from 'store/reducers';\nimport { Currency, Invoice, ManageMode } from 'shared/models';\nimport { getLastDateOfPreviousMonth, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport InvoiceDocument from '../components/InvoiceDocument';\nimport InvoiceForm from '../components/InvoiceForm';\nimport { StyledPDFViewer } from './CreateEditInvoice.styles';\n\ninterface NewInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<NewInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { rate, amount } = useAppSelector(selectInvoice);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const dispatch = useAppDispatch();\n  const [invoiceData, setInvoiceData] = React.useState<Partial<Invoice>>({} as Invoice);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n  }, [navigate]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const { salary, vatIncluded } = data;\n\n    dispatch(setAmount({ rate, salary, vatIncluded }));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleCurrencyChange = (currencyIso: Currency['iso']): void => {\n    dispatch(getExchangeRates([currencyIso, getLastDateOfPreviousMonth()]));\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        text={t('INVOICES.NEW_INVOICE')}\n        onBackButtonClick={goBack} />\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm data={invoiceData} onSubmit={handleFormSubmit} onCurrencyChange={handleCurrencyChange} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <StyledPDFViewer>\n            <InvoiceDocument data={invoiceData} />\n          </StyledPDFViewer>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n"],"names":["InvoiceList","t","useTranslation","navigate","useNavigate","invoices","status","useAppSelector","selectInvoice","_jsxs","Box","flexGrow","children","_jsx","PageTitle","text","Grid","container","rowGap","sx","marginTop","item","xs","Skeleton","type","length","_Fragment","map","invoice","id","EmptyState","Button","color","variant","startIcon","Icon","name","IconType","width","sm","fontSize","onClick","openNewInvoicePage","concat","ROUTES","Font","family","fonts","src","fontWeight","styles","StyleSheet","page","backgroundColor","fontFamily","padding","title","textAlign","heading","paddingTop","display","flexDirection","alignItems","label","marginRight","value","account","sellerBuyer","seller","flex","buyer","table","headerRow","bodyRow","borderStyle","borderRightWidth","borderBottomWidth","borderLeftWidth","tableCol","noCol","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","margin","total","vatExemption","chunkTextComponent","size","Text","style","hyphenationCallback","event","chunkSubstring","str","numChunks","Math","ceil","chunks","Array","i","o","substring","_ref","_data$amount","_data$amount2","_data$amount3","_data$amount4","_data$amount5","_data$amount6","data","Document","Page","View","getFirstDateOfPreviousMonth","getCurrentDate","getLastDateOfPreviousMonth","getDayOfCurrentMonth","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerName","buyerAddress","buyerLocation","buyerVatID","getPreviousMonthLongName","amount","net","vatIncluded","vatRate","vatAmount","gross","onSubmit","onCurrencyChange","helper","invoiceHelper","palette","info","contrastText","useTheme","defaultCurrency","iso","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","INVOICE_CURRENCIES","defaultCurrencyIso","currency","currencyIso","setCurrencyIso","React","setVatIncluded","defaultValues","salary","methods","useForm","mode","reValidateMode","setValue","handleSubmit","Object","keys","forEach","key","handleFormSubmit","FormProvider","gap","Paper","elevation","paddingX","paddingBottom","Typography","marginBottom","FormInput","InvoiceField","rules","required","message","pattern","FormSelect","onChange","target","_ref2","nameKey","symbol","MenuItem","CurrencyInfoItem","FormControlLabel","control","Switch","checked","handleVatIncludedChange","_","labelPlacement","fullWidth","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","rate","profileStatus","userProfile","selectProfile","user","selectUser","dispatch","useAppDispatch","invoiceData","setInvoiceData","goBack","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","withBackButton","onBackButtonClick","columnSpacing","rowSpacing","InvoiceForm","setAmount","getExchangeRates","InvoiceDocument","Invoices","Routes","Route","path","element","CreateEditInvoice","ManageMode","Navigate","to","replace","props","textValue","justifyContent","noWrap"],"sourceRoot":""}