{"version":3,"file":"static/js/124.e5510301.chunk.js","mappings":"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","sources":["modules/Invoices/pages/InvoiceList.tsx","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Button from '@mui/material/Button';\nimport { useTranslation } from 'core/i18n';\nimport PageTitle from 'shared/components/PageTitle';\nimport { IconType } from 'shared/models';\nimport { ROUTES } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          aria-label='New transfer'\n          color='secondary'\n          variant='contained'\n          startIcon={<Icon name={IconType.receipt}></Icon>}\n          sx={{ width: { sm: 'auto', xs: '100%' }, fontSize: 14 }}\n          onClick={openNewInvoicePage}>\n          {t('INVOICES.NEW_INVOICE')}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 10\n  },\n  title: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    paddingTop: 10,\n    display: 'flex', \n    flexDirection: 'row', \n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { Invoice } from 'shared/models';\nimport {\n  getCurrentDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getLastDateOfPreviousMonth\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Invoice;\n}\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data }) => {\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.title}>{data.title}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>Invoice No.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>Issue date:</Text>\n          <Text style={styles.value}>{getCurrentDate()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>Sale date:</Text>\n          <Text style={styles.value}>{getLastDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>Due date:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>Payment type:</Text>\n          <Text style={styles.value}>Transfer</Text>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","import * as React from 'react';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Invoice, InvoiceField } from 'shared/models';\nimport { invoiceHelper } from 'shared/helpers';\nimport { useAppSelector } from 'store';\nimport { CURRENCIES, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\n\ninterface InvoiceFormProps {\n  onSubmit: (formData: Invoice) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ onSubmit }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { palette: { info: { contrastText } } } = useTheme();\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = CURRENCIES;\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n\n  const defaultValues: Partial<Invoice> = {\n    title: '',\n    salary: '',\n    currencyIso: iso,\n    vatIncluded: false\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={methods.handleSubmit(onSubmit)}>\n        <Grid container gap={7}>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('COMMON.TITLE')}\n              name={InvoiceField.title}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.title.required!.message)\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('COMMON.SALARY')}\n              type='number'\n              name={InvoiceField.salary}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.salary.required!.message)\n                },\n                pattern: {\n                  value: regex,\n                  message: t(helper.salary.pattern!.message)\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSelect\n              label={t('COMMON.CURRENCY')}\n              name={InvoiceField.currencyIso}\n              value={iso}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.currencyIso.required!.message)\n                }\n              }}\n            >\n              {currencies.map(({ iso, name, nameKey, symbol }) => (\n                <MenuItem value={iso} key={iso}>\n                  <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                </MenuItem>\n              ))}\n            </FormSelect>\n          </Grid>\n          <Grid item xs={12}>\n            <Controller\n              name={InvoiceField.vatIncluded}\n              control={methods.control}\n              defaultValue={defaultValues.vatIncluded}\n              render={({ field }) => (\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={field.value}\n                      onChange={(e) => field.onChange(e.target.checked)}\n                      name={InvoiceField.vatIncluded}\n                    />\n                  }\n                  label={\n                    <Typography color={contrastText}>{t('INVOICES.INCLUDE_VAT')}</Typography>\n                  }\n                  labelPlacement='start'\n                  sx={{\n                    '&.MuiFormControlLabel-root': {\n                      margin: 0\n                    }\n                  }}\n                />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Button aria-label='Save invoice' fullWidth type='submit' variant='contained' onClick={methods.handleSubmit(onSubmit)}>\n              {t('COMMON.PREVIEW')}\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Invoice, ManageMode } from 'shared/models';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport InvoiceDocument from '../components/InvoiceDocument';\nimport InvoiceForm from '../components/InvoiceForm';\n\ninterface NewInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<NewInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [invoiceData, setInvoiceData] = React.useState<Invoice>({} as Invoice);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n  }, [navigate]);\n\n  const handleFormSubmit = (data: Invoice): void => {\n    setInvoiceData(data);\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        text={t('INVOICES.NEW_INVOICE')}\n        onBackButtonClick={goBack} />\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={5}>\n          <InvoiceForm onSubmit={handleFormSubmit} />\n        </Grid>\n        <Grid item xs={12} sm={7}>\n          <PDFViewer width='100%' height='100%'>\n            <InvoiceDocument data={invoiceData} />\n          </PDFViewer>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n"],"names":["t","useTranslation","navigate","useNavigate","_jsxs","Box","flexGrow","children","_jsx","PageTitle","text","sx","display","justifyContent","Button","color","variant","startIcon","Icon","name","IconType","width","sm","xs","fontSize","onClick","concat","ROUTES","Font","family","fonts","src","fontWeight","styles","StyleSheet","page","backgroundColor","fontFamily","padding","title","textAlign","heading","paddingTop","flexDirection","alignItems","label","marginRight","value","section","margin","_ref","data","Document","Page","size","style","View","Text","getFirstDateOfPreviousMonth","getCurrentDate","getLastDateOfPreviousMonth","getDayOfCurrentMonth","onSubmit","helper","invoiceHelper","contrastText","useTheme","palette","info","regex","POSITIVE_NUMERIC_REGEX","currencies","CURRENCIES","iso","useAppSelector","selectSettings","defaultCurrency","defaultValues","salary","currencyIso","vatIncluded","methods","useForm","mode","reValidateMode","FormProvider","_objectSpread","handleSubmit","Grid","container","gap","item","FormInput","InvoiceField","rules","required","message","type","pattern","FormSelect","map","_ref2","nameKey","symbol","MenuItem","CurrencyInfoItem","currency","Controller","control","defaultValue","render","_ref3","field","FormControlLabel","Switch","checked","onChange","e","target","Typography","labelPlacement","fullWidth","_React$useState","React","_React$useState2","_slicedToArray","invoiceData","setInvoiceData","goBack","withBackButton","onBackButtonClick","columnSpacing","rowSpacing","InvoiceForm","PDFViewer","height","InvoiceDocument","Routes","Route","path","element","InvoiceList","CreateEditInvoice","ManageMode","Navigate","to","replace","StyledTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","props","theme","primary","main","error","_ref$rules","_objectWithoutProperties","_excluded","_useFormContext","useFormContext","errors","formState","fieldState","position","FormHelperText","InputLabel","Select"],"sourceRoot":""}