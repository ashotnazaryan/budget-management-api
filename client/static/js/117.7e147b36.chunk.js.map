{"version":3,"file":"static/js/117.7e147b36.chunk.js","mappings":"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","sources":["modules/Invoices/components/Invoice.tsx","modules/Invoices/pages/InvoiceList.tsx","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","shared/components/FormSwitch.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/pages/CreateEditInvoice.styles.ts","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/EmptyState.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/Skeleton.tsx","shared/components/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, IconType, Invoice as InvoiceModel } from 'shared/models';\nimport { MONTHS } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\n\ninterface InvoiceProps {\n  data: InvoiceModel;\n  defaultCurrency: Currency;\n  onClick?: (data: InvoiceModel) => void;\n}\n\nconst Invoice: React.FC<InvoiceProps> = ({ data, defaultCurrency, onClick }) => {\n  const { palette: { primary: { main, contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const { name, salary, amount, currencyIso, month } = data;\n  const monthName = MONTHS.find(({ index }) => index === Number(month))?.nameKey || '';\n\n  const onInvoiceClick = (): void => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ paddingX: 2, backgroundColor: main }}>\n      <Grid container display='flex' alignItems='center' justifyContent='space-between' flexGrow={1} columnSpacing={2}\n        sx={{\n          borderRadius: 1,\n          minHeight: 40,\n          cursor: 'pointer'\n        }}\n        onClick={onInvoiceClick}>\n        <Grid item xs={1} display='flex'>\n          <Icon name={IconType.receipt} sx={{ fontSize: { sm: 22, xs: 18 }, color: contrastText }}></Icon>\n        </Grid>\n        <Grid item xs={4} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{name}</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{t(monthName)}</Typography>\n        </Grid>\n        <Grid item xs={3} display='flex'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{amount?.gross} {amount?.currencyIso}</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-end'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{salary} {currencyIso}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Invoice;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getInvoices, selectCurrency, selectInvoice } from 'store/reducers';\nimport { ROUTES } from 'shared/constants';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Invoice from '../components/Invoice';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { invoices, status } = useAppSelector(selectInvoice);\n  const defaultCurrency = useAppSelector(selectCurrency);\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  const handleInvoiceItemClick = ({ id, name }: InvoiceModel): void => {\n    navigate(`${ROUTES.invoices.path}/view/${name}`, { state: { id } });\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getInvoices());\n    }\n  }, [dispatch, status]);\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !invoices?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('INVOICES.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {\n          invoices.map((invoice) => (\n            <Grid item key={invoice.id} xs={12}>\n              <Invoice data={invoice} defaultCurrency={defaultCurrency} onClick={handleInvoiceItemClick} />\n            </Grid>\n          ))\n        }\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Grid item xs={12} display='flex' justifyContent='flex-end'>\n          <IconButton color='primary' onClick={openNewInvoicePage} sx={{ alignSelf: 'flex-end' }}>\n            <Icon name={IconType.plus} sx={{ fontSize: 40 }}></Icon>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20,\n    borderWidth: 0\n  },\n  name: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40,\n    border: '1px solid #000'\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  tableCol: {\n    borderRight: '1px solid #000',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '12%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '6%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  },\n  noBorder: {\n    border: 'none'\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice } from 'shared/models';\nimport {\n  getCurrentDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getPreviousMonthLongName\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n  defaultCurrency: Currency;\n  saleDate: string;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data, defaultCurrency, saleDate }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.name}>{data.name}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getCurrentDate()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{saleDate}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{  ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? `${data.amount?.vatRate}%` : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? data.amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.gross}</Text>\n            </View>\n            <View style={{  ...styles.tableCol, ...styles.noBorder, ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{defaultCurrency.iso}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {data.amount?.gross} {defaultCurrency.iso}</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Typography from '@mui/material/Typography';\nimport { FormControlRules } from 'shared/models';\n\ntype FormSwitchProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n  onSwitchChange?: (checked: boolean) => void;\n} & SwitchProps;\n\nconst FormSwitch: React.FC<FormSwitchProps> = ({ name, label, rules = {}, onSwitchChange, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (onSwitchChange) {\n      onSwitchChange(event.target.checked);\n    }\n  };\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <FormControlLabel\n            control={\n              <Switch\n                {...props}\n                {...field}\n                value={field.value}\n                checked={field.value}\n                onChange={(event) => {\n                  field.onChange(event);\n                  onChange(event);\n                }}\n              />\n            }\n            label={\n              <Typography>{label}</Typography>\n            }\n            labelPlacement='start'\n            sx={{\n              '&.MuiFormControlLabel-root': {\n                margin: 0\n              }\n            }}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSwitch;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice, InvoiceDTO, InvoiceField, ManageMode } from 'shared/models';\nimport { getPreviousMonthIndex, invoiceHelper } from 'shared/helpers';\nimport { useAppSelector } from 'store';\nimport { CURRENCIES, MONTHS, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\nimport FormSwitch from 'shared/components/FormSwitch';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  loading: boolean;\n  mode: ManageMode;\n  onSubmit: (formData: InvoiceDTO) => void;\n  onPreview: (formData: InvoiceDTO) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, loading, mode, onPreview, onSubmit }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = CURRENCIES.filter((currency) => currency.iso !== iso);\n  const months = MONTHS;\n  const defaultMonth = months.find((month) => month.index === getPreviousMonthIndex());\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n\n  const defaultValues: Partial<Invoice> = {\n    name: `${t('INVOICES.INVOICE')}_${t(defaultMonth?.nameKey || '') || defaultMonth?.name}`,\n    salary: '',\n    currencyIso: isCreateMode ? 'USD' : data.currencyIso || '' as Currency['iso'],\n    month: isCreateMode ? defaultMonth?.index : (data.month || defaultMonth?.index),\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit } = methods;\n\n  React.useEffect(() => {\n    Object.keys(data).forEach((key) => {\n      setValue(key as keyof Invoice, data[key as keyof Invoice]);\n    });\n\n    setVatIncluded(!!data.vatIncluded);\n  }, [data, setValue]);\n\n  const handleVatIncludedChange = (checked: boolean): void => {\n    setVatIncluded(checked);\n    setValue(InvoiceField.vatIncluded, checked);\n  };\n\n  const handleFormPreview = (data: Invoice): void => {\n    const mappedData: InvoiceDTO = {\n      ...data,\n      month: Number(data.month)\n    };\n\n    onPreview(mappedData);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const mappedData: InvoiceDTO = {\n      ...data,\n      month: Number(data.month)\n    };\n\n    onSubmit(mappedData);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.name}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.name.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.MONTH')}\n                    name={InvoiceField.month}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.month.required!.message)\n                      }\n                    }}\n                  >\n                    {months.map((month) => (\n                      <MenuItem key={month.index} value={month.index}>{t(month.nameKey) || month.name}</MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSwitch\n                    name={InvoiceField.vatIncluded}\n                    label={t('INVOICES.INCLUDE_VAT')}\n                    checked={vatIncluded}\n                    disabled={isViewMode}\n                    onSwitchChange={handleVatIncludedChange}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          {!isViewMode && (\n            <>\n              <Grid item xs={12}>\n                <Button aria-label='Preview invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormPreview)}>\n                  {t('COMMON.PREVIEW')}\n                </Button>\n              </Grid>\n              <Grid item xs={12}>\n                <Button aria-label='Save invoice' fullWidth variant='contained' loading={loading} onClick={handleSubmit(handleFormSubmit)}>\n                  {t('COMMON.SAVE')}\n                </Button>\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createInvoice,\n  deleteInvoice,\n  editInvoice,\n  getInvoice,\n  getProfile,\n  resetCreateEditInvoiceStatus,\n  resetGetInvoiceStatus,\n  resetInvoiceAmount,\n  selectCurrency,\n  selectCurrentInvoice,\n  selectInvoice,\n  selectInvoiceAmount,\n  selectInvoiceError,\n  selectInvoiceRate,\n  selectProfile,\n  selectUser,\n  setInvoiceAmount\n} from 'store/reducers';\nimport { InvoiceAmount, Invoice, InvoiceDTO, ManageMode } from 'shared/models';\nimport { calculateAmount, getPageTitle, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport Snackbar from 'shared/components/Snackbar';\nimport Dialog from 'shared/components/Dialog';\nimport InvoiceDocument from '../components/InvoiceDocument';\nimport InvoiceForm from '../components/InvoiceForm';\nimport { StyledPDFViewer } from './CreateEditInvoice.styles';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\n\ninterface NewInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<NewInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { getStatus, createEditStatus, deleteStatus } = useAppSelector(selectInvoice);\n  const { rates, date } = useAppSelector(selectInvoiceRate);\n  const amount = useAppSelector(selectInvoiceAmount);\n  const invoice = useAppSelector(selectCurrentInvoice);\n  const error = useAppSelector(selectInvoiceError);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const defaultCurrency = useAppSelector(selectCurrency);\n  const dispatch = useAppDispatch();\n  const { state } = useLocation();\n  const invoiceId = state?.id as InvoiceDTO['id'];\n  const loading = createEditStatus === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n  const isCreateMode = mode === ManageMode.create;\n  const [invoiceData, setInvoiceData] = React.useState<Partial<InvoiceDTO>>({} as InvoiceDTO);\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const title = getPageTitle<Invoice>(mode, t, getStatus, 'INVOICES', 'NEW_INVOICE', 'EMPTY_TITLE', invoice);\n\n  const handleFormPreview = (data: Invoice): void => {\n    const amount = getAmount(data);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const amount = getAmount(data);\n\n    dispatch(setInvoiceAmount(amount));\n    setInvoiceData({ ...data, amount });\n    setFormSubmitted(true);\n    isEditMode ? dispatch(editInvoice([invoiceId, { ...data, amount }])) : dispatch(createInvoice({ ...data, amount }));\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.invoices.path}/edit/${invoice?.name}`, { state: { id: invoiceId } });\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isEditMode\n      ? navigate(`${ROUTES.invoices.path}/view/${invoice?.name}`, { state: { id: invoiceId } })\n      : navigate(ROUTES.invoices.path);\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleDeleteInvoice = (): void => {\n    dispatch(deleteInvoice(invoiceId));\n    setDeleteClicked(true);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const getAmount = (data: Invoice): InvoiceAmount => {\n    const { salary, vatIncluded, currencyIso } = data;\n    const rate = rates.find((rate) => rate.code === currencyIso)?.value;\n\n    return calculateAmount(defaultCurrency.iso, rate, Number(salary), vatIncluded);\n  };\n\n  const resetInvoice = React.useCallback(() => {\n    dispatch(resetGetInvoiceStatus());\n    dispatch(resetInvoiceAmount());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n    resetInvoice();\n    setInvoiceData({});\n  }, [navigate, resetInvoice]);\n\n  React.useEffect(() => {\n    if (createEditStatus === 'succeeded' && formSubmitted) {\n      setShowSnackbar(false);\n      dispatch(resetCreateEditInvoiceStatus());\n      goBack();\n    }\n\n    if (createEditStatus === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [dispatch, goBack, createEditStatus, formSubmitted]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoiceId && getStatus === 'idle' && (isEditMode || isViewMode) && !deleteClicked) {\n      dispatch(getInvoice(invoiceId));\n    }\n  }, [invoiceId, isEditMode, isViewMode, getStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoice && getStatus === 'succeeded' && (isEditMode || isViewMode)) {\n      setInvoiceData(invoice);\n    }\n  }, [invoice, isEditMode, isViewMode, getStatus, dispatch]);\n\n  const renderContent = (): React.ReactElement => {\n    if (getStatus === 'loading') {\n      return <Skeleton type='form' />;\n    }\n\n    if (!isCreateMode && (!invoice?.name || !invoiceId) && getStatus === 'failed') {\n      return <EmptyState text={t('INVOICES.EMPTY_TEXT')} />;\n    }\n\n    return (\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm\n            data={invoiceData}\n            loading={loading}\n            mode={mode}\n            onPreview={handleFormPreview}\n            onSubmit={handleFormSubmit}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <StyledPDFViewer>\n            <InvoiceDocument data={invoiceData} saleDate={date} defaultCurrency={defaultCurrency} />\n          </StyledPDFViewer>\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!invoice}\n        withDeleteButton={isEditMode && !!invoice}\n        withCancelButton={!isViewMode && !!invoice}\n        text={title}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      {renderContent()}\n      <Snackbar type='error' open={showSnackbar} text={error?.messageKey ? t(error.messageKey) : error?.message || ''} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('INVOICES.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteInvoice}\n      >\n        <Typography variant='subtitle1'>\n          {t('INVOICES.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n"],"names":["_ref","_MONTHS$find","data","defaultCurrency","onClick","palette","primary","main","contrastText","useTheme","t","useTranslation","name","salary","amount","currencyIso","month","monthName","MONTHS","find","_ref2","index","Number","nameKey","_jsx","Paper","elevation","sx","paddingX","backgroundColor","children","_jsxs","Grid","container","display","alignItems","justifyContent","flexGrow","columnSpacing","borderRadius","minHeight","cursor","onInvoiceClick","item","xs","Icon","IconType","receipt","fontSize","sm","color","Typography","noWrap","gross","InvoiceList","navigate","useNavigate","dispatch","useAppDispatch","invoices","status","useAppSelector","selectInvoice","selectCurrency","handleInvoiceItemClick","id","concat","ROUTES","path","state","React","getInvoices","Box","PageTitle","text","rowGap","marginTop","Skeleton","type","length","_Fragment","map","invoice","Invoice","EmptyState","IconButton","openNewInvoicePage","alignSelf","plus","Font","register","family","fonts","src","fontWeight","styles","StyleSheet","create","page","fontFamily","padding","borderWidth","textAlign","heading","flexDirection","label","marginRight","value","account","sellerBuyer","seller","flex","buyer","table","border","headerRow","bodyRow","tableCol","borderRight","height","noCol","width","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","margin","total","vatExemption","noBorder","chunkTextComponent","size","Text","style","hyphenationCallback","event","chunkSubstring","str","numChunks","Math","ceil","chunks","Array","i","o","substring","_data$amount","_data$amount2","_data$amount3","_data$amount4","_data$amount5","_data$amount6","saleDate","Document","Page","View","getFirstDateOfPreviousMonth","getCurrentDate","getDayOfCurrentMonth","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerName","buyerAddress","buyerLocation","buyerVatID","getPreviousMonthLongName","net","vatIncluded","vatRate","vatAmount","iso","rules","onSwitchChange","props","control","formState","errors","useFormContext","Controller","render","field","fieldState","error","position","FormControlLabel","Switch","checked","onChange","target","labelPlacement","FormHelperText","message","loading","mode","onPreview","onSubmit","helper","invoiceHelper","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","CURRENCIES","filter","currency","months","defaultMonth","getPreviousMonthIndex","setVatIncluded","isViewMode","ManageMode","view","isCreateMode","defaultValues","methods","useForm","reValidateMode","setValue","handleSubmit","Object","keys","forEach","key","handleFormSubmit","mappedData","FormProvider","gap","paddingTop","paddingBottom","marginBottom","FormInput","inputProps","readOnly","InvoiceField","required","pattern","FormSelect","symbol","MenuItem","CurrencyInfoItem","FormSwitch","disabled","Button","fullWidth","variant","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","getStatus","createEditStatus","deleteStatus","rates","date","selectInvoiceRate","selectInvoiceAmount","selectCurrentInvoice","selectInvoiceError","profileStatus","userProfile","selectProfile","user","selectUser","useLocation","invoiceId","deleteLoading","isEditMode","edit","invoiceData","setInvoiceData","formSubmitted","setFormSubmitted","deleteClicked","setDeleteClicked","dialogOpened","setDialogOpened","showSnackbar","setShowSnackbar","title","getPageTitle","handleFormPreview","getAmount","setInvoiceAmount","editInvoice","createInvoice","_rates$find","rate","code","calculateAmount","resetInvoice","resetGetInvoiceStatus","resetInvoiceAmount","goBack","resetCreateEditInvoiceStatus","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","getInvoice","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","handleEditButtonClick","onDeleteButtonClick","handleOpenDialog","onCancelButtonClick","handleCancelButtonClick","rowSpacing","InvoiceForm","InvoiceDocument","Snackbar","open","messageKey","onClose","handleSnackbarClose","Dialog","maxWidth","actionButtonText","handleCloseDialog","onAction","handleDeleteInvoice","deleteInvoice","Invoices","Routes","Route","element","CreateEditInvoice","Navigate","to","replace","info","textValue","StyledTextField","TextField","theme","InputLabel","Select","isForm","getSize","firstBar","secondBar","thirdBar","columnGap","MuiSkeleton","animation","MuiSnackbar","autoHideDuration","onSnackbarClose","MuiAlert","severity"],"sourceRoot":""}