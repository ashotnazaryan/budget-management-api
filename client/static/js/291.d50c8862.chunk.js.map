{"version":3,"file":"static/js/291.d50c8862.chunk.js","mappings":"qVA0FA,EAzEkD,WAChD,IAAMA,EAAOC,EAAAA,GACPC,GAAWC,EAAAA,EAAAA,MACjBC,GAA+BC,EAAAA,EAAAA,IAAeC,EAAAA,IAAtCC,EAAUH,EAAVG,WAAYC,EAAMJ,EAANI,OACdC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EACRE,EAAwCC,EAAAA,SAAgCC,OAAOC,EAAAA,GAAAA,UAAsBC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA9FM,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAE9BI,EAAwB,CAC5BC,GAAI,GACJC,KAAM,eACNC,QAAS,0BACTC,KAAMC,EAAAA,GAAAA,KACNC,KAAMC,OAAOT,IAGfL,EAAAA,WAAgB,WACC,SAAXN,GAAgC,WAAXA,GACvBN,GAAS2B,EAAAA,EAAAA,MAEb,GAAG,CAAC3B,EAAUM,IAEd,IAIMsB,EAA0B,SAAHC,GAAsC,IAAhCT,EAAES,EAAFT,GAAIC,EAAIQ,EAAJR,KACrCd,EAAS,GAADuB,OAAIC,EAAAA,GAAAA,WAAAA,KAAsB,UAAAD,OAAST,GAAQ,CAAEW,MAAO,CAAEZ,GAAAA,IAChE,EAEMa,EAAsB,WAC1B1B,EAAS,GAADuB,OAAIC,EAAAA,GAAAA,WAAAA,KAAsB,QAAQ,CAAEC,MAAO,CAAEf,aAAAA,IACvD,EAEMiB,EAAkB,SAACC,GACvB,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKD,GAAI,IACPd,KAAMc,EAAKb,QAAUb,EAAE0B,EAAKb,SAAWa,EAAKd,MAEhD,EAyBA,OACEgB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,SAAU,EAAEC,SAAA,EACfC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,KAAMlC,EAAE,4BACnBgC,EAAAA,EAAAA,KAACG,EAAAA,EAAI,CAACC,UAAQ,EAACC,aAAc7B,EAAcnB,KAAMA,EAAMiD,SA7CnC,SAACC,EAA6BC,GACpD/B,EAAgB+B,EAClB,EA2CsFC,GAAI,CAAEC,aAAc,KAzBzF,YAAX7C,GAAmC,cAAXA,GACnBmC,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAC3B,KAAK,WAAWyB,GAAI,CAAEG,UAAW,KAGrC,OAAVhD,QAAU,IAAVA,GAAAA,EAAYiD,QAKfjB,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAW,EAAGC,OAAQ,EAAGR,GAAI,CAAEG,UAAW,GAAIb,SAAA,CAC3DnC,EAAWsD,QAAO,SAAAC,GAAA,IAAGnC,EAAImC,EAAJnC,KAAI,OAAOZ,OAAOY,KAAUR,CAAY,IAAE4C,KAAI,SAACC,GAAQ,OAC3ErB,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAAvB,UACRC,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,CAAC7B,KAAMD,EAAgB4B,GAAWG,YAAarC,KAD9CkC,EAAS1C,GAElB,KAETqB,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAAvB,UACRC,EAAAA,EAAAA,KAACuB,EAAAA,EAAY,CAAC7B,KAAMD,EAAgBf,GAAc8C,YAAahC,UAX5DQ,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACvB,KAAMlC,EAAE,6BAwBjC,E,uHCgOA,EAnRuD,SAAHoB,GAAkB,IAAZsC,EAAItC,EAAJsC,KAClDrE,EAAOC,EAAAA,GACPqE,EAAQC,EAAAA,GACR9D,GAAWC,EAAAA,EAAAA,MACTwB,GAAUsC,EAAAA,EAAAA,MAAVtC,MACFhC,GAAWC,EAAAA,EAAAA,MACjBC,GAAgDC,EAAAA,EAAAA,IAAeC,EAAAA,IAAvDE,EAAMJ,EAANI,OAAQiE,EAAYrE,EAAZqE,aAAcC,EAAatE,EAAbsE,cACxBC,GAAQtE,EAAAA,EAAAA,IAAeuE,EAAAA,IACvBZ,GAAW3D,EAAAA,EAAAA,IAAewE,EAAAA,IACLC,GAAqBC,EAAAA,EAAAA,KAAxCC,QAAWC,KAAQH,aACrBI,GAASC,EAAAA,EAAAA,MACPxE,GAAMC,EAAAA,EAAAA,MAAND,EACRE,EAA0CC,EAAAA,UAAwB,GAAMG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAjEuE,EAAanE,EAAA,GAAEoE,EAAgBpE,EAAA,GACtCqE,EAA0CxE,EAAAA,UAAwB,GAAMyE,GAAArE,EAAAA,EAAAA,GAAAoE,EAAA,GAAjEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAAwC5E,EAAAA,UAAwB,GAAM6E,GAAAzE,EAAAA,EAAAA,GAAAwE,EAAA,GAA/DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwChF,EAAAA,UAAwB,GAAMiF,IAAA7E,EAAAA,EAAAA,GAAA4E,GAAA,GAA/DE,GAAYD,GAAA,GAAEE,GAAeF,GAAA,GAC9BG,GAAqB,YAAX1F,EACV2F,GAAiC,YAAjB1B,EAChB2B,GAAkB,OAALlE,QAAK,IAALA,OAAK,EAALA,EAAOZ,GACpB+E,GAAuB,OAARrC,QAAQ,IAARA,GAAAA,EAAUxC,QAAUb,EAAEqD,EAASxC,UAAoB,OAARwC,QAAQ,IAARA,OAAQ,EAARA,EAAUzC,OAAQ,GAC5EJ,GAAoB,OAALe,QAAK,IAALA,OAAK,EAALA,EAAOf,aACtBmF,GAAejC,IAASkC,EAAAA,GAAAA,OACxBC,GAAanC,IAASkC,EAAAA,GAAAA,KACtBE,GAAapC,IAASkC,EAAAA,GAAAA,KAEtBG,GAAmC,CACvC/E,KAAMZ,OAAOI,IACbI,KAAM,IAGFoF,IAAUC,EAAAA,EAAAA,IAAkB,CAChCvC,KAAM,SACNwC,eAAgB,SAChBH,cAAAA,KAGMI,GAAkDH,GAAlDG,SAAUC,GAAwCJ,GAAxCI,aAAcC,GAA0BL,GAA1BK,QAASC,GAAiBN,GAAjBM,MAAOC,GAAUP,GAAVO,MAC1CC,GAAYvF,OAAOqF,GAAMG,EAAAA,GAAAA,OAEzBC,GAAyB,SAAHvD,GAAsC,IAAhCxC,EAAEwC,EAAFxC,GAC5BmF,IAIJK,GAASM,EAAAA,GAAAA,KAAoB9F,EAAgB,CAAEgG,gBAAgB,GACjE,EAEMC,GAA2B,SAACpE,GAChC,IAAMxB,EAAOC,OAAOuB,GAEpB2D,GAASM,EAAAA,GAAAA,KAAoBzF,EAAM,CAAE2F,gBAAgB,GACvD,EAEME,GAAmB,SAACnF,GACXnC,EAAbsG,IAAsBiB,EAAAA,EAAAA,IAAa,CAACrB,GAAY/D,KAAmBqF,EAAAA,EAAAA,IAAerF,IAClFgD,GAAiB,EACnB,EAgDMsC,GAAgB7G,EAAAA,aAAkB,WAClCkD,IACF8C,GAASM,EAAAA,GAAAA,KAAoBrG,OAAOiD,EAASrC,OAC7CmF,GAASM,EAAAA,GAAAA,KAAoBpD,EAASxC,QAAUb,EAAEqD,EAASxC,SAAWwC,EAASzC,MAC/EuF,GAASM,EAAAA,GAAAA,KAAoBpD,EAASvC,MAE1C,GAAG,CAACuC,EAAU8C,GAAUnG,IAElBiH,GAAgB9G,EAAAA,aAAkB,WACtCZ,GAAS2H,EAAAA,EAAAA,MACX,GAAG,CAAC3H,IAEE4H,GAAShH,EAAAA,aAAkB,WAC/BL,EAAS,GAADuB,OAAIC,EAAAA,GAAAA,WAAAA,OACZ2F,IACF,GAAG,CAACnH,EAAUmH,KAEd9G,EAAAA,WAAgB,WACC,cAAXN,GAA0B4E,IAC5B0C,KACAjC,GAAgB,IAGH,WAAXrF,GAAuB4E,GACzBS,GAAgB,EAEpB,GAAG,CAACiC,GAAQtH,EAAQ4E,IAEpBtE,EAAAA,WAAgB,WACO,cAAjB2D,GAAgCe,GAClCsC,KAGmB,WAAjBrD,GAA6Be,IAC/BK,GAAgB,GAChBI,IAAgB,GAEpB,GAAG,CAAC6B,GAAQrD,EAAce,IAE1B1E,EAAAA,WAAgB,WACVsF,IAAgC,SAAlB1B,IAA6B8B,IAAcC,MAAgBjB,GAC3EtF,GAAS6H,EAAAA,EAAAA,IAAY3B,IAEzB,GAAG,CAACA,GAAYI,GAAYC,GAAY/B,EAAexE,EAAUsF,IAEjE1E,EAAAA,WAAgB,WACd6G,IACF,GAAG,CAACA,KAEJ7G,EAAAA,WAAgB,WACd,OAAO,WACL8G,IACF,CACF,GAAG,CAACA,KAyEJ,OACErF,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACwF,UAAU,OAAOC,QAAQ,OAAOC,cAAc,SAASzF,SAAU,EAAG0F,SAAUpB,GAAaS,IAAkB9E,SAAA,EAChHC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRwF,gBAAc,EACdC,eAAgB5B,MAAgBzC,EAChCsE,iBAAkB9B,MAAgBxC,EAClCuE,kBAAmB9B,MAAgBzC,EACnCnB,KAxJAyD,GACK3F,EAAE,2BACAqD,IAAawC,IAAcC,IAC7BJ,GACoB,YAAlB3B,EACF/D,EAAE,0BAGJ,GAiJH6H,kBAAmBV,GACnBW,kBA/IwB,WACxBjC,IAIJ/F,EAAS,GAADuB,OAAIC,EAAAA,GAAAA,WAAAA,KAAsB,UAAAD,OAASqE,IAAgB,CAAEnE,MAAO,CAAEZ,GAAI8E,KAC5E,EA0IMsC,oBAzKmB,WACvBzC,IAAgB,EAClB,EAwKM0C,oBAvL0B,WAC9BrC,GAAeY,GAAMR,IAAiBiB,KAEtCnB,GACI/F,EAAS,GAADuB,OAAIC,EAAAA,GAAAA,WAAAA,KAAsB,UAAAD,OAASqE,IAAgB,CAAEnE,MAAO,CAAEZ,GAAI8E,MAC1E3F,EAASwB,EAAAA,GAAAA,WAAAA,KACf,KAmLIU,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACC,SAAU,EAAEC,SAnFG,YAAlBgC,GACK/B,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CAAC3B,KAAK,SAGnB2E,IAAkBtC,GAAaoC,IAKlCzD,EAAAA,EAAAA,KAACiG,EAAAA,IAAYtG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKqE,IAAO,IAAAjE,UACvBH,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACE,OAAQ,EAAElB,SAAA,EACxBC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,UAChBC,EAAAA,EAAAA,KAACmG,EAAAA,EAAS,CACRC,WAAY,CAAEC,SAAUvC,IACxBwC,MAAOtI,EAAE,eACTY,KAAM6F,EAAAA,GAAAA,KACN8B,MAAO,CACLC,SAAU,CACRhG,OAAO,EACPiG,QAASzI,EAAEuE,EAAO3D,KAAK4H,SAAUC,gBAKzC7G,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,SAAA,EAChBC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACC,MAAOxE,EAAc1B,GAAI,CAAEmG,QAAS,GAAI7G,SAAE/B,EAAE,kBACxDgC,EAAAA,EAAAA,KAAC6G,EAAAA,EAAc,CACbC,SAAUhD,GACVlF,KAAM6F,EAAAA,GAAAA,KACN8B,MAAO,CACLC,SAAU,CACRhG,OAAO,EACPiG,QAASzI,EAAEuE,EAAOvD,KAAKwH,SAAUC,WAGrCM,SAASC,EAAAA,EAAAA,IAAiC3J,EAAMW,GAChDiJ,WAAY9E,EACZ3B,MAAOgE,GACP0C,cAAetC,SAGnBhF,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,SAAA,EAChBC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACC,MAAOxE,EAAc1B,GAAI,CAAEmG,QAAS,GAAI7G,SAAE/B,EAAE,kBACxDgC,EAAAA,EAAAA,KAACmH,EAAAA,GAAU,CACT9C,QAASA,GACTzF,KAAM6F,EAAAA,GAAAA,KACN8B,MAAO,CACLC,UAAU,GAEZY,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAqBtF,EAAKqF,EAAnBE,WAAcvF,MAAK,OACnCpC,EAAAA,EAAAA,MAAA4H,EAAAA,SAAA,CAAAzH,SAAA,EACEC,EAAAA,EAAAA,KAACc,EAAAA,IAAInB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACoB,WAAS,GAAKuG,GAAK,IAAEtG,UAAW,EAAGC,OAAQ,EAAGR,GAAI,CAAEG,UAAW,GAAIb,SAErE4B,EAAMP,KAAI,SAAAqG,GAAA,IAAG7I,EAAI6I,EAAJ7I,KAAI,OACfoB,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAAvB,UACRC,EAAAA,EAAAA,KAAC0H,EAAAA,EAAQ,CAACC,SAAUL,EAAM9G,MAAO7B,GAAIC,EAAME,KAAMF,EAAMgJ,KAAM,GAAId,SAAUhD,GAAY+D,QAASnD,MADlF9F,EAET,OAIZoD,IAAShC,EAAAA,EAAAA,KAAC8H,EAAAA,EAAc,CAAC9F,OAAK,EAAAjC,SAAE/B,EAAEuE,EAAOzD,KAAKkD,EAAMhD,MAAOyH,aAC3D,cAxDNzG,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACvB,KAAMlC,EAAE,6CAiFzB8F,KACA9D,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACC,WAAS,EAACuE,QAAQ,OAAOyC,eAAe,WAAW9G,OAAQ,EAAGD,UAAW,EAAGP,GAAI,CAAEG,UAAW,GAAIb,UACrGC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC0G,GAAG,OAAO9B,GAAI,GAAGnG,UAC1BC,EAAAA,EAAAA,KAACiI,EAAAA,EAAM,CAAC,aAAW,gBAAgBC,WAAS,EAAClJ,KAAK,SAASmJ,QAAQ,YAAY5E,QAASA,GACtFsE,QAASzD,GAAaS,IAAkB9E,SACvC/B,EAAE,sBAKXgC,EAAAA,EAAAA,KAACoI,EAAAA,EAAQ,CAACpJ,KAAK,QAAQkB,KAAW,OAAL8B,QAAK,IAALA,GAAAA,EAAOqG,WAAarK,EAAEgE,EAAMqG,aAAmB,OAALrG,QAAK,IAALA,OAAK,EAALA,EAAOyE,UAAW,GAAI6B,KAAMrF,EAAcsF,QAjLzF,WAC1BrF,GAAgB,GAChBJ,GAAiB,EACnB,KA+KI9C,EAAAA,EAAAA,KAACwI,EAAAA,EAAM,CACLN,WAAS,EACTO,SAAS,KACTC,MAAO1K,EAAE,kCACT2K,iBAAkB3K,EAAE,cACpBsK,KAAMjF,GACNE,QAASC,GACT+E,QA7LoB,WACxBjF,IAAgB,EAClB,EA4LMsF,SAvMuB,WAC3BrL,GAASsL,EAAAA,EAAAA,IAAepF,KACxBX,GAAiB,EACnB,EAoMqC/C,UAE/BC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACyB,QAAQ,YAAWpI,SAC5B/B,EAAE,0CAKb,ECnSA,EAZ6B,WAC3B,OACE4B,EAAAA,EAAAA,MAACkJ,EAAAA,GAAM,CAAA/I,SAAA,EACLC,EAAAA,EAAAA,KAAC+I,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASjJ,EAAAA,EAAAA,KAACkJ,EAAY,OACtClJ,EAAAA,EAAAA,KAAC+I,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAASjJ,EAAAA,EAAAA,KAACmJ,EAAkB,CAACzH,KAAMkC,EAAAA,GAAAA,YACtD5D,EAAAA,EAAAA,KAAC+I,EAAAA,GAAK,CAACC,KAAK,YAAYC,SAASjJ,EAAAA,EAAAA,KAACmJ,EAAkB,CAACzH,KAAMkC,EAAAA,GAAAA,UAC3D5D,EAAAA,EAAAA,KAAC+I,EAAAA,GAAK,CAACC,KAAK,YAAYC,SAASjJ,EAAAA,EAAAA,KAACmJ,EAAkB,CAACzH,KAAMkC,EAAAA,GAAAA,UAC3D5D,EAAAA,EAAAA,KAAC+I,EAAAA,GAAK,CAACC,KAAK,IAAIC,SAASjJ,EAAAA,EAAAA,KAACoJ,EAAAA,GAAQ,CAACC,GAAI/J,EAAAA,GAAAA,WAAAA,KAAwBgK,SAAO,QAG5E,C,6KCqDA,IAvDkD,SAAHlK,GAAuE,IAAjEM,EAAIN,EAAJM,KAAMiI,EAAQvI,EAARuI,SAAU4B,EAAQnK,EAARmK,SAAUzC,EAAQ1H,EAAR0H,SAAUtF,EAAWpC,EAAXoC,YAAgBgI,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GACxCC,GAAVvH,EAAAA,EAAAA,KAAlDC,QAAWuH,EAAOD,EAAPC,QAASC,EAASF,EAATE,UAAWvH,EAAIqH,EAAJrH,KAAMwH,EAAMH,EAANG,OACrCnL,EAAyBe,EAAzBf,GAAIC,EAAqBc,EAArBd,KAAME,EAAeY,EAAfZ,KACZiL,EAD2BrK,EAATV,OACOX,EAAAA,GAAAA,OAAsBuL,EAAQI,KAAOH,EAAUG,KA4B9E,OACEpK,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACyF,QAAQ,OAAOC,cAAc,SAAS0E,WAAW,SAASC,MAAO,IAAInK,SAAA,EACxEC,EAAAA,EAAAA,KAACH,EAAAA,GAAGF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAE3B,QA5BI,WAClBf,GAIAtF,GACFA,EAAY9B,EAEhB,EAqBMe,IAAEd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACG6J,EAAM/I,IAAE,IACX0J,gBAZFZ,EACKO,EAAOP,SAGT5B,IAAahJ,EAAKoL,EAAgB,cASnCK,OAjBCb,EAAW,OAAM,aAAAlK,OAAgB0K,GAkBlCpD,MAtBCgB,IAAahJ,EAAKiL,EAAQzH,aAAe4H,EAuB1CM,OAAQ,GACRH,MAAO,GACPI,aAAc,MACdhF,QAAS,OACTC,cAAe,SACf0E,WAAY,SACZlC,eAAgB,SAChBwC,OAAShB,GAAYzC,EAAY,UAAY,YAC7C/G,UACFC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAME,QAEdkB,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACC,MAAOrE,EAAKH,aAAc1B,GAAI,CAAEyJ,MAAO,OAAQO,UAAW,SAAU7J,UAAW,EAAG8J,SAAU,IAAK3K,SAAEnB,MAGrH,C,yECjDA,IAV8C,SAAHQ,GAA2C,IAADuL,EAAAvL,EAApCc,KAAAA,OAAI,IAAAyK,EAAG,uBAAsBA,EACjDxI,GAAqBC,EAAAA,EAAAA,KAAxCC,QAAWC,KAAQH,aAE3B,OACEnC,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACyF,QAAQ,OAAOyC,eAAe,SAAQhI,UACzCC,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACkE,QAAM,EAACjE,MAAOxE,EAAcuI,SAAU,CAAE1C,GAAI,GAAI9B,GAAI,IAAKnG,SAAEG,KAG7E,C,+JCTa2K,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAiBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0QAE5B,SAACzB,GAAK,OAAKA,EAAM0B,MAAM7I,QAAQuH,QAAQI,IAAI,IAClD,SAACR,GAAK,OAAKA,EAAM0B,MAAM7I,QAAQuH,QAAQI,IAAI,IAKhC,SAACR,GAAK,OAAKA,EAAM0B,MAAM7I,QAAQL,MAAMgI,IAAI,IAG7C,SAACR,GAAK,OAAKA,EAAM0B,MAAM7I,QAAQuH,QAAQI,IAAI,IAClD,SAACR,GAAK,OAAKA,EAAM0B,MAAM7I,QAAQL,MAAMgI,IAAI,I,4BCuBtD,EA7B4C,SAAH5K,GAAwC,IAAlCR,EAAIQ,EAAJR,KAAIuM,EAAA/L,EAAEmH,MAAAA,OAAK,IAAA4E,EAAG,CAAC,EAACA,EAAK3B,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GACjEwB,GAAQ9I,EAAAA,EAAAA,KAEdgJ,GAGIC,EAAAA,EAAAA,MAFFhH,EAAO+G,EAAP/G,QACaiH,EAAMF,EAAnBG,UAAaD,OAGf,OACEtL,EAAAA,EAAAA,KAACmH,EAAAA,GAAU,CACT9C,QAASA,EACTzF,KAAMA,EACN2H,MAAOA,EACPa,OAAQ,SAAAjG,GAAA,IAAGmG,EAAKnG,EAALmG,MAAqBtF,EAAKb,EAAnBoG,WAAcvF,MAAK,OACnCpC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2L,SAAS,WAAUzL,SAAA,EACtBC,EAAAA,EAAAA,KAAC6K,GAAelL,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACduI,WAAS,GACLZ,GACAkC,GAAK,IACT0B,MAAOA,EACPlJ,QAASsJ,EAAO1M,MAEjB0M,EAAO1M,KAASoB,EAAAA,EAAAA,KAAC8H,EAAAA,EAAc,CAACrH,GAAI,CAAE+K,SAAU,YAAcxJ,OAAK,EAAAjC,SAAO,OAALiC,QAAK,IAALA,OAAK,EAALA,EAAOyE,YACzE,GAId,C,sNCgCA,IArDsD,SAAHrH,GAAgG,IAA1FR,EAAIQ,EAAJR,KAAMmI,EAAO3H,EAAP2H,QAASE,EAAU7H,EAAV6H,WAAUkE,EAAA/L,EAAEmH,MAAAA,OAAK,IAAA4E,EAAG,CAAC,EAACA,EAAE5B,EAAQnK,EAARmK,SAAUzC,EAAQ1H,EAAR0H,SAAUI,EAAa9H,EAAb8H,cAAkBsC,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GACzI0B,GAGIC,EAAAA,EAAAA,MAFFhH,EAAO+G,EAAP/G,QACaiH,EAAMF,EAAnBG,UAAaD,OAGTzD,EAAU,SAACtH,GACfuG,GAAYvG,EAAMkL,gBACpB,EAEMnL,EAAW,SAACC,GAChB,IAAIuG,IAAYyC,GAIZrC,EAAe,CACjB,IAAM1G,EAAQD,EAAMmL,OAAOlL,MAE3B0G,EAAc1G,EAChB,CACF,EAEA,OACER,EAAAA,EAAAA,KAACmH,EAAAA,GAAU,CACT9C,QAASA,EACTzF,KAAMA,EACN2H,MAAOA,EACPa,OAAQ,SAAAjG,GAAA,IAAGmG,EAAKnG,EAALmG,MAAqBtF,EAAKb,EAAnBoG,WAAcvF,MAAK,OACnCpC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2L,SAAS,WAAUzL,SAAA,EACtBC,EAAAA,EAAAA,KAAC2L,EAAAA,GAAUhM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACiM,KAAG,GAAKpC,GAAWlC,GAAK,IAAE9G,MAAO8G,EAAM9G,MAAOqH,QAASA,EAAQ9H,SACxEgH,EAAQ3F,KAAI,SAAAiG,GAAA,IAAGf,EAAKe,EAALf,MAAO9F,EAAK6G,EAAL7G,MAAK,OAC1BR,EAAAA,EAAAA,KAAC6L,EAAAA,EAAgB,CAAarL,MAAOA,EACnC8F,OACEtG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CAACC,MAAOM,EAAWlH,SAAEuG,IAElCjC,SACErE,EAAAA,EAAAA,KAAC8L,EAAAA,EAAK,CACJvC,SAAUA,EACVwC,QAASzE,EAAM9G,QAAUA,EACzBF,SAAUA,EACVE,MAAOA,KATUA,EAYrB,OAGL8K,EAAO1M,KAASoB,EAAAA,EAAAA,KAAC8H,EAAAA,EAAc,CAACrH,GAAI,CAAE+K,SAAU,YAAcxJ,OAAK,EAAAjC,SAAO,OAALiC,QAAK,IAALA,OAAK,EAALA,EAAOyE,YACzE,GAId,C,4GCxDA,IANoD,SAAHrH,GAAmE,IAAD4M,EAAA5M,EAA5DR,KAAAA,OAAI,IAAAoN,EAAGjN,EAAAA,GAAAA,QAAgBiN,EAAAC,EAAA7M,EAAEsL,SAAAA,OAAQ,IAAAuB,EAAG,QAAOA,EAAKzC,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GACpGc,EAAO0B,EAAAA,GAAUtN,GAEvB,OAAOoB,EAAAA,EAAAA,KAACwK,GAAI7K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAEkB,SAAUA,EAAUjK,IAAEd,EAAAA,EAAAA,GAAA,GAAO6J,EAAM/I,MAC7D,C,0ECuDA,IApD0C,SAAHrB,GAAwE,IAAlET,EAAES,EAAFT,GAAIgJ,EAAQvI,EAARuI,SAAU7I,EAAIM,EAAJN,KAAIqN,EAAA/M,EAAEwI,KAAAA,OAAI,IAAAuE,EAAG,GAAEA,EAAE5C,EAAQnK,EAARmK,SAAUzC,EAAQ1H,EAAR0H,SAAUe,EAAOzI,EAAPyI,QACnB8B,GAAVvH,EAAAA,EAAAA,KAAzDC,QAAO+J,EAAAzC,EAAIC,QAAWI,EAAIoC,EAAJpC,KAAM7H,EAAYiK,EAAZjK,aAAgB2H,EAAMH,EAANG,OA4BpD,OACE9J,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CAACyF,QAAQ,OAAOC,cAAc,SAAS0E,WAAW,SAASC,MAAOtC,EAAO,GAAG7H,UAC9EC,EAAAA,EAAAA,KAACH,EAAAA,EAAG,CACFgI,QA7Bc,SAAClJ,GAAU,OAAK,WAC9BmI,GAIAe,GACFA,EAAQ,CAAElJ,GAAAA,GAEd,CAAE,CAqBa6C,CAAY7C,GACrB8B,GAAI,CACF0J,gBAZFZ,EACKO,EAAOP,SAGT5B,IAAahJ,EAAKqL,EAAO,cAS1BI,OAjBCb,EAAW,OAAM,aAAAlK,OAAgB2K,GAkBlCrD,MAtBCgB,IAAahJ,EAAKwD,EAAe6H,EAuBlCK,OAAQzC,EACRsC,MAAOtC,EACP0C,aAAc,MACdhF,QAAS,OACTC,cAAe,SACf0E,WAAY,SACZlC,eAAgB,SAChBwC,OAAShB,GAAYzC,EAAY,UAAY,WAC7C/G,UACFC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAME,OAIpB,C,uKC5CA,EAf8C,SAAHM,GAAsB,IAAboK,EAAK6C,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAnN,GAAAA,IACvD,OACEY,EAAAA,EAAAA,KAACwM,EAAAA,GAAU7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6J,GAAK,IACT7C,MAAM,UACNiB,KAAK,QACLnH,IAAEd,EAAAA,EAAAA,GAAA,GACG6J,EAAM/I,IAEXoH,QAAS2B,EAAM3B,QAAQ9H,UACvBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAMG,EAAAA,GAAAA,cAGlB,ECEA,EAf8C,SAAHK,GAAsB,IAAboK,EAAK6C,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAnN,GAAAA,IACvD,OACEY,EAAAA,EAAAA,KAACwM,EAAAA,GAAU7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6J,GAAK,IACT7C,MAAM,UACNiB,KAAK,QACLnH,IAAEd,EAAAA,EAAAA,GAAA,GACG6J,EAAM/I,IAEXoH,QAAS2B,EAAM3B,QAAQ9H,UACvBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAMG,EAAAA,GAAAA,SAGlB,ECEA,EAfkD,SAAHK,GAAsB,IAAboK,EAAK6C,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAnN,GAAAA,IAC3D,OACEY,EAAAA,EAAAA,KAACwM,EAAAA,GAAU7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6J,GAAK,IACT7C,MAAM,YACNiB,KAAK,QACLnH,IAAEd,EAAAA,EAAAA,GAAA,GACG6J,EAAM/I,IAEXoH,QAAS2B,EAAM3B,QAAQ9H,UACvBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAMG,EAAAA,GAAAA,WAGlB,ECEA,EAfkD,SAAHK,GAAsB,IAAboK,EAAK6C,OAAAC,OAAA,KAAAC,EAAAA,EAAAA,GAAAnN,GAAAA,IAC3D,OACEY,EAAAA,EAAAA,KAACwM,EAAAA,GAAU7M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6J,GAAK,IACT7C,MAAM,YACNiB,KAAK,QACLnH,IAAEd,EAAAA,EAAAA,GAAA,GACG6J,EAAM/I,IAEXoH,QAAS2B,EAAM3B,QAAQ9H,UACvBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAI,CAAC5L,KAAMG,EAAAA,GAAAA,WAGlB,E,uKCgEA,EA/D4C,SAAHK,GAWlC,IAVLc,EAAId,EAAJc,KAAIuM,EAAArN,EACJqG,eAAAA,OAAc,IAAAgH,GAAQA,EAAAC,EAAAtN,EACtBsG,eAAAA,OAAc,IAAAgH,GAAQA,EAAAC,EAAAvN,EACtBuG,iBAAAA,OAAgB,IAAAgH,GAAQA,EAAAC,EAAAxN,EACxBwG,iBAAAA,OAAgB,IAAAgH,GAAQA,EACxB/G,EAAiBzG,EAAjByG,kBACAC,EAAiB1G,EAAjB0G,kBACAC,EAAmB3G,EAAnB2G,oBACAC,EAAmB5G,EAAnB4G,oBACGwD,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GAEmBvH,GAAqBC,EAAAA,EAAAA,KAAxCC,QAAWC,KAAQH,aA0B3B,OACEvC,EAAAA,EAAAA,MAACC,EAAAA,GAAGF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACF2F,QAAQ,OACR2E,WAAW,UACPT,GAAK,IACT/I,IAAEd,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO6J,EAAM/I,IAAE,IAAEG,UAAW,EAAGF,aAAc,IAAIX,SAAA,CAElD0F,IAAkBzF,EAAAA,EAAAA,KAAC6M,EAAU,CAAChF,QA/Bf,WACdhC,GACFA,GAEJ,KA4BI7F,EAAAA,EAAAA,KAAC0G,EAAAA,EAAU,CACTC,MAAOxE,EACP1B,GAAI,CACFyJ,MAAO,OACPO,UAAW,SACXC,SAAU,CAAE1C,GAAI,GAAI9B,GAAI,IACxB4G,WAAY,QACZ/M,SACDG,IAEFwF,IAAkB1F,EAAAA,EAAAA,KAAC+M,EAAU,CAAClF,QApCf,WACd/B,GACFA,GAEJ,IAiCKH,IAAoB3F,EAAAA,EAAAA,KAACgN,EAAY,CAACnF,QA/BjB,WAChB9B,GACFA,GAEJ,IA4BKH,IAAoB5F,EAAAA,EAAAA,KAACiN,EAAY,CAACpF,QA1BjB,WAChB7B,GACFA,GAEJ,OAyBF,C,iGCtBA,IApD0C,SAAH5G,GAA4B,IAAtBJ,EAAII,EAAJJ,KAASwK,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GAEnDwD,EAAkB,SAATlO,EAETmO,EAAU,WACd,OAAQnO,GACR,IAAK,OAYL,QACE,MAAO,CAAEoO,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAVlD,IAAK,OACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAElD,IAAK,UACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,KAElD,IAAK,WACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAKpD,EAEA,MAtB4B,aAATtO,GAwBfY,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACC,UAAW,EAAEjB,SAAA,EAC3BC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4I,MAAO,IAAK5E,QAAQ,OAAOyC,eAAe,SAAQhI,UAC3DC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,WAAWkC,OAAQ8C,IAAUC,SAAUlD,MAAOiD,IAAUC,eAE1FpN,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4I,MAAO,IAAK5E,QAAQ,OAAOyC,eAAe,SAAQhI,UAC3DC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,WAAWkC,OAAQ8C,IAAUE,UAAWnD,MAAOiD,IAAUE,gBAE3FrN,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4I,MAAO,IAAK5E,QAAQ,OAAOyC,eAAe,SAAQhI,UAC3DC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,WAAWkC,OAAQ8C,IAAUG,SAAUpD,MAAOiD,IAAUC,kBAK5FxN,EAAAA,EAAAA,MAACkB,EAAAA,GAAI,CAACC,WAAS,EAACgH,eAAe,SAAS9G,OAAQiM,EAAS,EAAI,EAAEnN,SAAA,EAC7DC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,UAChBC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,UAAUkC,OAAQ8C,IAAUC,eAE9DpN,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,UAChBC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,UAAUqF,UAAU,OAAOnD,OAAQ8C,IAAUE,gBAE/ErN,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACQ,MAAI,EAAC4E,GAAI,GAAGnG,UAChBC,EAAAA,EAAAA,KAACuN,EAAAA,GAAW5N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAErB,QAAQ,UAAUkC,OAAQ8C,IAAUG,gBAItE,C,yHC3BA,IApB0C,SAAHlO,GAAyD,IAADqO,EAAArO,EAAlDkJ,KAAAA,OAAI,IAAAmF,GAAQA,EAAEvN,EAAId,EAAJc,KAAMlB,EAAII,EAAJJ,KAAMuJ,EAAOnJ,EAAPmJ,QAAYiB,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GAMtF,OACE1J,EAAAA,EAAAA,KAAC0N,EAAAA,GAAW/N,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACV2I,KAAMA,EACNqF,iBAAkB,IAClBpF,QARoB,WACtBA,GACF,GAOQiB,GAAK,IAAAzJ,UAETC,EAAAA,EAAAA,KAAC4N,EAAAA,EAAQ,CAACC,SAAU7O,EAAKe,SACtBG,MAIT,C,0IC1Ba4N,GAAahD,EAAAA,EAAAA,GAAO3K,EAAAA,EAAP2K,CAAa,CACrC,iBAAkB,CAClB,I,8CC4BF,EApBkC,SAAH1L,GAA0D,IAApD/B,EAAI+B,EAAJ/B,KAAI0Q,EAAA3O,EAAEiB,aAAAA,OAAY,IAAA0N,EAAG,IAAGA,EAAEzN,EAAQlB,EAARkB,SAAakJ,GAAKC,EAAAA,EAAAA,GAAArK,EAAAsK,GACvE1L,GAAMC,EAAAA,EAAAA,MAAND,EACRE,EAA0CC,EAAAA,SAAuBkC,GAAa/B,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAvE8P,EAAa1P,EAAA,GAAE2P,EAAgB3P,EAAA,GAOtC,OACE0B,EAAAA,EAAAA,KAAC8N,GAAUnO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK6J,GAAK,IAAEhJ,MAAOwN,EAAe1N,SANzB,SAACC,EAA6ByN,GAClDC,EAAiBD,GACjB1N,EAASC,EAAOyN,EAClB,EAGuEjO,SAEjE1C,EAAK+D,KAAI,SAAAD,GAAA,IAAGX,EAAKW,EAALX,MAAO8F,EAAKnF,EAALmF,MAAK,OACtBtG,EAAAA,EAAAA,KAACkO,EAAAA,EAAM,CAAC1N,MAAOA,EAAmB8F,MAAOtI,EAAEsI,IAAhB9F,EAA0B,MAK/D,C","sources":["modules/Categories/pages/CategoryList.tsx","modules/Categories/pages/CreateEditCategory.tsx","modules/Categories/Categories.tsx","shared/components/CategoryIcon.tsx","shared/components/EmptyState.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormRadioGroup.tsx","shared/components/Icon.tsx","shared/components/ItemIcon.tsx","shared/components/BackButton.tsx","shared/components/EditButton.tsx","shared/components/DeleteButton.tsx","shared/components/CancelButton.tsx","shared/components/PageTitle.tsx","shared/components/Skeleton.tsx","shared/components/Snackbar.tsx","shared/components/Tabs.styles.ts","shared/components/Tabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getCategories, selectCategory } from 'store/reducers';\nimport { Category, CategoryType, IconType, Option } from 'shared/models';\nimport { ROUTES, TABS } from 'shared/constants';\nimport Tabs from 'shared/components/Tabs';\nimport Skeleton from 'shared/components/Skeleton';\nimport PageTitle from 'shared/components/PageTitle';\nimport CategoryIcon from 'shared/components/CategoryIcon';\nimport EmptyState from 'shared/components/EmptyState';\n\ninterface CategoryListProps { }\n\nconst CategoryList: React.FC<CategoryListProps> = () => {\n  const tabs = TABS;\n  const dispatch = useAppDispatch();\n  const { categories, status } = useAppSelector(selectCategory);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n  const [categoryType, setCategoryType] = React.useState<Option['value']>(String(CategoryType.expense));\n\n  const addIconData: Category = {\n    id: '',\n    name: 'New category',\n    nameKey: 'CATEGORIES.NEW_CATEGORY',\n    icon: IconType.plus,\n    type: Number(categoryType)\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle' || status === 'failed') {\n      dispatch(getCategories());\n    }\n  }, [dispatch, status]);\n\n  const handleTabChange = (event: React.SyntheticEvent, value: Option['value']): void => {\n    setCategoryType(value);\n  };\n\n  const handleCategoryIconClick = ({ id, name }: Category): void => {\n    navigate(`${ROUTES.categories.path}/view/${name}`, { state: { id } });\n  };\n\n  const openNewCategoryPage = (): void => {\n    navigate(`${ROUTES.categories.path}/new`, { state: { categoryType } });\n  };\n\n  const getCategoryData = (data: Category): Category => {\n    return {\n      ...data,\n      name: data.nameKey ? t(data.nameKey) : data.name\n    };\n  };\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading' || status !== 'succeeded') {\n      return <Skeleton type='circular' sx={{ marginTop: 1 }} />;\n    }\n\n    if (!categories?.length) {\n      return <EmptyState text={t('CATEGORIES.EMPTY_TEXT')} />;\n    }\n\n    return (\n      <Grid container columnGap={4} rowGap={4} sx={{ marginTop: 4 }}>\n        {categories.filter(({ type }) => String(type) === categoryType).map((category) => (\n          <Grid item key={category.id}>\n            <CategoryIcon data={getCategoryData(category)} onItemClick={handleCategoryIconClick} />\n          </Grid>\n        ))}\n        <Grid item>\n          <CategoryIcon data={getCategoryData(addIconData)} onItemClick={openNewCategoryPage} />\n        </Grid>\n      </Grid>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('CATEGORIES.PAGE_TITLE')} />\n      <Tabs centered defaultValue={categoryType} tabs={tabs} onChange={handleTabChange} sx={{ marginBottom: 3 }} />\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default CategoryList;\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createCategory,\n  editCategory,\n  getCategory,\n  selectCategory,\n  selectCurrentCategory,\n  resetCurrentCategory,\n  selectCategoryError,\n  deleteCategory\n} from 'store/reducers';\nimport { CATEGORY_ICONS_LIST, TABS, ROUTES } from 'shared/constants';\nimport { Category, CategoryDTO, CategoryField, CategoryType, IconType, ManageMode } from 'shared/models';\nimport { categoryHelper, mapCategoryTypesWithTranslations } from 'shared/helpers';\nimport PageTitle from 'shared/components/PageTitle';\nimport Button from 'shared/components/Button';\nimport FormInput from 'shared/components/FormInput';\nimport Snackbar from 'shared/components/Snackbar';\nimport ItemIcon from 'shared/components/ItemIcon';\nimport FormRadioGroup from 'shared/components/FormRadioGroup';\nimport Dialog from 'shared/components/Dialog';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\n\ninterface NewCategoryProps {\n  mode: ManageMode;\n}\n\nconst CreateEditCategory: React.FC<NewCategoryProps> = ({ mode }) => {\n  const tabs = TABS;\n  const icons = CATEGORY_ICONS_LIST;\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const dispatch = useAppDispatch();\n  const { status, deleteStatus, currentStatus } = useAppSelector(selectCategory);\n  const error = useAppSelector(selectCategoryError);\n  const category = useAppSelector(selectCurrentCategory);\n  const { palette: { info: { contrastText } } } = useTheme();\n  const helper = categoryHelper();\n  const { t } = useTranslation();\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const loading = status === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const categoryId = state?.id as CategoryDTO['id'];\n  const categoryName = category?.nameKey ? t(category.nameKey) : (category?.name || '');\n  const categoryType = state?.categoryType as CategoryType;\n  const isCreateMode = mode === ManageMode.create;\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n\n  const defaultValues: Partial<Category> = {\n    type: String(categoryType) as unknown as number,\n    name: '',\n  };\n\n  const methods = useForm<Category>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit, control, watch, reset } = methods;\n  const watchType = Number(watch(CategoryField.type));\n\n  const handleAccountIconClick = ({ id }: { id: string }): void => {\n    if (isViewMode) {\n      return;\n    }\n\n    setValue(CategoryField.icon, id as IconType, { shouldValidate: true });\n  };\n\n  const handleCategoryTypeChange = (value: string): void => {\n    const type = Number(value) as CategoryType;\n\n    setValue(CategoryField.type, type, { shouldValidate: true });\n  };\n\n  const handleFormSubmit = (data: Category): void => {\n    isEditMode ? dispatch(editCategory([categoryId, data])) : dispatch(createCategory(data));\n    setFormSubmitted(true);\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isCreateMode ? reset(defaultValues) : setFormValues();\n\n    isEditMode\n      ? navigate(`${ROUTES.categories.path}/view/${categoryName}`, { state: { id: categoryId } })\n      : navigate(ROUTES.categories.path);\n  };\n\n  const handleDeleteCategory = (): void => {\n    dispatch(deleteCategory(categoryId));\n    setDeleteClicked(true);\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const getTitle = (): string => {\n    if (isCreateMode) {\n      return t('CATEGORIES.NEW_CATEGORY');\n    } else if (category && (isEditMode || isViewMode)) {\n      return categoryName;\n    } else if (currentStatus !== 'loading') {\n      return t('CATEGORIES.EMPTY_TITLE');\n    }\n\n    return '';\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.categories.path}/edit/${categoryName}`, { state: { id: categoryId } });\n  };\n\n  const setFormValues = React.useCallback(() => {\n    if (category) {\n      setValue(CategoryField.type, String(category.type) as unknown as number);\n      setValue(CategoryField.name, category.nameKey ? t(category.nameKey) : category.name);\n      setValue(CategoryField.icon, category.icon);\n    }\n  }, [category, setValue, t]);\n\n  const resetCategory = React.useCallback(() => {\n    dispatch(resetCurrentCategory());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.categories.path}`);\n    resetCategory();\n  }, [navigate, resetCategory]);\n\n  React.useEffect(() => {\n    if (status === 'succeeded' && formSubmitted) {\n      goBack();\n      setShowSnackbar(false);\n    }\n\n    if (status === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [goBack, status, formSubmitted]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (categoryId && currentStatus === 'idle' && (isEditMode || isViewMode) && !deleteClicked) {\n      dispatch(getCategory(categoryId));\n    }\n  }, [categoryId, isEditMode, isViewMode, currentStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    setFormValues();\n  }, [setFormValues]);\n\n  React.useEffect(() => {\n    return () => {\n      resetCategory();\n    };\n  }, [resetCategory]);\n\n  const renderContent = (): React.ReactElement => {\n    if (currentStatus === 'loading') {\n      return <Skeleton type='form' />;\n    }\n\n    if (!isCreateMode && (!category || !categoryId)) {\n      return <EmptyState text={t('CATEGORIES.EMPTY_TEXT_RENDER_CONTENT')} />;\n    }\n\n    return (\n      <FormProvider {...methods}>\n        <Grid container rowGap={5}>\n          <Grid item xs={12}>\n            <FormInput\n              InputProps={{ readOnly: isViewMode }}\n              label={t('COMMON.NAME')}\n              name={CategoryField.name}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.name.required!.message)\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography color={contrastText} sx={{ marginY: 1 }}>{t('COMMON.TYPE')}</Typography>\n            <FormRadioGroup\n              readonly={isViewMode}\n              name={CategoryField.type}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.type.required!.message)\n                }\n              }}\n              options={mapCategoryTypesWithTranslations(tabs, t)}\n              labelColor={contrastText}\n              value={watchType}\n              onRadioChange={handleCategoryTypeChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography color={contrastText} sx={{ marginY: 1 }}>{t('COMMON.ICON')}</Typography>\n            <Controller\n              control={control}\n              name={CategoryField.icon}\n              rules={{\n                required: true\n              }}\n              render={({ field, fieldState: { error } }) => (\n                <>\n                  <Grid container {...field} columnGap={1} rowGap={3} sx={{ marginTop: 2 }}>\n                    {\n                      icons.map(({ name }) => (\n                        <Grid item key={name}>\n                          <ItemIcon selected={field.value} id={name} icon={name} size={50} readonly={isViewMode} onClick={handleAccountIconClick} />\n                        </Grid>\n                      ))\n                    }\n                  </Grid>\n                  {error && <FormHelperText error>{t(helper.icon[error.type]!.message)}</FormHelperText>}\n                </>\n              )}\n            />\n          </Grid>\n        </Grid>\n      </FormProvider>\n    );\n  };\n\n  return (\n    <Box component='form' display='flex' flexDirection='column' flexGrow={1} onSubmit={handleSubmit(handleFormSubmit)}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!category}\n        withDeleteButton={isEditMode && !!category}\n        withCancelButton={!isViewMode && !!category}\n        text={getTitle()}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      <Box flexGrow={1}>\n        {renderContent()}\n      </Box>\n      {!isViewMode && (\n        <Grid container display='flex' justifyContent='flex-end' rowGap={2} columnGap={2} sx={{ marginTop: 4 }}>\n          <Grid item sm='auto' xs={12}>\n            <Button aria-label='Save category' fullWidth type='submit' variant='contained' loading={loading}\n              onClick={handleSubmit(handleFormSubmit)}>\n              {t('COMMON.SAVE')}\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar type='error' text={error?.messageKey ? t(error.messageKey) : error?.message || ''} open={showSnackbar} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('CATEGORIES.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteCategory}\n      >\n        <Typography variant='subtitle1'>\n          {t('CATEGORIES.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box >\n  );\n};\n\nexport default CreateEditCategory;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport CategoryList from './pages/CategoryList';\nimport CreateEditCategory from './pages/CreateEditCategory';\n\nconst Categories: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<CategoryList />} />\n      <Route path='/new' element={<CreateEditCategory mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditCategory mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditCategory mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.categories.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Categories;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { Category, CategoryType } from 'shared/models';\nimport Icon from 'shared/components/Icon';\n\ntype CategoryIconProps = {\n  data: Category;\n  selected?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n  onItemClick?: (data: Category) => void;\n} & BoxProps\n\nconst CategoryIcon: React.FC<CategoryIconProps> = ({ data, selected, disabled, readonly, onItemClick, ...props }) => {\n  const { palette: { primary, secondary, info, action } } = useTheme();\n  const { id, name, icon, type } = data;\n  const categoryColor = type === CategoryType.income ? primary.main : secondary.main;\n\n  const onCategoryClick = (): void => {\n    if (readonly) {\n      return;\n    }\n\n    if (onItemClick) {\n      onItemClick(data);\n    }\n  };\n\n  const getColor = (): string => {\n    return selected === id ? primary.contrastText : categoryColor;\n  };\n\n  const getBorder = (): string => {\n    return disabled ? 'none' : `1px solid ${categoryColor}`;\n  };\n\n  const getBackgroundColor = (): string => {\n    if (disabled) {\n      return action.disabled;\n    }\n\n    return selected === id ? categoryColor : 'transparent';\n  };\n\n  return (\n    <Box display='flex' flexDirection='column' alignItems='center' width={100}>\n      <Box {...props} onClick={onCategoryClick}\n        sx={{\n          ...props.sx,\n          backgroundColor: getBackgroundColor(),\n          border: getBorder(),\n          color: getColor(),\n          height: 64,\n          width: 64,\n          borderRadius: '50%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: (disabled || readonly) ? 'default' : 'pointer'\n        }}>\n        <Icon name={icon}></Icon>\n      </Box>\n      <Typography color={info.contrastText} sx={{ width: '100%', textAlign: 'center', marginTop: 1, fontSize: 13 }}>{name}</Typography>\n    </Box>\n  );\n};\n\nexport default CategoryIcon;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n\ninterface EmptyStateProps {\n  text: string | null;\n}\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text = 'No data is available' }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n\n  return (\n    <Box display='flex' justifyContent='center'>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{text}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport RadioGroup, { RadioGroupProps } from '@mui/material/RadioGroup';\nimport Radio from '@mui/material/Radio';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Typography from '@mui/material/Typography';\nimport { FormControlRules, Option } from 'shared/models';\n\ntype FormRadioGroupProps = {\n  name: string;\n  options: Option[];\n  labelColor?: string;\n  rules?: FormControlRules;\n  disabled?: boolean;\n  readonly?: boolean;\n  onRadioChange: (checkedValue: Option['value']) => void;\n} & RadioGroupProps;\n\nconst FormRadioGroup: React.FC<FormRadioGroupProps> = ({ name, options, labelColor, rules = {}, disabled, readonly, onRadioChange, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  const onClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\n    readonly && event.preventDefault();\n  };\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    if (readonly || disabled) {\n      return;\n    }\n\n    if (onRadioChange) {\n      const value = event.target.value;\n\n      onRadioChange(value);\n    }\n  };\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <RadioGroup row {...props} {...field} value={field.value} onClick={onClick}>\n            {options.map(({ label, value }) => (\n              <FormControlLabel key={value} value={value}\n                label={\n                  <Typography color={labelColor}>{label}</Typography>\n                }\n                control={\n                  <Radio\n                    disabled={disabled}\n                    checked={field.value === value}\n                    onChange={onChange}\n                    value={value}\n                  />\n                }\n              />\n            ))}\n          </RadioGroup>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormRadioGroup;\n","import * as React from 'react';\nimport { IconProps } from '@mui/material/Icon';\nimport { ALL_ICONS } from 'shared/constants';\nimport { IconType } from 'shared/models';\n\ntype IconComponentProps = {\n  name: string;\n} & Partial<IconProps<any>>;\n\nconst IconComponent: React.FC<IconComponentProps> = ({ name = IconType.default, fontSize = 'large', ...props }) => {\n  const Icon = ALL_ICONS[name];\n\n  return <Icon {...props} fontSize={fontSize} sx={{ ...props.sx }}></Icon>;\n};\n\nexport default IconComponent;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { IconType } from 'shared/models';\nimport Icon from 'shared/components/Icon';\n\ninterface ItemIconProps {\n  id: string;\n  icon: IconType;\n  selected?: string;\n  size?: number;\n  disabled?: boolean;\n  readonly?: boolean;\n  onClick?: ({ id }: { id: string }) => void;\n}\n\nconst ItemIcon: React.FC<ItemIconProps> = ({ id, selected, icon, size = 64, disabled, readonly, onClick }) => {\n  const { palette: { primary: { main, contrastText }, action } } = useTheme();\n\n  const onItemClick = (id: string) => (): void => {\n    if (readonly) {\n      return;\n    }\n\n    if (onClick) {\n      onClick({ id });\n    }\n  };\n\n  const getColor = (): string => {\n    return selected === id ? contrastText : main;\n  };\n\n  const getBorder = (): string => {\n    return disabled ? 'none' : `1px solid ${main}`;\n  };\n\n  const getBackgroundColor = (): string => {\n    if (disabled) {\n      return action.disabled;\n    }\n\n    return selected === id ? main : 'transparent';\n  };\n\n  return (\n    <Box display='flex' flexDirection='column' alignItems='center' width={size + 20}>\n      <Box\n        onClick={onItemClick(id)}\n        sx={{\n          backgroundColor: getBackgroundColor(),\n          border: getBorder(),\n          color: getColor(),\n          height: size,\n          width: size,\n          borderRadius: '50%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: (disabled || readonly) ? 'default' : 'pointer'\n        }}>\n        <Icon name={icon}></Icon>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ItemIcon;\n","import * as React from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { IconType } from 'shared/models';\nimport Icon from './Icon';\n\ntype BackButtonProps = IconButtonProps;\n\nconst BackButton: React.FC<BackButtonProps> = ({ ...props }) => {\n  return (\n    <IconButton\n      {...props}\n      color='primary'\n      size='small'\n      sx={{\n        ...props.sx,\n      }}\n      onClick={props.onClick}>\n      <Icon name={IconType.arrowBack}></Icon>\n    </IconButton>\n  );\n};\n\nexport default BackButton;\n","import * as React from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { IconType } from 'shared/models';\nimport Icon from './Icon';\n\ntype EditButtonProps = IconButtonProps;\n\nconst EditButton: React.FC<EditButtonProps> = ({ ...props }) => {\n  return (\n    <IconButton\n      {...props}\n      color='primary'\n      size='small'\n      sx={{\n        ...props.sx,\n      }}\n      onClick={props.onClick}>\n      <Icon name={IconType.edit}></Icon>\n    </IconButton>\n  );\n};\n\nexport default EditButton;\n","import * as React from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { IconType } from 'shared/models';\nimport Icon from './Icon';\n\ntype DeleteButtonProps = IconButtonProps;\n\nconst DeleteButton: React.FC<DeleteButtonProps> = ({ ...props }) => {\n  return (\n    <IconButton\n      {...props}\n      color='secondary'\n      size='small'\n      sx={{\n        ...props.sx,\n      }}\n      onClick={props.onClick}>\n      <Icon name={IconType.delete}></Icon>\n    </IconButton>\n  );\n};\n\nexport default DeleteButton;\n","import * as React from 'react';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport { IconType } from 'shared/models';\nimport Icon from './Icon';\n\ntype CancelButtonProps = IconButtonProps;\n\nconst CancelButton: React.FC<CancelButtonProps> = ({ ...props }) => {\n  return (\n    <IconButton\n      {...props}\n      color='secondary'\n      size='small'\n      sx={{\n        ...props.sx,\n      }}\n      onClick={props.onClick}>\n      <Icon name={IconType.cancel}></Icon>\n    </IconButton>\n  );\n};\n\nexport default CancelButton;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport BackButton from './BackButton';\nimport EditButton from './EditButton';\nimport DeleteButton from './DeleteButton';\nimport CancelButton from './CancelButton';\n\ntype PageTitleProps = {\n  text: string;\n  withBackButton?: boolean;\n  withEditButton?: boolean;\n  withDeleteButton?: boolean;\n  withCancelButton?: boolean;\n  onBackButtonClick?: () => void;\n  onEditButtonClick?: () => void;\n  onDeleteButtonClick?: () => void;\n  onCancelButtonClick?: () => void;\n} & BoxProps;\n\nconst PageTitle: React.FC<PageTitleProps> = ({\n  text,\n  withBackButton = false,\n  withEditButton = false,\n  withDeleteButton = false,\n  withCancelButton = false,\n  onBackButtonClick,\n  onEditButtonClick,\n  onDeleteButtonClick,\n  onCancelButtonClick,\n  ...props\n}) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n\n  const onBackClick = (): void => {\n    if (onBackButtonClick) {\n      onBackButtonClick();\n    }\n  };\n\n  const onEditClick = (): void => {\n    if (onEditButtonClick) {\n      onEditButtonClick();\n    }\n  };\n\n  const onDeleteClick = (): void => {\n    if (onDeleteButtonClick) {\n      onDeleteButtonClick();\n    }\n  };\n\n  const onCancelClick = (): void => {\n    if (onCancelButtonClick) {\n      onCancelButtonClick();\n    }\n  };\n\n  return (\n    <Box\n      display='flex'\n      alignItems='center'\n      {...props}\n      sx={{ ...props.sx, marginTop: 2, marginBottom: 5 }}\n    >\n      {withBackButton && <BackButton onClick={onBackClick} />}\n      <Typography\n        color={contrastText}\n        sx={{\n          width: '100%',\n          textAlign: 'center',\n          fontSize: { sm: 22, xs: 18 },\n          fontWeight: 'bold'\n        }}>\n        {text}\n      </Typography>\n      {withEditButton && <EditButton onClick={onEditClick} />}\n      {withDeleteButton && <DeleteButton onClick={onDeleteClick} />}\n      {withCancelButton && <CancelButton onClick={onCancelClick} />}\n    </Box>\n  );\n};\n\nexport default PageTitle;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n","import styled from '@emotion/styled';\nimport Tabs from '@mui/material/Tabs';\n\nexport const StyledTabs = styled(Tabs)({\n  '&.MuiTabs-root': {\n  }\n});\n","import * as React from 'react';\nimport { TabsProps as MuiTabsProps } from '@mui/material/Tabs';\nimport MuiTab from '@mui/material/Tab';\nimport { useTranslation } from 'core/i18n';\nimport { Option } from 'shared/models';\nimport { StyledTabs } from './Tabs.styles';\n\ntype TabsProps = {\n  tabs: Option[];\n  defaultValue?: Option['value'];\n  onChange: (event: React.SyntheticEvent, value: Option['value']) => void;\n} & MuiTabsProps;\n\nconst Tabs: React.FC<TabsProps> = ({ tabs, defaultValue = '0', onChange, ...props }) => {\n  const { t } = useTranslation();\n  const [selectedValue, setSelectedValue] = React.useState<string>(defaultValue);\n\n  const onValueChange = (event: React.SyntheticEvent, selectedValue: Option['value']): void => {\n    setSelectedValue(selectedValue);\n    onChange(event, selectedValue);\n  };\n\n  return (\n    <StyledTabs {...props} value={selectedValue} onChange={onValueChange}>\n      {\n        tabs.map(({ value, label }) => (\n          <MuiTab value={value} key={value} label={t(label)} />\n        ))\n      }\n    </StyledTabs>\n  );\n};\n\nexport default Tabs;\n"],"names":["tabs","TABS","dispatch","useAppDispatch","_useAppSelector","useAppSelector","selectCategory","categories","status","navigate","useNavigate","t","useTranslation","_React$useState","React","String","CategoryType","_React$useState2","_slicedToArray","categoryType","setCategoryType","addIconData","id","name","nameKey","icon","IconType","type","Number","getCategories","handleCategoryIconClick","_ref","concat","ROUTES","state","openNewCategoryPage","getCategoryData","data","_objectSpread","_jsxs","Box","flexGrow","children","_jsx","PageTitle","text","Tabs","centered","defaultValue","onChange","event","value","sx","marginBottom","Skeleton","marginTop","length","Grid","container","columnGap","rowGap","filter","_ref2","map","category","item","CategoryIcon","onItemClick","EmptyState","mode","icons","CATEGORY_ICONS_LIST","useLocation","deleteStatus","currentStatus","error","selectCategoryError","selectCurrentCategory","contrastText","useTheme","palette","info","helper","categoryHelper","formSubmitted","setFormSubmitted","_React$useState3","_React$useState4","deleteClicked","setDeleteClicked","_React$useState5","_React$useState6","showSnackbar","setShowSnackbar","_React$useState7","_React$useState8","dialogOpened","setDialogOpened","loading","deleteLoading","categoryId","categoryName","isCreateMode","ManageMode","isEditMode","isViewMode","defaultValues","methods","useForm","reValidateMode","setValue","handleSubmit","control","watch","reset","watchType","CategoryField","handleAccountIconClick","shouldValidate","handleCategoryTypeChange","handleFormSubmit","editCategory","createCategory","setFormValues","resetCategory","resetCurrentCategory","goBack","getCategory","component","display","flexDirection","onSubmit","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","onDeleteButtonClick","onCancelButtonClick","FormProvider","xs","FormInput","InputProps","readOnly","label","rules","required","message","Typography","color","marginY","FormRadioGroup","readonly","options","mapCategoryTypesWithTranslations","labelColor","onRadioChange","Controller","render","_ref3","field","fieldState","_Fragment","_ref4","ItemIcon","selected","size","onClick","FormHelperText","justifyContent","sm","Button","fullWidth","variant","Snackbar","messageKey","open","onClose","Dialog","maxWidth","title","actionButtonText","onAction","deleteCategory","Routes","Route","path","element","CategoryList","CreateEditCategory","Navigate","to","replace","disabled","props","_objectWithoutProperties","_excluded","_useTheme$palette","primary","secondary","action","categoryColor","main","alignItems","width","backgroundColor","border","height","borderRadius","cursor","Icon","textAlign","fontSize","_ref$text","noWrap","StyledTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","theme","_ref$rules","_useFormContext","useFormContext","errors","formState","position","preventDefault","target","RadioGroup","row","FormControlLabel","Radio","checked","_ref$name","_ref$fontSize","ALL_ICONS","_ref$size","_useTheme$palette$pri","Object","assign","_objectDestructuringEmpty","IconButton","_ref$withBackButton","_ref$withEditButton","_ref$withDeleteButton","_ref$withCancelButton","BackButton","fontWeight","EditButton","DeleteButton","CancelButton","isForm","getSize","firstBar","secondBar","thirdBar","MuiSkeleton","animation","_ref$open","MuiSnackbar","autoHideDuration","MuiAlert","severity","StyledTabs","_ref$defaultValue","selectedValue","setSelectedValue","MuiTab"],"sourceRoot":""}