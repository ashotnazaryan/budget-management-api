{"version":3,"file":"static/js/850.8905252f.chunk.js","mappings":"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","sources":["modules/Profile.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/Skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { editProfile, getProfile, selectProfile } from 'store/reducers';\nimport { ProfileField, UserProfile } from 'shared/models';\nimport { COUNTRIES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport Button from 'shared/components/Button';\nimport Skeleton from 'shared/components/Skeleton';\n\nconst Profile: React.FC<{}> = () => {\n  const countries = COUNTRIES;\n  const { t } = useTranslation();\n  const { status, editStatus, userProfile } = useAppSelector(selectProfile);\n  const dispatch = useAppDispatch();\n  const loading = status === 'loading';\n  const editLoading = editStatus === 'loading';\n\n  const defaultValues: Partial<UserProfile> = {\n    streetAddress: '',\n    streetAddressLine: '',\n    city: '',\n    region: '',\n    zipCode: '',\n    countryCode: '',\n    taxId: '',\n    accountNumber: ''\n  };\n\n  const methods = useForm<UserProfile>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { handleSubmit, setValue } = methods;\n\n  const setFormValues = React.useCallback(() => {\n    if (userProfile) {\n      setValue(ProfileField.streetAddress, userProfile.streetAddress);\n      setValue(ProfileField.streetAddressLine, userProfile.streetAddressLine);\n      setValue(ProfileField.city, userProfile.city);\n      setValue(ProfileField.region, userProfile.region);\n      setValue(ProfileField.zipCode, userProfile.zipCode);\n      setValue(ProfileField.countryCode, userProfile.countryCode);\n      setValue(ProfileField.taxId, userProfile.taxId);\n      setValue(ProfileField.accountNumber, userProfile.accountNumber);\n    }\n  }, [userProfile, setValue]);\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getProfile());\n    }\n  }, [dispatch, status]);\n\n  React.useEffect(() => {\n    setFormValues();\n  }, [setFormValues]);\n\n  const handleFormSubmit = (data: UserProfile): void => {\n    dispatch(editProfile(data));\n  };\n\n  const renderContent = (): React.ReactElement => {\n    if (loading) {\n      return <Skeleton type='form' />;\n    }\n\n    return (\n      <FormProvider {...methods}>\n        <Grid container columnSpacing={3} rowSpacing={7} alignItems='flex-end'>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('PROFILE.STREET_ADDRESS')}\n              name={ProfileField.streetAddress}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormInput\n              label={t('PROFILE.STREET_ADDRESS_LINE')}\n              name={ProfileField.streetAddressLine}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.CITY')}\n              name={ProfileField.city}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.REGION')}\n              name={ProfileField.region}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.ZIP_CODE')}\n              name={ProfileField.zipCode}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormSelect\n              label={t('PROFILE.COUNTRY')}\n              name={ProfileField.countryCode}\n              MenuProps={{\n                PaperProps: {\n                  style: {\n                    maxHeight: '200px'\n                  }\n                }\n              }}\n            >\n              {countries.map(({ name, code }) => (\n                <MenuItem key={code} value={code}>{name}</MenuItem>\n              ))}\n            </FormSelect>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.VAT_ID')}\n              name={ProfileField.taxId}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <FormInput\n              label={t('PROFILE.ACCOUNT_NUMBER')}\n              name={ProfileField.accountNumber}\n            />\n          </Grid>\n        </Grid>\n      </FormProvider>\n    );\n  };\n\n  return (\n    <Box component='form' display='flex' flexDirection='column' flexGrow={1} onSubmit={handleSubmit(handleFormSubmit)}>\n      <PageTitle data-testid='page-title' text={t('PROFILE.PAGE_TITLE')} />\n      <Box flexGrow={1}>\n        {renderContent()}\n      </Box>\n      <Grid container display='flex' justifyContent='flex-end' rowGap={2} columnGap={2} sx={{ marginTop: 6, marginBottom: 4 }}>\n        <Grid item sm='auto' xs={12}>\n          <Button aria-label='Save profile' fullWidth type='submit' variant='contained' loading={editLoading}\n            onClick={handleSubmit(handleFormSubmit)}>\n            {t('COMMON.SAVE')}\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n"],"names":["Profile","countries","COUNTRIES","t","useTranslation","status","editStatus","userProfile","useAppSelector","selectProfile","dispatch","useAppDispatch","loading","editLoading","methods","useForm","mode","reValidateMode","defaultValues","streetAddress","streetAddressLine","city","region","zipCode","countryCode","taxId","accountNumber","handleSubmit","setValue","setFormValues","React","ProfileField","getProfile","handleFormSubmit","data","editProfile","_jsxs","Box","component","display","flexDirection","flexGrow","onSubmit","children","_jsx","PageTitle","text","Skeleton","type","FormProvider","Grid","container","columnSpacing","rowSpacing","alignItems","item","xs","FormInput","label","name","sm","FormSelect","MenuProps","PaperProps","style","maxHeight","map","_ref","code","MenuItem","value","justifyContent","rowGap","columnGap","sx","marginTop","marginBottom","Button","fullWidth","variant","onClick","StyledTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","props","theme","palette","primary","main","error","rules","useTheme","control","formState","errors","useFormContext","Controller","render","_ref2","field","fieldState","position","FormHelperText","message","InputLabel","Select","isForm","getSize","firstBar","secondBar","thirdBar","width","MuiSkeleton","height","animation"],"sourceRoot":""}