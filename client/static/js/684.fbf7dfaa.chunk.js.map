{"version":3,"file":"static/js/684.fbf7dfaa.chunk.js","mappings":"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","sources":["modules/Invoices/components/Invoice.tsx","modules/Invoices/pages/InvoiceList.tsx","modules/Invoices/components/InvoiceDocument.styles.ts","modules/Invoices/components/InvoiceDocument.tsx","modules/Invoices/components/InvoiceForm.tsx","modules/Invoices/pages/CreateEditInvoice.styles.ts","modules/Invoices/pages/CreateEditInvoice.tsx","modules/Invoices/Invoices.tsx","shared/components/EmptyState.tsx","shared/components/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport Icon from 'shared/components/Icon';\n\ninterface InvoiceProps {\n  data: InvoiceModel;\n  onClick?: (data: InvoiceModel) => void;\n}\n\nconst Invoice: React.FC<InvoiceProps> = ({ data, onClick }) => {\n  const { palette: { primary: { main, contrastText } } } = useTheme();\n  const { name, amount, currencyIso } = data;\n\n  const onInvoiceClick = (): void => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ paddingX: 2, backgroundColor: main }}>\n      <Grid container display='flex' alignItems='center' justifyContent='space-between' flexGrow={1} columnSpacing={2}\n        sx={{\n          borderRadius: 1,\n          minHeight: 40,\n          cursor: 'pointer'\n        }}\n        onClick={onInvoiceClick}>\n        <Grid item xs={1} display='flex'>\n          <Icon name={IconType.receipt} sx={{ fontSize: { sm: 22, xs: 18 }, color: contrastText }}></Icon>\n        </Grid>\n        <Grid item xs={6} display='flex' justifyContent='flex-start'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{name}</Typography>\n        </Grid>\n        <Grid item xs={3} display='flex'>\n          {/* TODO: remove hardcoded currency */}\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{amount?.gross} PLN</Typography>\n        </Grid>\n        <Grid item xs={2} display='flex' justifyContent='flex-end'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{currencyIso}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Invoice;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { getInvoices, selectInvoice } from 'store/reducers';\nimport { ROUTES } from 'shared/constants';\nimport { IconType, Invoice as InvoiceModel } from 'shared/models';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport Invoice from '../components/Invoice';\n\nconst InvoiceList: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const { invoices, status } = useAppSelector(selectInvoice);\n\n  const openNewInvoicePage = (): void => {\n    navigate(`${ROUTES.invoices.path}/new`);\n  };\n\n  const handleInvoiceItemClick = ({ id, name }: InvoiceModel): void => {\n    navigate(`${ROUTES.invoices.path}/view/${name}`, { state: { id } });\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getInvoices());\n    }\n  }, [dispatch, status]);\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !invoices?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('INVOICES.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {\n          invoices.map((invoice) => (\n            <Grid item key={invoice.id} xs={12}>\n              <Invoice data={invoice} onClick={handleInvoiceItemClick} />\n            </Grid>\n          ))\n        }\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle text={t('INVOICES.PAGE_TITLE')} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Grid item xs={12} display='flex' justifyContent='flex-end'>\n          <IconButton color='primary' onClick={openNewInvoicePage} sx={{ alignSelf: 'flex-end' }}>\n            <Icon name={IconType.plus} sx={{ fontSize: 40 }}></Icon>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default InvoiceList;\n","import { Font, StyleSheet } from '@react-pdf/renderer';\n\nFont.register({\n  family: 'SourceSansPro',\n  fonts: [\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xK3dSBYKcSV-LCoeQqfX1RYOo3aPw.ttf', fontWeight: 400 },\n    { src: 'https://fonts.gstatic.com/s/sourcesanspro/v14/6xKydSBYKcSV-LCoeQqfX1RYOo3i54rAkA.ttf', fontWeight: 700 }\n  ]\n});\n\nexport const styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#E4E4E4',\n    fontFamily: 'SourceSansPro',\n    padding: 20\n  },\n  name: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  heading: {\n    paddingTop: 10,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  label: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginRight: 10\n  },\n  value: {\n    fontSize: 12\n  },\n  account: {\n    fontSize: 12,\n    marginTop: 30\n  },\n  sellerBuyer: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginTop: 40\n  },\n  seller: {\n    flex: 50\n  },\n  buyer: {\n    flex: 50\n  },\n  table: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginTop: 40\n  },\n  headerRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    backgroundColor: '#959ba1'\n  },\n  bodyRow: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderStyle: 'solid',\n    borderRightWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1\n  },\n  tableCol: {},\n  noCol: {\n    width: '5%'\n  },\n  nameCol: {\n    width: '22%'\n  },\n  unitCol: {\n    width: '5%'\n  },\n  quantityCol: {\n    width: '5%'\n  },\n  unitNetPriceCol: {\n    width: '12%'\n  },\n  netValueCol: {\n    width: '12%'\n  },\n  vatRateCol: {\n    width: '6%'\n  },\n  vatAmountCol: {\n    width: '12%'\n  },\n  grossValueCol: {\n    width: '12%'\n  },\n  currencyCol: {\n    width: '9%'\n  },\n  tableCell: {\n    fontSize: 11,\n    margin: 4\n  },\n  total: {\n    marginTop: 20,\n    fontSize: 13,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  vatExemption: {\n    marginTop: 20,\n    fontSize: 11\n  }\n});\n","import * as React from 'react';\nimport { Document, Page, Text, View } from '@react-pdf/renderer';\nimport { useTranslation } from 'core/i18n';\nimport { Invoice } from 'shared/models';\nimport {\n  getCurrentDate,\n  getDayOfCurrentMonth,\n  getFirstDateOfPreviousMonth,\n  getLastDateOfPreviousMonth,\n  getPreviousMonthLongName\n} from 'shared/helpers';\nimport { styles } from './InvoiceDocument.styles';\n\ninterface InvoiceDocumentProps {\n  data: Partial<Invoice>;\n}\n\nexport const chunkSubstring = (str: string, size: number) => {\n  const numChunks = Math.ceil(str.length / size);\n  const chunks = new Array<string>(numChunks);\n\n  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {\n    chunks[i] = str.substring(o, o + size);\n  }\n\n  return chunks;\n};\n\nconst chunkTextComponent = (text: string, size: number): React.ReactElement => {\n  return (\n    <Text style={styles.tableCell} hyphenationCallback={(event) => chunkSubstring(event, size)}>{text}</Text>\n  );\n};\n\nconst InvoiceDocument: React.FC<InvoiceDocumentProps> = ({ data }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.page}>\n        <View>\n          <Text style={styles.name}>{data.name}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.INVOICE_NO')}.</Text>\n          <Text style={styles.value}>{getFirstDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.ISSUE_DATE')}:</Text>\n          <Text style={styles.value}>{getCurrentDate()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.SALE_DATE')}:</Text>\n          <Text style={styles.value}>{getLastDateOfPreviousMonth()}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.DUE_DATE')}:</Text>\n          <Text style={styles.value}>{getDayOfCurrentMonth(14)}</Text>\n        </View>\n        <View style={styles.heading}>\n          <Text style={styles.label}>{t('INVOICES.DOCUMENT.PAYMENT_TYPE')}:</Text>\n          <Text style={styles.value}>{t('INVOICES.DOCUMENT.TRANSFER')}</Text>\n        </View>\n        <View style={styles.sellerBuyer}>\n          <View style={styles.seller}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.SELLER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.sellerName}</Text>\n              <Text style={styles.value}>{data.sellerAddress}</Text>\n              <Text style={styles.value}>{data.sellerLocation}</Text>\n              <Text style={styles.value}>{t('COMMON.VAT_ID')} {data.sellerVatID}</Text>\n              <Text style={styles.account}>{data.sellerAccount}</Text>\n            </View>\n          </View>\n          <View style={styles.buyer}>\n            <Text style={styles.label}>{t('INVOICES.DOCUMENT.BUYER')}:</Text>\n            <View>\n              <Text style={styles.value}>{data.buyerName}</Text>\n              <Text style={styles.value}>{data.buyerAddress}</Text>\n              <Text style={styles.value}>{data.buyerLocation}</Text>\n              <Text style={styles.value}>{data.buyerVatID}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.table}>\n          <View style={styles.headerRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NO')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NAME')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.UNIT'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.QUANTITY'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.UNIT_NET_PRICE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.NET_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              {chunkTextComponent(t('INVOICES.DOCUMENT.TABLE.VAT_RATE'), 3)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.VAT_AMOUNT')}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.GROSS_VALUE')}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>{t('INVOICES.DOCUMENT.TABLE.CURRENCY')}</Text>\n            </View>\n          </View>\n          <View style={styles.bodyRow}>\n            <View style={{ ...styles.tableCol, ...styles.noCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.nameCol }}>\n              {chunkTextComponent(`${t('INVOICES.DOCUMENT.TABLE.PROGRAMMING_SERVICES')} ${getPreviousMonthLongName()}`, 20)}\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitCol }}>\n              <Text style={styles.tableCell}>—</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.quantityCol }}>\n              <Text style={styles.tableCell}>1</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.unitNetPriceCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.netValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.net}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatRateCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? `${data.amount?.vatRate} %` : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.vatAmountCol }}>\n              <Text style={styles.tableCell}>{data.vatIncluded ? data.amount?.vatAmount : '—'}</Text>\n            </View>\n            <View style={{ ...styles.tableCol, ...styles.grossValueCol }}>\n              <Text style={styles.tableCell}>{data.amount?.gross}</Text>\n            </View>\n            <View style={{ ...styles.currencyCol }}>\n              <Text style={styles.tableCell}>PLN</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.total}>\n          <Text>{t('INVOICES.DOCUMENT.TABLE.TOTAL')}: {data.amount?.gross} PLN</Text>\n        </View>\n        {!data.vatIncluded && (\n          <View style={styles.vatExemption}>\n            <Text>{t('INVOICES.DOCUMENT.TABLE.VAT_EXEMPTION')}</Text>\n          </View>\n        )}\n      </Page>\n    </Document>\n  );\n};\n\nexport default InvoiceDocument;\n","import * as React from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Grid from '@mui/material/Grid';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport Paper from '@mui/material/Paper';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { Currency, Invoice, InvoiceField, ManageMode } from 'shared/models';\nimport { invoiceHelper } from 'shared/helpers';\nimport { useAppSelector } from 'store';\nimport { INVOICE_CURRENCIES, POSITIVE_NUMERIC_REGEX } from 'shared/constants';\nimport { selectSettings } from 'store/reducers';\nimport FormInput from 'shared/components/FormInput';\nimport FormSelect from 'shared/components/FormSelect';\nimport CurrencyInfoItem from 'shared/components/CurrencyInfoItem';\nimport Button from 'shared/components/Button';\n\ninterface InvoiceFormProps {\n  data: Partial<Invoice>;\n  loading: boolean;\n  mode: ManageMode;\n  onSubmit: (formData: Invoice) => void;\n  onPreview: (formData: Invoice) => void;\n  onCurrencyChange: (currencyIso: Currency['iso']) => void;\n}\n\nconst InvoiceForm: React.FC<InvoiceFormProps> = ({ data, loading, mode, onPreview, onSubmit, onCurrencyChange }) => {\n  const { t } = useTranslation();\n  const helper = invoiceHelper();\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const regex = POSITIVE_NUMERIC_REGEX;\n  const currencies = INVOICE_CURRENCIES;\n  const defaultCurrencyIso = INVOICE_CURRENCIES.some((currency) => currency.iso === iso) ? iso : 'USD';\n  const [currencyIso, setCurrencyIso] = React.useState<Currency['iso']>(defaultCurrencyIso);\n  const [vatIncluded, setVatIncluded] = React.useState<boolean>(false);\n  const isViewMode = mode === ManageMode.view;\n\n  const defaultValues: Partial<Invoice> = {\n    name: '',\n    salary: '',\n    currencyIso: defaultCurrencyIso,\n    vatIncluded: false,\n    sellerName: '',\n    sellerAddress: '',\n    sellerLocation: '',\n    sellerVatID: '',\n    sellerAccount: '',\n    buyerName: '',\n    buyerAddress: '',\n    buyerLocation: '',\n    buyerVatID: ''\n  };\n\n  const methods = useForm<Invoice>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit } = methods;\n\n  React.useEffect(() => {\n    Object.keys(data).forEach((key) => {\n      setValue(key as keyof Invoice, data[key as keyof Invoice]);\n    });\n\n    setCurrencyIso(data.currencyIso || defaultCurrencyIso);\n    setVatIncluded(!!data.vatIncluded);\n  }, [data, setValue, defaultCurrencyIso]);\n\n  const handleCurrencyChange = (event: SelectChangeEvent<string>): void => {\n    const value = event.target.value as Currency['iso'];\n\n    setValue(InvoiceField.currencyIso, value);\n    setCurrencyIso(value);\n    onCurrencyChange(value);\n  };\n\n  const handleVatIncludedChange = (_: React.ChangeEvent<HTMLInputElement>, checked: boolean): void => {\n    setValue(InvoiceField.vatIncluded, checked);\n    setVatIncluded(checked);\n  };\n\n  const handleFormPreview = (data: Invoice): void => {\n    onPreview(data);\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    onSubmit(data);\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Grid container gap={3}>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 6, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.MAIN_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.name}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.name.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.SALARY')}\n                    type='number'\n                    name={InvoiceField.salary}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.salary.required!.message)\n                      },\n                      pattern: {\n                        value: regex,\n                        message: t(helper.salary.pattern!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormSelect\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.CURRENCY')}\n                    name={InvoiceField.currencyIso}\n                    value={currencyIso}\n                    onChange={handleCurrencyChange}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.currencyIso.required!.message)\n                      }\n                    }}\n                  >\n                    {currencies.map(({ iso, name, nameKey, symbol }) => (\n                      <MenuItem value={iso} key={iso}>\n                        <CurrencyInfoItem currency={{ iso, symbol, name, nameKey }} />\n                      </MenuItem>\n                    ))}\n                  </FormSelect>\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        inputProps={{ readOnly: isViewMode }}\n                        checked={vatIncluded}\n                        onChange={handleVatIncludedChange}\n                      />}\n                    label={\n                      <Typography color={contrastText}>{t('INVOICES.INCLUDE_VAT')}</Typography>\n                    }\n                    labelPlacement='start'\n                    sx={{\n                      '&.MuiFormControlLabel-root': {\n                        margin: 0\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.SELLER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.sellerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.sellerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.sellerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.sellerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ACCOUNT')}\n                    name={InvoiceField.sellerAccount}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.sellerAccount.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item container>\n            <Paper elevation={1} sx={{ paddingX: 3, paddingTop: 2, paddingBottom: 7, width: '100%' }}>\n              <Typography sx={{ marginTop: 2, marginBottom: 4 }} fontSize={17}>{t('INVOICES.BUYER_INFO')}</Typography>\n              <Grid item container gap={7}>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.NAME')}\n                    name={InvoiceField.buyerName}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerName.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.ADDRESS')}\n                    name={InvoiceField.buyerAddress}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerAddress.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.LOCATION')}\n                    name={InvoiceField.buyerLocation}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerLocation.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <FormInput\n                    inputProps={{ readOnly: isViewMode }}\n                    label={t('COMMON.VAT_ID')}\n                    name={InvoiceField.buyerVatID}\n                    rules={{\n                      required: {\n                        value: true,\n                        message: t(helper.buyerVatID.required!.message)\n                      }\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Button aria-label='Preview invoice' fullWidth type='submit' variant='contained' onClick={handleSubmit(handleFormPreview)}>\n              {t('COMMON.PREVIEW')}\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Button aria-label='Save invoice' fullWidth variant='contained' loading={loading} onClick={handleSubmit(handleFormSubmit)}>\n              {t('COMMON.SAVE')}\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n};\n\nexport default InvoiceForm;\n","import styled from '@emotion/styled';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nexport const StyledPDFViewer = styled(PDFViewer)`\n  min-height: calc(100vh - 30px);\n  width: 100%;\n`;\n","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createInvoice,\n  deleteInvoice,\n  editInvoice,\n  getExchangeRates,\n  getInvoice,\n  getProfile,\n  resetCreateEditInvoiceStatus,\n  resetGetInvoiceStatus,\n  selectCurrentInvoice,\n  selectInvoice,\n  selectInvoiceAmount,\n  selectInvoiceError,\n  selectProfile,\n  selectUser,\n  setInvoiceAmount\n} from 'store/reducers';\nimport { Currency, Invoice, InvoiceDTO, ManageMode } from 'shared/models';\nimport { getLastDateOfPreviousMonth, getPageTitle, mapUserProfileToInvoice } from 'shared/helpers';\nimport { ROUTES } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport Snackbar from 'shared/components/Snackbar';\nimport Dialog from 'shared/components/Dialog';\nimport InvoiceDocument from '../components/InvoiceDocument';\nimport InvoiceForm from '../components/InvoiceForm';\nimport { StyledPDFViewer } from './CreateEditInvoice.styles';\n\ninterface NewInvoiceProps {\n  mode: ManageMode;\n}\n\nconst CreateEditInvoice: React.FC<NewInvoiceProps> = ({ mode }) => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { rate, getStatus, createEditStatus, deleteStatus } = useAppSelector(selectInvoice);\n  const amount = useAppSelector(selectInvoiceAmount);\n  const invoice = useAppSelector(selectCurrentInvoice);\n  const error = useAppSelector(selectInvoiceError);\n  const { status: profileStatus, userProfile } = useAppSelector(selectProfile);\n  const user = useAppSelector(selectUser);\n  const dispatch = useAppDispatch();\n  const { state } = useLocation();\n  const invoiceId = state?.id as InvoiceDTO['id'];\n  const loading = createEditStatus === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n  const [invoiceData, setInvoiceData] = React.useState<Partial<InvoiceDTO>>({} as InvoiceDTO);\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const title = getPageTitle<Invoice>(mode, t, getStatus, 'INVOICES', 'NEW_INVOICE', 'EMPTY_TITLE', invoice);\n\n  const handleFormPreview = (data: Invoice): void => {\n    const { salary, vatIncluded } = data;\n\n    dispatch(setInvoiceAmount({ rate, salary, vatIncluded }));\n    setInvoiceData({ ...data, amount });\n  };\n\n  const handleFormSubmit = (data: Invoice): void => {\n    const { salary, vatIncluded } = data;\n\n    dispatch(setInvoiceAmount({ rate, salary, vatIncluded }));\n    setInvoiceData({ ...data, amount });\n    setFormSubmitted(true);\n    // TODO: fix, the amount is not updated at this point\n    isEditMode ? dispatch(editInvoice([invoiceId, { ...data, amount }])) : dispatch(createInvoice({ ...data, amount }));\n  };\n\n  const handleCurrencyChange = (currencyIso: Currency['iso']): void => {\n    dispatch(getExchangeRates([currencyIso, getLastDateOfPreviousMonth()]));\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.invoices.path}/edit/${invoice?.name}`, { state: { id: invoiceId } });\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isEditMode\n      ? navigate(`${ROUTES.invoices.path}/view/${invoice?.name}`, { state: { id: invoiceId } })\n      : navigate(ROUTES.invoices.path);\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleDeleteInvoice = (): void => {\n    dispatch(deleteInvoice(invoiceId));\n    setDeleteClicked(true);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const resetInvoice = React.useCallback(() => {\n    dispatch(resetGetInvoiceStatus());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.invoices.path}`);\n    resetInvoice();\n  }, [navigate, resetInvoice]);\n\n  React.useEffect(() => {\n    if (createEditStatus === 'succeeded' && formSubmitted) {\n      setShowSnackbar(false);\n      dispatch(resetCreateEditInvoiceStatus());\n      goBack();\n    }\n\n    if (createEditStatus === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [dispatch, goBack, createEditStatus, formSubmitted]);\n\n  React.useEffect(() => {\n    setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, amount }));\n  }, [amount]);\n\n  React.useEffect(() => {\n    if (profileStatus === 'idle') {\n      dispatch(getProfile());\n    }\n\n    if (profileStatus === 'succeeded') {\n      const mappedInvoiceData = mapUserProfileToInvoice(user, userProfile);\n\n      setInvoiceData((prevInvoiceData) => ({ ...prevInvoiceData, ...mappedInvoiceData }));\n    }\n  }, [dispatch, profileStatus, user, userProfile]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoiceId && getStatus === 'idle' && (isEditMode || isViewMode) && !deleteClicked) {\n      dispatch(getInvoice(invoiceId));\n    }\n  }, [invoiceId, isEditMode, isViewMode, getStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    if (invoice && getStatus === 'succeeded' && (isEditMode || isViewMode)) {\n      setInvoiceData(invoice);\n    }\n  }, [invoice, isEditMode, isViewMode, getStatus, dispatch]);\n\n  return (\n    <Box flexGrow={1}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!invoice}\n        withDeleteButton={isEditMode && !!invoice}\n        withCancelButton={!isViewMode && !!invoice}\n        text={title}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      <Grid container columnSpacing={3} rowSpacing={5}>\n        <Grid item xs={12} sm={6}>\n          <InvoiceForm data={invoiceData} loading={loading} mode={mode} onPreview={handleFormPreview} onSubmit={handleFormSubmit} onCurrencyChange={handleCurrencyChange} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <StyledPDFViewer>\n            <InvoiceDocument data={invoiceData} />\n          </StyledPDFViewer>\n        </Grid>\n      </Grid>\n      <Snackbar type='error' open={showSnackbar} text={error?.messageKey ? t(error.messageKey) : error?.message || ''} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('INVOICES.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteInvoice}\n      >\n        <Typography variant='subtitle1'>\n          {t('INVOICES.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreateEditInvoice;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport InvoiceList from './pages/InvoiceList';\nimport CreateEditInvoice from './pages/CreateEditInvoice';\n\nconst Invoices: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<InvoiceList />} />\n      <Route path='/new' element={<CreateEditInvoice mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditInvoice mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditInvoice mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.invoices.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Invoices;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n"],"names":["_ref","data","onClick","palette","primary","main","contrastText","useTheme","name","amount","currencyIso","_jsx","Paper","elevation","sx","paddingX","backgroundColor","children","_jsxs","Grid","container","display","alignItems","justifyContent","flexGrow","columnSpacing","borderRadius","minHeight","cursor","onInvoiceClick","item","xs","Icon","IconType","fontSize","sm","color","Typography","noWrap","gross","InvoiceList","t","useTranslation","navigate","useNavigate","dispatch","useAppDispatch","invoices","status","useAppSelector","selectInvoice","handleInvoiceItemClick","id","concat","ROUTES","state","React","getInvoices","Box","PageTitle","text","rowGap","marginTop","Skeleton","type","length","_Fragment","map","invoice","Invoice","EmptyState","IconButton","openNewInvoicePage","alignSelf","Font","family","fonts","src","fontWeight","styles","StyleSheet","page","fontFamily","padding","textAlign","heading","paddingTop","flexDirection","label","marginRight","value","account","sellerBuyer","seller","flex","buyer","table","headerRow","bodyRow","borderStyle","borderRightWidth","borderBottomWidth","borderLeftWidth","tableCol","noCol","width","nameCol","unitCol","quantityCol","unitNetPriceCol","netValueCol","vatRateCol","vatAmountCol","grossValueCol","currencyCol","tableCell","margin","total","vatExemption","chunkTextComponent","size","Text","style","hyphenationCallback","event","chunkSubstring","str","numChunks","Math","ceil","chunks","Array","i","o","substring","_data$amount","_data$amount2","_data$amount3","_data$amount4","_data$amount5","_data$amount6","Document","Page","View","getFirstDateOfPreviousMonth","getCurrentDate","getLastDateOfPreviousMonth","getDayOfCurrentMonth","sellerName","sellerAddress","sellerLocation","sellerVatID","sellerAccount","buyerName","buyerAddress","buyerLocation","buyerVatID","getPreviousMonthLongName","net","vatIncluded","vatRate","vatAmount","loading","mode","onPreview","onSubmit","onCurrencyChange","helper","invoiceHelper","info","defaultCurrency","iso","selectSettings","regex","POSITIVE_NUMERIC_REGEX","currencies","INVOICE_CURRENCIES","defaultCurrencyIso","currency","setCurrencyIso","setVatIncluded","isViewMode","ManageMode","defaultValues","salary","methods","useForm","reValidateMode","setValue","handleSubmit","Object","keys","forEach","key","handleFormSubmit","FormProvider","gap","paddingBottom","marginBottom","FormInput","inputProps","readOnly","InvoiceField","rules","required","message","pattern","FormSelect","onChange","target","_ref2","nameKey","symbol","MenuItem","CurrencyInfoItem","FormControlLabel","control","Switch","checked","handleVatIncludedChange","_","labelPlacement","Button","fullWidth","variant","StyledPDFViewer","styled","PDFViewer","_templateObject","_taggedTemplateLiteral","rate","getStatus","createEditStatus","deleteStatus","selectInvoiceAmount","selectCurrentInvoice","error","selectInvoiceError","profileStatus","userProfile","selectProfile","user","selectUser","useLocation","invoiceId","deleteLoading","isEditMode","invoiceData","setInvoiceData","formSubmitted","setFormSubmitted","deleteClicked","setDeleteClicked","dialogOpened","setDialogOpened","showSnackbar","setShowSnackbar","title","getPageTitle","resetInvoice","resetGetInvoiceStatus","goBack","resetCreateEditInvoiceStatus","prevInvoiceData","getProfile","mappedInvoiceData","mapUserProfileToInvoice","getInvoice","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","handleEditButtonClick","onDeleteButtonClick","handleOpenDialog","onCancelButtonClick","handleCancelButtonClick","rowSpacing","InvoiceForm","setInvoiceAmount","editInvoice","createInvoice","getExchangeRates","InvoiceDocument","Snackbar","open","messageKey","onClose","handleSnackbarClose","Dialog","maxWidth","actionButtonText","handleCloseDialog","onAction","handleDeleteInvoice","deleteInvoice","Invoices","Routes","Route","path","element","CreateEditInvoice","Navigate","to","replace","props","textValue","MuiSnackbar","autoHideDuration","onSnackbarClose","MuiAlert","severity"],"sourceRoot":""}