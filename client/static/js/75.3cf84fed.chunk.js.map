{"version":3,"file":"static/js/75.3cf84fed.chunk.js","mappings":"8UAcA,MAiCA,EAjCwCA,IAAwB,IAAvB,KAAEC,EAAI,QAAEC,GAASF,EACxD,MAAQG,SAAWC,SAAS,KAAEC,EAAI,aAAEC,MAAqBC,EAAAA,EAAAA,MACnD,KAAEC,EAAI,KAAEC,EAAI,QAAEC,GAAYT,EAQhC,OACEU,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,UAAW,EAAGC,GAAI,CAAEC,SAAU,EAAGC,gBAAiBX,GAAOY,UAC9DC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAQ,OAAOC,WAAW,SAASC,eAAe,gBAAgBC,SAAU,EAAGC,cAAe,EAC5GX,GAAI,CACFY,aAAc,EACdC,UAAW,GACXC,OAAQ,WAEV1B,QAdiB2B,KACjB3B,GACFA,EAAQD,EACV,EAW4BgB,SAAA,EACxBN,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,EAAGV,QAAQ,OAAMJ,SAC7BR,IAAQE,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACxB,KAAMC,EAAMK,GAAI,CAAEmB,SAAU,CAAEC,GAAI,GAAIH,GAAI,IAAMI,MAAO7B,QAExEK,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,EAAGV,QAAQ,OAAMJ,UAC9BN,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAM,EAACF,MAAO7B,EAAcQ,GAAI,CAAEmB,SAAU,CAAEC,GAAI,GAAIH,GAAI,KAAOd,SAAET,OAEjFG,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,EAAGV,QAAQ,OAAOE,eAAe,WAAUN,UACxDN,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAAC5B,QAASA,EAAS6B,cAAejC,EAAc2B,SAAU,CAAEC,GAAI,GAAIH,GAAI,YAG9E,E,wBC3BZ,MA2CA,EA3CwD/B,IAA4B,IAA3B,QAAEU,KAAY8B,GAAOxC,EAC5E,MAAQG,SAAWsC,MAAM,aAAEnC,MAAqBC,EAAAA,EAAAA,KAC1CmC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MAUd,OACE3B,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CACFhC,GAAI,IAAK0B,EAAM1B,GAAIO,QAAS,OAAQ0B,cAAe,SAAUC,cAAe,EAAGC,aAAeC,GAAK,aAAAC,OAAkBD,EAAM/C,QAAQiD,UAAU/C,OAASY,SAAA,EACtJC,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAChC,GAAI,CAAEO,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAU8B,aAAc,GAAIpC,SAAA,EAC5FC,EAAAA,EAAAA,MAACkB,EAAAA,EAAU,CAACC,QAAM,EAACF,MAAO7B,EAAc2B,SAAU,GAAInB,GAAI,CAAEwC,YAAa,GAAIrC,SAAA,CAAE2B,EAAE,kBAAkB,QACnGjC,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAAC5B,QAASA,EAASuB,SAAU,SAEvCf,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAChC,GAAI,CAAEO,QAAS,OAAQ0B,cAAe,CAAEb,GAAI,MAAOH,GAAI,UAAYT,WAAY,SAAUC,eAAgB,gBAAiBgC,IAAK,GAAItC,SAAA,EACtIN,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CACL,aAAW,eACXrB,MAAM,YACNsB,QAAQ,YACRC,WAAW/C,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACxB,KAAMmD,EAAAA,GAASC,mBAChC9C,GAAI,CAAE+C,MAAO,CAAE3B,GAAI,OAAQH,GAAI,QAAUE,SAAU,IACnD/B,QAtBwB4D,KAC9BpB,EAAS,GAADS,OAAIY,EAAAA,GAAOC,UAAUC,KAAI,QAAO,EAqBDhD,SAChC2B,EAAE,6BAELjC,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CACL,aAAW,mBACXrB,MAAM,YACNuB,WAAW/C,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACxB,KAAMmD,EAAAA,GAASO,UAChCpD,GAAI,CAAE+C,MAAO,CAAE3B,GAAI,OAAQH,GAAI,QAAUE,SAAU,IACnD/B,QA1BqBiE,KAC3BzB,EAAS,GAADS,OAAIY,EAAAA,GAAOC,UAAUC,MAAO,EAyBAhD,SAC7B2B,EAAE,qCAGH,ECwCV,EA9EkCwB,KAChC,MAAMC,GAAWC,EAAAA,EAAAA,OACX,SAAEC,EAAQ,OAAEC,IAAWC,EAAAA,EAAAA,IAAeC,EAAAA,KACtC,QAAEhE,EAAO,cAAEiE,IAAkBF,EAAAA,EAAAA,IAAeG,EAAAA,IAC5ClC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MAMRgC,EAAyB7E,IAAuC,IAAtC,GAAE8E,EAAE,KAAEtE,GAAoBR,EACxD0C,EAAS,GAADS,OAAIY,EAAAA,GAAOQ,SAASN,KAAI,UAAAd,OAAS3C,GAAQ,CAAEuE,MAAO,CAAED,OAAO,EAUrEE,EAAAA,WAAgB,KACC,SAAXR,GACFH,GAASY,EAAAA,EAAAA,MACX,GACC,CAACZ,EAAUG,IAEdQ,EAAAA,WAAgB,KACQ,SAAlBL,GACFN,GAASa,EAAAA,EAAAA,MACX,GACC,CAACb,EAAUM,IA8Bd,OACEzD,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAACtB,SAAU,EAAEP,SAAA,EACfN,EAAAA,EAAAA,KAACwE,EAAe,CAACzE,QAASA,EAASI,GAAI,CAAEsE,UAAW,EAAG/B,aAAc,MACrE1C,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CAACC,KAAM1C,EAAE,uBAAwB9B,GAAI,CAAEuC,aAAc,MAC/DnC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACmE,OAAQ,EAAGzE,GAAI,CAAEsE,UAAW,GAAInE,SAAA,CA/BnC,YAAXuD,GAEA7D,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAAC6E,EAAAA,EAAQ,CAACC,KAAK,WAKL,WAAXjB,GAAkC,cAAXA,GAAoC,OAARD,QAAQ,IAARA,GAAAA,EAAUmB,QAShE/E,EAAAA,EAAAA,KAAAgF,EAAAA,SAAA,CAAA1E,SACGsD,EAASqB,KAAKC,IACblF,SAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAAkBC,GAAI,GAAGd,UACjCN,EAAAA,EAAAA,KAACmF,EAAO,CAAC7F,MAxCKA,EAwCgB4F,EAvC/B,IACF5F,EACHO,KAAMP,EAAK8F,QAAUnD,EAAE3C,EAAK8F,SAAW9F,EAAKO,OAqCEN,QAAS2E,KADnCgB,EAAQf,IAvCR7E,KA0CjB,OAZDU,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CAACV,KAAM1C,EAAE,4BAsBtBjC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAIV,QAAQ,OAAOE,eAAe,WAAUN,UACzDN,EAAAA,EAAAA,KAACsF,EAAAA,EAAU,CAAC9D,MAAM,UAAUjC,QA9DTgG,KACzBxD,EAAS,GAADS,OAAIY,EAAAA,GAAOQ,SAASN,KAAI,QAAO,EA6DwBnD,GAAI,CAAEqF,UAAW,YAAalF,UACrFN,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACxB,KAAMmD,EAAAA,GAASyC,KAAMtF,GAAI,CAAEmB,SAAU,eAI7C,E,8FCnDV,MAuSA,EAvS4DjC,IAAe,IAAd,KAAEqG,GAAMrG,EACnE,MAAMsG,EAAQC,EAAAA,GACRC,EAAaC,EAAAA,GACbC,EAAQC,EAAAA,GACRjE,GAAWC,EAAAA,EAAAA,OACX,MAAEoC,IAAU6B,EAAAA,EAAAA,MACZvC,GAAWC,EAAAA,EAAAA,OACX,UAAEuC,EAAS,iBAAEC,EAAgB,aAAEC,IAAiBtC,EAAAA,EAAAA,IAAeC,EAAAA,IAC/DsC,GAAQvC,EAAAA,EAAAA,IAAewC,EAAAA,IACvBpB,GAAUpB,EAAAA,EAAAA,IAAeyC,EAAAA,KACvBC,iBAAiB,IAAEC,KAAU3C,EAAAA,EAAAA,IAAe4C,EAAAA,IAC9CC,GAASC,EAAAA,EAAAA,OACT,EAAE3E,IAAMC,EAAAA,EAAAA,OACP2E,EAAeC,GAAoBzC,EAAAA,UAAwB,IAC3D0C,EAAeC,GAAoB3C,EAAAA,UAAwB,IAC3D4C,EAAcC,GAAmB7C,EAAAA,UAAwB,IACzD8C,EAAcC,GAAmB/C,EAAAA,UAAwB,GAC1DgD,EAA+B,YAArBlB,EACVmB,EAAiC,YAAjBlB,EAChBmB,EAAiB,OAALnD,QAAK,IAALA,OAAK,EAALA,EAAOD,GACnBqD,EAAqB,OAAPtC,QAAO,IAAPA,GAAAA,EAASE,QAAUnD,EAAEiD,EAAQE,UAAmB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASrF,OAAQ,GACxE4H,EAAe/B,IAASgC,EAAAA,GAAWC,OACnCC,EAAalC,IAASgC,EAAAA,GAAWG,KACjCC,GAAapC,IAASgC,EAAAA,GAAWK,KACjCC,IAAQC,EAAAA,EAAAA,IAAsBvC,EAAMzD,EAAGiE,EAAW,WAAY,cAAe,cAAehB,GAE5FgD,GAAkC,CACtCnI,QAAS,EACTF,KAAM,GACNsI,YAAa1B,GAGT2B,IAAUC,EAAAA,EAAAA,IAAiB,CAC/B3C,KAAM,SACN4C,eAAgB,SAChBJ,oBAGI,SAAEK,GAAQ,aAAEC,GAAY,MAAEC,GAAK,MAAEC,IAAUN,GAC3CO,GAAgBF,GAAMG,EAAAA,GAAaT,aAEnCU,GAAyBC,IAAmC,IAAlC,GAAE3E,GAAoB2E,EAChDhB,IAIJS,GAASK,EAAAA,GAAa9I,KAAMqE,EAAgB,CAAE4E,gBAAgB,GAAO,EAGjEC,GAAwBC,IAC5B,MAAMxC,EAAMwC,EAAMC,OAAOC,MAEzBZ,GAASK,EAAAA,GAAaT,YAAa1B,EAAK,CAAEsC,gBAAgB,GAAO,EAG7DK,GAAoB9J,IACxB,MAAM+J,EAAyB,IAC1B/J,EACHS,QAASuJ,OAAOhK,EAAKS,UAGV2D,EAAbkE,GAAsB2B,EAAAA,EAAAA,IAAY,CAAChC,EAAW8B,KAAyBG,EAAAA,EAAAA,IAAcH,IACrFvC,GAAiB,EAAK,EAqClB2C,GAAgBpF,EAAAA,aAAkB,KAClCa,IACFqD,GAASK,EAAAA,GAAa/I,KAAMqF,EAAQE,QAAUnD,EAAEiD,EAAQE,SAAWF,EAAQrF,MAC3E0I,GAASK,EAAAA,GAAa9I,KAAMoF,EAAQpF,MACpCyI,GAASK,EAAAA,GAAa7I,SAAS2J,EAAAA,EAAAA,IAA+BxE,EAAQnF,UACtEwI,GAASK,EAAAA,GAAaT,YAAajD,EAAQiD,aAC7C,GACC,CAACjD,EAASqD,GAAUtG,IAEjB0H,GAAetF,EAAAA,aAAkB,KACrCX,GAASkG,EAAAA,EAAAA,MAAwB,GAChC,CAAClG,IAEEmG,GAASxF,EAAAA,aAAkB,KAC/BtC,EAAS,GAADS,OAAIY,EAAAA,GAAOQ,SAASN,OAC5BqG,IAAc,GACb,CAAC5H,EAAU4H,KAEdtF,EAAAA,WAAgB,KACW,cAArB8B,GAAoCU,IACtCgD,KACA3C,GAAgB,IAGO,WAArBf,GAAiCU,GACnCK,GAAgB,EAClB,GACC,CAAC2C,GAAQ1D,EAAkBU,IAE9BxC,EAAAA,WAAgB,KACO,cAAjB+B,GAAgCW,GAClC8C,KAGmB,WAAjBzD,GAA6BW,IAC/BG,GAAgB,GAChBE,GAAgB,GAClB,GACC,CAACyC,GAAQzD,EAAcW,IAE1B1C,EAAAA,WAAgB,KACTkD,GACH7D,GAASoG,EAAAA,EAAAA,MACX,GACC,CAACvC,EAAW7D,IAEfW,EAAAA,WAAgB,KACVkD,GAA2B,SAAdrB,IAAyB0B,GAAcE,MAAgBf,GACtErD,GAASqG,EAAAA,EAAAA,IAAWxC,GACtB,GACC,CAACA,EAAWK,EAAYE,GAAY5B,EAAWxC,EAAUqD,IAE5D1C,EAAAA,WAAgB,KACdoF,IAAe,GACd,CAACA,KAEJpF,EAAAA,WAAgB,IACP,KACLsF,IAAc,GAEf,CAACA,KA2FJ,OACEpJ,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAAC6H,UAAU,OAAOtJ,QAAQ,OAAO0B,cAAc,SAASvB,SAAU,EAAGoJ,SAAUzB,GAAaY,IAAkB9I,SAAA,EAChHN,EAAAA,EAAAA,KAAC0E,EAAAA,EAAS,CACRwF,gBAAc,EACdC,eAAgBrC,MAAgB5C,EAChCkF,iBAAkBxC,KAAgB1C,EAClCmF,kBAAmBvC,MAAgB5C,EACnCP,KAAMqD,GACNsC,kBAAmBT,GACnBU,kBAxKwBC,KACxB5C,GAIJ7F,EAAS,GAADS,OAAIY,EAAAA,GAAOQ,SAASN,KAAI,UAAAd,OAASgF,GAAe,CAAEpD,MAAO,CAAED,GAAIoD,IAAc,EAoKjFkD,oBAjLmBC,KACvBtD,GAAgB,EAAK,EAiLjBuD,oBApM0BC,KAC9BnD,EAAeiB,GAAMR,IAAiBuB,KAEtC7B,EACI7F,EAAS,GAADS,OAAIY,EAAAA,GAAOQ,SAASN,KAAI,UAAAd,OAASgF,GAAe,CAAEpD,MAAO,CAAED,GAAIoD,KACvExF,EAASqB,EAAAA,GAAOQ,SAASN,KAAK,KAiMhCtD,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACtB,SAAU,EAAEP,SArGD,YAAd4F,GACKlG,EAAAA,EAAAA,KAAC6E,EAAAA,EAAQ,CAACC,KAAK,SAGnB2C,GAAkBvC,GAAYqC,GAA4B,WAAdrB,GAK/ClG,EAAAA,EAAAA,KAAC6K,EAAAA,GAAY,IAAKzC,GAAO9H,UACvBC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACmE,OAAQ,EAAEtE,SAAA,EACxBN,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,CACRC,WAAY,CAAEC,SAAUlD,IACxBmD,MAAOhJ,EAAE,eACTpC,KAAM+I,EAAAA,GAAa/I,KACnBqL,MAAO,CACLC,SAAU,CACRhC,OAAO,EACPiC,QAASnJ,EAAE0E,EAAO9G,KAAKsL,SAAUC,gBAKzCpL,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAAC8K,EAAAA,EAAS,CACRC,WAAY,CAAEC,SAAUlD,IACxBmD,MAAOhJ,EAAE,kBACT6C,KAAK,SACLjF,KAAM+I,EAAAA,GAAa7I,QACnBmL,MAAO,CACLC,SAAU,CACRhC,OAAO,EACPiC,QAASnJ,EAAE0E,EAAO5G,QAAQoL,SAAUC,UAEtCC,QAAS,CACPlC,MAAOxD,EACPyF,QAASnJ,EAAE0E,EAAO5G,QAAQsL,QAASD,gBAK3CpL,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAACsL,EAAAA,EAAU,CACTC,WAAY,CAAEP,SAAUlD,IACxBmD,MAAOhJ,EAAE,mBACTpC,KAAM+I,EAAAA,GAAaT,YACnBgB,MAAOR,GACP6C,SAAUxC,GACVkC,MAAO,CACLC,SAAU,CACRhC,OAAO,EACPiC,QAASnJ,EAAE0E,EAAOwB,YAAYgD,SAAUC,WAE1C9K,SAEDuF,EAAWZ,KAAIwG,IAAA,IAAC,IAAEhF,EAAG,KAAE5G,EAAI,QAAEuF,EAAO,OAAEsG,GAAQD,EAAA,OAC7ClL,EAAAA,EAAAA,MAACoL,EAAAA,EAAQ,CAACxC,MAAO1C,EAAInG,SAAA,CAAYoL,EAAO,IAAEtG,EAAUnD,EAAEmD,GAAWvF,IAAtC4G,EAAsD,SAIvFzG,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAAC4L,EAAAA,EAAQ,CACP/L,KAAM+I,EAAAA,GAAa9I,KACnBmL,MAAOhJ,EAAE,eACTiJ,MAAO,CACLC,SAAU,CACRhC,OAAO,EACPiC,QAASnJ,EAAE0E,EAAO7G,KAAKqL,SAAUC,WAGrCS,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChB9L,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,WAAS,KAAKsL,EAAOC,UAAW,EAAGpH,OAAQ,EAAGzE,GAAI,CAAEsE,UAAW,GAAInE,SAErEyF,EAAMd,KAAIgH,IAAA,IAAC,KAAEpM,GAAMoM,EAAA,OACjBjM,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAAAb,UACRN,EAAAA,EAAAA,KAACkM,EAAAA,EAAQ,CAACC,SAAUJ,EAAM5C,MAAOhF,GAAItE,EAAMC,KAAMD,EAAMuM,KAAM,GAAIC,SAAUvE,GAAYvI,QAASsJ,MADlFhJ,EAET,KAGN,YA3EVG,EAAAA,EAAAA,KAACqF,EAAAA,EAAU,CAACV,KAAM1C,EAAE,2CAmGzB6F,KACA9H,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAQ,OAAOE,eAAe,WAAWgE,OAAQ,EAAGoH,UAAW,EAAG7L,GAAI,CAAEsE,UAAW,EAAG/B,aAAc,GAAIpC,UACtHN,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACI,GAAG,OAAOH,GAAI,GAAGd,UAC1BN,EAAAA,EAAAA,KAAC6C,EAAAA,EAAM,CAAC,aAAW,eAAeyJ,WAAS,EAACxH,KAAK,SAAShC,QAAQ,YAAYuE,QAASA,EACrF9H,QAASiJ,GAAaY,IAAkB9I,SACvC2B,EAAE,sBAKXjC,EAAAA,EAAAA,KAACuM,EAAAA,EAAQ,CAACzH,KAAK,QAAQ0H,KAAMvF,EAActC,KAAW,OAAL0B,QAAK,IAALA,GAAAA,EAAOoG,WAAaxK,EAAEoE,EAAMoG,aAAmB,OAALpG,QAAK,IAALA,OAAK,EAALA,EAAO+E,UAAW,GAAIsB,QAtMzFC,KAC1BzF,GAAgB,GAChBF,GAAiB,EAAM,KAqMrBhH,EAAAA,EAAAA,KAAC4M,EAAAA,EAAM,CACLN,WAAS,EACTO,SAAS,KACT7E,MAAO/F,EAAE,gCACT6K,iBAAkB7K,EAAE,cACpBuK,KAAMrF,EACNE,QAASC,EACToF,QArMoBK,KACxB3F,GAAgB,EAAM,EAqMlB4F,SApNsBC,KAC1BvJ,GAASwJ,EAAAA,EAAAA,IAAc3F,IACvBP,GAAiB,EAAK,EAkNY1G,UAE9BN,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACqB,QAAQ,YAAWxC,SAC5B2B,EAAE,wCAGH,ECxTV,EAZ2BkL,KAEvB5M,EAAAA,EAAAA,MAAC6M,EAAAA,GAAM,CAAA9M,SAAA,EACLN,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAAC/J,KAAK,IAAIgK,SAAStN,EAAAA,EAAAA,KAACyD,EAAW,OACrCzD,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAAC/J,KAAK,OAAOgK,SAAStN,EAAAA,EAAAA,KAACuN,EAAiB,CAAC7H,KAAMgC,EAAAA,GAAWC,YAChE3H,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAAC/J,KAAK,YAAYgK,SAAStN,EAAAA,EAAAA,KAACuN,EAAiB,CAAC7H,KAAMgC,EAAAA,GAAWK,UACrE/H,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAAC/J,KAAK,YAAYgK,SAAStN,EAAAA,EAAAA,KAACuN,EAAiB,CAAC7H,KAAMgC,EAAAA,GAAWG,UACrE7H,EAAAA,EAAAA,KAACqN,EAAAA,GAAK,CAAC/J,KAAK,IAAIgK,SAAStN,EAAAA,EAAAA,KAACwN,EAAAA,GAAQ,CAACC,GAAIrK,EAAAA,GAAOQ,SAASN,KAAMoK,SAAO,Q,8FCJ1E,MAmBA,EAnB8CrO,IAAyB,IAAxB,KAAEsF,KAAS9C,GAAOxC,EAC/D,MAAQG,SAAWsC,MAAM,aAAEnC,MAAqBC,EAAAA,EAAAA,MAC1C,EAAEqC,IAAMC,EAAAA,EAAAA,MACRyL,EAAYhJ,GAAQ1C,EAAE,kBAE5B,OACEjC,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CACFzB,QAAQ,OACRE,eAAe,YACXiB,EACJ1B,GAAI,CACF+C,MAAO,UACJrB,EAAM1B,IACTG,UACFN,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,CAACC,QAAM,EAACF,MAAO7B,EAAc2B,SAAU,CAAEC,GAAI,GAAIH,GAAI,IAAKd,SAAEqN,KACnE,C,qFCZV,MAsBA,EAtB0CtO,IAA0C,IAAzC,KAAEQ,EAAI,MAAEoL,EAAK,MAAEC,EAAQ,CAAC,EAAC,OAAEW,GAAQxM,EAC5E,MAAM,QACJuO,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEJ,OACE/N,EAAAA,EAAAA,KAACgO,EAAAA,GAAU,CACTJ,QAASA,EACT/N,KAAMA,EACNqL,MAAOA,EACPW,OAAQ/C,IAAA,IAAAmF,EAAA,IAAC,MAAElC,EAAK,WAAEmC,GAAYpF,EAAA,OAC5BvI,EAAAA,EAAAA,MAAAyE,EAAAA,SAAA,CAAA1E,SAAA,EACEN,EAAAA,EAAAA,KAACmO,EAAAA,EAAU,CAAChO,GAAI,CAAEuC,aAAc,GAAIpC,SAAE2K,IACrCY,EAAO,CAAEE,QAAOmC,eAChBJ,EAAOjO,KAASG,EAAAA,EAAAA,KAACoO,EAAAA,EAAc,CAAC/H,OAAK,EAAA/F,SAAkB,QAAlB2N,EAAEC,EAAW7H,aAAK,IAAA4H,OAAA,EAAhBA,EAAkB7C,YACzD,GAEL,C,oHCvBC,MAAMiD,GAAkBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAiBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0QAE3B5M,GAAUA,EAAMU,MAAM/C,QAAQC,QAAQC,OAC7CmC,GAAUA,EAAMU,MAAM/C,QAAQC,QAAQC,OAK3BmC,GAAUA,EAAMU,MAAM/C,QAAQ6G,MAAM3G,OAGxCmC,GAAUA,EAAMU,MAAM/C,QAAQC,QAAQC,OAC7CmC,GAAUA,EAAMU,MAAM/C,QAAQ6G,MAAM3G,O,aCNlD,MA6BA,EA7B4CL,IAAqC,IAApC,KAAEQ,EAAI,MAAEqL,EAAQ,CAAC,KAAMrJ,GAAOxC,EACzE,MAAMkD,GAAQ3C,EAAAA,EAAAA,MAER,QACJgO,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEJ,OACE/N,EAAAA,EAAAA,KAACgO,EAAAA,GAAU,CACTJ,QAASA,EACT/N,KAAMA,EACNqL,MAAOA,EACPW,OAAQ/C,IAAA,IAAC,MAAEiD,EAAOmC,YAAY,MAAE7H,IAASyC,EAAA,OACvCvI,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAACuM,SAAS,WAAUpO,SAAA,EACtBN,EAAAA,EAAAA,KAACqO,EAAe,CACd/B,WAAS,KACLP,KACAlK,EACJU,MAAOA,EACP8D,QAASyH,EAAOjO,KAEjBiO,EAAOjO,KAASG,EAAAA,EAAAA,KAACoO,EAAAA,EAAc,CAACjO,GAAI,CAAEuO,SAAU,YAAcrI,OAAK,EAAA/F,SAAO,OAAL+F,QAAK,IAALA,OAAK,EAALA,EAAO+E,YACzE,GAER,C,yGCpBN,MA6BA,EA7B8C/L,IAAsD,IAArD,KAAEQ,EAAI,MAAEoL,EAAK,MAAEC,EAAQ,CAAC,EAAC,SAAE5K,KAAauB,GAAOxC,EAC5F,MAAM,QACJuO,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEJ,OACE/N,EAAAA,EAAAA,KAACgO,EAAAA,GAAU,CACTJ,QAASA,EACT/N,KAAMA,EACNqL,MAAOA,EACPW,OAAQ/C,IAAA,IAAC,MAAEiD,EAAOmC,YAAY,MAAE7H,IAASyC,EAAA,OACvCvI,EAAAA,EAAAA,MAAC4B,EAAAA,EAAG,CAACuM,SAAS,WAAUpO,SAAA,EACtBN,EAAAA,EAAAA,KAACmO,EAAAA,EAAU,CAAA7N,SAAE2K,KACbjL,EAAAA,EAAAA,KAAC2O,EAAAA,EAAM,CACLrC,WAAS,EACTxJ,QAAQ,WACRuD,QAASyH,EAAOjO,MACZkM,KACAlK,EAAKvB,SACRA,IAEFwN,EAAOjO,KAASG,EAAAA,EAAAA,KAACoO,EAAAA,EAAc,CAACjO,GAAI,CAAEuO,SAAU,YAAcrI,OAAK,EAAA/F,SAAO,OAAL+F,QAAK,IAALA,OAAK,EAALA,EAAO+E,YACzE,GAER,C,qFC5BN,MAoDA,EApD0C/L,IAAqE,IAApE,GAAE8E,EAAE,SAAEgI,EAAQ,KAAErM,EAAI,KAAEsM,EAAO,GAAE,SAAEwC,EAAQ,SAAEvC,EAAQ,QAAE9M,GAASF,EACvG,MAAQG,SAAWC,SAAS,KAAEC,EAAI,aAAEC,GAAc,OAAEkP,KAAajP,EAAAA,EAAAA,KA4BjE,OACEI,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CAACzB,QAAQ,OAAO0B,cAAc,SAASzB,WAAW,SAASuC,MAAOkJ,EAAO,GAAG9L,UAC9EN,EAAAA,EAAAA,KAACmC,EAAAA,EAAG,CACF5C,QA7Be4E,IAAe,KAC9BkI,GAIA9M,GACFA,EAAQ,CAAE4E,MACZ,EAsBa2K,CAAY3K,GACrBhE,GAAI,CACFE,gBAZFuO,EACKC,EAAOD,SAGTzC,IAAahI,EAAKzE,EAAO,cAS1BqP,OAjBCH,EAAW,OAAM,aAAApM,OAAgB9C,GAkBlC8B,MAtBC2K,IAAahI,EAAKxE,EAAeD,EAuBlCsP,OAAQ5C,EACRlJ,MAAOkJ,EACPrL,aAAc,MACdL,QAAS,OACT0B,cAAe,SACfzB,WAAY,SACZC,eAAgB,SAChBK,OAAS2N,GAAYvC,EAAY,UAAY,WAC7C/L,UACFN,EAAAA,EAAAA,KAACqB,EAAAA,EAAI,CAACxB,KAAMC,OAEV,C,2ECxDV,MAoDA,EApD0CT,IAAyB,IAAxB,KAAEyF,KAASjD,GAAOxC,EAC3D,MACM4P,EAAkB,SAATnK,EAEToK,EAAUA,KACd,OAAQpK,GACR,IAAK,OAYL,QACE,MAAO,CAAEqK,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAVlD,IAAK,OACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAElD,IAAK,UACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,KAElD,IAAK,WACH,MAAO,CAAEF,SAAU,GAAIC,UAAW,GAAIC,SAAU,IAIlD,EAGF,MAtB4B,aAATvK,GAwBfvE,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACuL,UAAW,EAAGpH,OAAQ,EAAEtE,SAAA,EACtCN,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAAC+B,MAAO,IAAKxC,QAAQ,OAAOE,eAAe,SAAQN,UAC3DN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,WAAWkM,OAAQE,IAAUC,SAAUjM,MAAOgM,IAAUC,cAE1FnP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAAC+B,MAAO,IAAKxC,QAAQ,OAAOE,eAAe,SAAQN,UAC3DN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,WAAWkM,OAAQE,IAAUE,UAAWlM,MAAOgM,IAAUE,eAE3FpP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAAC+B,MAAO,IAAKxC,QAAQ,OAAOE,eAAe,SAAQN,UAC3DN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,WAAWkM,OAAQE,IAAUG,SAAUnM,MAAOgM,IAAUC,iBAK5F5O,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,WAAS,EAACG,eAAe,SAASgE,OAAQqK,EAAS,EAAI,EAAE3O,SAAA,EAC7DN,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,UAAUkM,OAAQE,IAAUC,cAE9DnP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,UAAUyM,UAAU,OAAOP,OAAQE,IAAUE,eAE/EpP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACW,MAAI,EAACC,GAAI,GAAGd,UAChBN,EAAAA,EAAAA,KAACsP,EAAAA,EAAW,IAAKzN,EAAOiB,QAAQ,UAAUkM,OAAQE,IAAUG,eAGjE,C,2EC9CL,MAoBA,EApB0ChQ,IAAsD,IAArD,KAAEmN,GAAO,EAAK,KAAE7H,EAAI,KAAEG,EAAI,QAAE4H,KAAY7K,GAAOxC,EAMxF,OACEW,EAAAA,EAAAA,KAACwP,EAAAA,EAAW,CACVhD,KAAMA,EACNiD,iBAAkB,IAClB/C,QARoBgD,KACtBhD,GAAS,KAQH7K,EAAKvB,UAETN,EAAAA,EAAAA,KAAC2P,EAAAA,EAAQ,CAACC,SAAU9K,EAAKxE,SACtBqE,KAES,C","sources":["modules/Accounts/components/Account.tsx","modules/Accounts/components/TransferButtons.tsx","modules/Accounts/pages/AccountList.tsx","modules/Accounts/pages/CreateEditAccount.tsx","modules/Accounts/Accounts.tsx","shared/components/EmptyState.tsx","shared/components/FormIcon.tsx","shared/components/FormInput.styles.ts","shared/components/FormInput.tsx","shared/components/FormSelect.tsx","shared/components/ItemIcon.tsx","shared/components/Skeleton.tsx","shared/components/Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { Account as AccountModel } from 'shared/models';\nimport Icon from 'shared/components/Icon';\nimport Balance from 'shared/components/Balance';\n\ninterface AccountProps {\n  data: AccountModel;\n  onClick?: (data: AccountModel) => void;\n}\n\nconst Account: React.FC<AccountProps> = ({ data, onClick }) => {\n  const { palette: { primary: { main, contrastText } } } = useTheme();\n  const { name, icon, balance } = data;\n\n  const onAccountClick = (): void => {\n    if (onClick) {\n      onClick(data);\n    }\n  };\n\n  return (\n    <Paper elevation={1} sx={{ paddingX: 2, backgroundColor: main }}>\n      <Grid container display='flex' alignItems='center' justifyContent='space-between' flexGrow={1} columnSpacing={2}\n        sx={{\n          borderRadius: 1,\n          minHeight: 40,\n          cursor: 'pointer'\n        }}\n        onClick={onAccountClick}>\n        <Grid item xs={1} display='flex'>\n          {icon && <Icon name={icon} sx={{ fontSize: { sm: 22, xs: 18 }, color: contrastText }}></Icon>}\n        </Grid>\n        <Grid item xs={7} display='flex'>\n          <Typography noWrap color={contrastText} sx={{ fontSize: { sm: 15, xs: 13 } }}>{name}</Typography>\n        </Grid>\n        <Grid item xs={4} display='flex' justifyContent='flex-end'>\n          <Balance balance={balance} positiveColor={contrastText} fontSize={{ sm: 15, xs: 13 }} />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Account;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useTranslation } from 'core/i18n';\nimport { IconType, Summary } from 'shared/models';\nimport { ROUTES } from 'shared/constants';\nimport Icon from 'shared/components/Icon';\nimport Balance from 'shared/components/Balance';\nimport Button from 'shared/components/Button';\nimport Box, { BoxProps } from '@mui/material/Box';\n\ntype TransferButtonsProps = {\n  balance: Summary['balance'];\n} & BoxProps\n\nconst TransferButtons: React.FC<TransferButtonsProps> = ({ balance, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const openAccountTransferPage = (): void => {\n    navigate(`${ROUTES.transfers.path}/new`);\n  };\n\n  const openTransferListPage = (): void => {\n    navigate(`${ROUTES.transfers.path}`);\n  };\n\n  return (\n    <Box\n      sx={{ ...props.sx, display: 'flex', flexDirection: 'column', paddingBottom: 3, borderBottom: (theme) => `1px solid ${theme.palette.secondary.main}` }}>\n      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: 3 }}>\n        <Typography noWrap color={contrastText} fontSize={18} sx={{ marginRight: 1 }}>{t('COMMON.BALANCE')}:</Typography>\n        <Balance balance={balance} fontSize={18} />\n      </Box>\n      <Box sx={{ display: 'flex', flexDirection: { sm: 'row', xs: 'column' }, alignItems: 'center', justifyContent: 'space-between', gap: 3 }}>\n        <Button\n          aria-label='New transfer'\n          color='secondary'\n          variant='contained'\n          startIcon={<Icon name={IconType.currencyExchange}></Icon>}\n          sx={{ width: { sm: 'auto', xs: '100%' }, fontSize: 14 }}\n          onClick={openAccountTransferPage}>\n          {t('TRANSFERS.NEW_TRANSFER')}\n        </Button>\n        <Button\n          aria-label='Transfer history'\n          color='secondary'\n          startIcon={<Icon name={IconType.history}></Icon>}\n          sx={{ width: { sm: 'auto', xs: '100%' }, fontSize: 14 }}\n          onClick={openTransferListPage}>\n          {t('TRANSFERS.TRANSFER_HISTORY')}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default TransferButtons;\n","import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Box from '@mui/system/Box';\nimport Grid from '@mui/material/Grid';\nimport IconButton from '@mui/material/IconButton';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { IconType, Account as AccountModel } from 'shared/models';\nimport { ROUTES } from 'shared/constants';\nimport { getAccounts, getBalance, selectAccount, selectSummary } from 'store/reducers';\nimport Skeleton from 'shared/components/Skeleton';\nimport PageTitle from 'shared/components/PageTitle';\nimport Icon from 'shared/components/Icon';\nimport EmptyState from 'shared/components/EmptyState';\nimport Account from '../components/Account';\nimport TransferButtons from '../components/TransferButtons';\n\nconst AccountList: React.FC<{}> = () => {\n  const dispatch = useAppDispatch();\n  const { accounts, status } = useAppSelector(selectAccount);\n  const { balance, balanceStatus } = useAppSelector(selectSummary);\n  const navigate = useNavigate();\n  const { t } = useTranslation();\n\n  const openNewAccountPage = (): void => {\n    navigate(`${ROUTES.accounts.path}/new`);\n  };\n\n  const handleAccountItemClick = ({ id, name }: AccountModel): void => {\n    navigate(`${ROUTES.accounts.path}/view/${name}`, { state: { id } });\n  };\n\n  const getAccountData = (data: AccountModel): AccountModel => {\n    return {\n      ...data,\n      name: data.nameKey ? t(data.nameKey) : data.name\n    };\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getAccounts());\n    }\n  }, [dispatch, status]);\n\n  React.useEffect(() => {\n    if (balanceStatus === 'idle') {\n      dispatch(getBalance());\n    }\n  }, [dispatch, balanceStatus]);\n\n  const renderContent = (): React.ReactElement => {\n    if (status === 'loading') {\n      return (\n        <Grid item xs={12}>\n          <Skeleton type='list' />\n        </Grid>\n      );\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !accounts?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('ACCOUNTS.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <>\n        {accounts.map((account) => (\n          <Grid item key={account.id} xs={12}>\n            <Account data={getAccountData(account)} onClick={handleAccountItemClick} />\n          </Grid>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <Box flexGrow={1}>\n      <TransferButtons balance={balance} sx={{ marginTop: 2, marginBottom: 4 }} />\n      <PageTitle text={t('ACCOUNTS.PAGE_TITLE')} sx={{ marginBottom: 4 }} />\n      <Grid container rowGap={2} sx={{ marginTop: 4 }}>\n        {renderContent()}\n        <Grid item xs={12} display='flex' justifyContent='flex-end'>\n          <IconButton color='primary' onClick={openNewAccountPage} sx={{ alignSelf: 'flex-end' }}>\n            <Icon name={IconType.plus} sx={{ fontSize: 40 }}></Icon>\n          </IconButton>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default AccountList;","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useTranslation } from 'core/i18n';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  createAccount,\n  deleteAccount,\n  editAccount,\n  getAccount,\n  resetGetAccountStatus,\n  selectAccount,\n  selectAccountError,\n  selectCurrentAccount,\n  selectSettings,\n  setGetAccountErrorStatus\n} from 'store/reducers';\nimport { CURRENCIES, ACCOUNT_ICONS_LIST, NUMERIC_REGEX, ROUTES } from 'shared/constants';\nimport { Account, AccountDTO, AccountField, Currency, IconType, ManageMode } from 'shared/models';\nimport { accountHelper, getPageTitle, mapCurrencyStringToInputString } from 'shared/helpers';\nimport PageTitle from 'shared/components/PageTitle';\nimport Button from 'shared/components/Button';\nimport FormInput from 'shared/components/FormInput';\nimport Snackbar from 'shared/components/Snackbar';\nimport ItemIcon from 'shared/components/ItemIcon';\nimport FormSelect from 'shared/components/FormSelect';\nimport Dialog from 'shared/components/Dialog';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\nimport FormIcon from 'shared/components/FormIcon';\n\ninterface CreateEditAccountProps {\n  mode: ManageMode;\n}\n\nconst CreateEditAccount: React.FC<CreateEditAccountProps> = ({ mode }) => {\n  const regex = NUMERIC_REGEX;\n  const currencies = CURRENCIES;\n  const icons = ACCOUNT_ICONS_LIST;\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const dispatch = useAppDispatch();\n  const { getStatus, createEditStatus, deleteStatus } = useAppSelector(selectAccount);\n  const error = useAppSelector(selectAccountError);\n  const account = useAppSelector(selectCurrentAccount);\n  const { defaultCurrency: { iso } } = useAppSelector(selectSettings);\n  const helper = accountHelper();\n  const { t } = useTranslation();\n  const [formSubmitted, setFormSubmitted] = React.useState<boolean>(false);\n  const [deleteClicked, setDeleteClicked] = React.useState<boolean>(false);\n  const [showSnackbar, setShowSnackbar] = React.useState<boolean>(false);\n  const [dialogOpened, setDialogOpened] = React.useState<boolean>(false);\n  const loading = createEditStatus === 'loading';\n  const deleteLoading = deleteStatus === 'loading';\n  const accountId = state?.id as AccountDTO['id'];\n  const accountName = account?.nameKey ? t(account.nameKey) : (account?.name || '');\n  const isCreateMode = mode === ManageMode.create;\n  const isEditMode = mode === ManageMode.edit;\n  const isViewMode = mode === ManageMode.view;\n  const title = getPageTitle<Account>(mode, t, getStatus, 'ACCOUNTS', 'NEW_ACCOUNT', 'EMPTY_TITLE', account);\n\n  const defaultValues: Partial<Account> = {\n    balance: 0 as unknown as Account['balance'],\n    name: '',\n    currencyIso: iso\n  };\n\n  const methods = useForm<Account>({\n    mode: 'onBlur',\n    reValidateMode: 'onBlur',\n    defaultValues\n  });\n\n  const { setValue, handleSubmit, watch, reset } = methods;\n  const watchCurrency = watch(AccountField.currencyIso);\n\n  const handleAccountIconClick = ({ id }: { id: string }): void => {\n    if (isViewMode) {\n      return;\n    }\n\n    setValue(AccountField.icon, id as IconType, { shouldValidate: true });\n  };\n\n  const handleCurrencyChange = (event: SelectChangeEvent): void => {\n    const iso = event.target.value as Currency['iso'];\n\n    setValue(AccountField.currencyIso, iso, { shouldValidate: true });\n  };\n\n  const handleFormSubmit = (data: Account): void => {\n    const mappedData: AccountDTO = {\n      ...data,\n      balance: Number(data.balance)\n    };\n\n    isEditMode ? dispatch(editAccount([accountId, mappedData])) : dispatch(createAccount(mappedData));\n    setFormSubmitted(true);\n  };\n\n  const handleCancelButtonClick = (): void => {\n    isCreateMode ? reset(defaultValues) : setFormValues();\n\n    isEditMode\n      ? navigate(`${ROUTES.accounts.path}/view/${accountName}`, { state: { id: accountId } })\n      : navigate(ROUTES.accounts.path);\n  };\n\n  const handleDeleteAccount = (): void => {\n    dispatch(deleteAccount(accountId));\n    setDeleteClicked(true);\n  };\n\n  const handleSnackbarClose = (): void => {\n    setShowSnackbar(false);\n    setDeleteClicked(false);\n  };\n\n  const handleOpenDialog = (): void => {\n    setDialogOpened(true);\n  };\n\n  const handleCloseDialog = (): void => {\n    setDialogOpened(false);\n  };\n\n  const handleEditButtonClick = (): void => {\n    if (isEditMode) {\n      return;\n    }\n\n    navigate(`${ROUTES.accounts.path}/edit/${accountName}`, { state: { id: accountId } });\n  };\n\n  const setFormValues = React.useCallback(() => {\n    if (account) {\n      setValue(AccountField.name, account.nameKey ? t(account.nameKey) : account.name);\n      setValue(AccountField.icon, account.icon);\n      setValue(AccountField.balance, mapCurrencyStringToInputString(account.balance));\n      setValue(AccountField.currencyIso, account.currencyIso);\n    }\n  }, [account, setValue, t]);\n\n  const resetAccount = React.useCallback(() => {\n    dispatch(resetGetAccountStatus());\n  }, [dispatch]);\n\n  const goBack = React.useCallback(() => {\n    navigate(`${ROUTES.accounts.path}`);\n    resetAccount();\n  }, [navigate, resetAccount]);\n\n  React.useEffect(() => {\n    if (createEditStatus === 'succeeded' && formSubmitted) {\n      goBack();\n      setShowSnackbar(false);\n    }\n\n    if (createEditStatus === 'failed' && formSubmitted) {\n      setShowSnackbar(true);\n    }\n  }, [goBack, createEditStatus, formSubmitted]);\n\n  React.useEffect(() => {\n    if (deleteStatus === 'succeeded' && deleteClicked) {\n      goBack();\n    }\n\n    if (deleteStatus === 'failed' && deleteClicked) {\n      setShowSnackbar(true);\n      setDialogOpened(false);\n    }\n  }, [goBack, deleteStatus, deleteClicked]);\n\n  React.useEffect(() => {\n    if (!accountId) {\n      dispatch(setGetAccountErrorStatus());\n    }\n  }, [accountId, dispatch]);\n\n  React.useEffect(() => {\n    if (accountId && getStatus === 'idle' && (isEditMode || isViewMode) && !deleteClicked) {\n      dispatch(getAccount(accountId));\n    }\n  }, [accountId, isEditMode, isViewMode, getStatus, dispatch, deleteClicked]);\n\n  React.useEffect(() => {\n    setFormValues();\n  }, [setFormValues]);\n\n  React.useEffect(() => {\n    return () => {\n      resetAccount();\n    };\n  }, [resetAccount]);\n\n  const renderContent = (): React.ReactElement => {\n    if (getStatus === 'loading') {\n      return <Skeleton type='form' />;\n    }\n\n    if (!isCreateMode && (!account || !accountId) && getStatus === 'failed') {\n      return <EmptyState text={t('ACCOUNTS.EMPTY_TEXT_RENDER_CONTENT')} />;\n    }\n\n    return (\n      <FormProvider {...methods}>\n        <Grid container rowGap={7}>\n          <Grid item xs={12}>\n            <FormInput\n              InputProps={{ readOnly: isViewMode }}\n              label={t('COMMON.NAME')}\n              name={AccountField.name}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.name.required!.message)\n                },\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormInput\n              InputProps={{ readOnly: isViewMode }}\n              label={t('COMMON.BALANCE')}\n              type='number'\n              name={AccountField.balance}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.balance.required!.message)\n                },\n                pattern: {\n                  value: regex,\n                  message: t(helper.balance.pattern!.message)\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <FormSelect\n              inputProps={{ readOnly: isViewMode }}\n              label={t('COMMON.CURRENCY')}\n              name={AccountField.currencyIso}\n              value={watchCurrency}\n              onChange={handleCurrencyChange}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.currencyIso.required!.message)\n                }\n              }}\n            >\n              {currencies.map(({ iso, name, nameKey, symbol }) => (\n                <MenuItem value={iso} key={iso}>{symbol} {nameKey ? t(nameKey) : name}</MenuItem>\n              ))}\n            </FormSelect>\n          </Grid>\n          <Grid item xs={12}>\n            <FormIcon\n              name={AccountField.icon}\n              label={t('COMMON.ICON')}\n              rules={{\n                required: {\n                  value: true,\n                  message: t(helper.icon.required!.message)\n                }\n              }}\n              render={({ field }) => (\n                <Grid container {...field} columnGap={1} rowGap={3} sx={{ marginTop: 2 }}>\n                  {\n                    icons.map(({ name }) => (\n                      <Grid item key={name}>\n                        <ItemIcon selected={field.value} id={name} icon={name} size={50} readonly={isViewMode} onClick={handleAccountIconClick} />\n                      </Grid>\n                    ))\n                  }\n                </Grid>\n              )} />\n          </Grid>\n        </Grid>\n      </FormProvider>\n    );\n  };\n\n  return (\n    <Box component='form' display='flex' flexDirection='column' flexGrow={1} onSubmit={handleSubmit(handleFormSubmit)}>\n      <PageTitle\n        withBackButton\n        withEditButton={isViewMode && !!account}\n        withDeleteButton={isEditMode && !!account}\n        withCancelButton={!isViewMode && !!account}\n        text={title}\n        onBackButtonClick={goBack}\n        onEditButtonClick={handleEditButtonClick}\n        onDeleteButtonClick={handleOpenDialog}\n        onCancelButtonClick={handleCancelButtonClick}\n      />\n      <Box flexGrow={1}>\n        {renderContent()}\n      </Box>\n      {!isViewMode && (\n        <Grid container display='flex' justifyContent='flex-end' rowGap={2} columnGap={2} sx={{ marginTop: 4, marginBottom: 4 }}>\n          <Grid item sm='auto' xs={12}>\n            <Button aria-label='Save account' fullWidth type='submit' variant='contained' loading={loading}\n              onClick={handleSubmit(handleFormSubmit)}>\n              {t('COMMON.SAVE')}\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n      <Snackbar type='error' open={showSnackbar} text={error?.messageKey ? t(error.messageKey) : error?.message || ''} onClose={handleSnackbarClose} />\n      <Dialog\n        fullWidth\n        maxWidth='xs'\n        title={t('ACCOUNTS.DELETE_DIALOG_TITLE')!}\n        actionButtonText={t('COMMON.YES')!}\n        open={dialogOpened}\n        loading={deleteLoading}\n        onClose={handleCloseDialog}\n        onAction={handleDeleteAccount}\n      >\n        <Typography variant='subtitle1'>\n          {t('ACCOUNTS.DELETE_DIALOG_CONFIRM')}\n        </Typography>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default CreateEditAccount;\n","import * as React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { ROUTES } from 'shared/constants';\nimport { ManageMode } from 'shared/models';\nimport AccountList from './pages/AccountList';\nimport CreateEditAccount from './pages/CreateEditAccount';\n\nconst Accounts: React.FC = () => {\n  return (\n    <Routes>\n      <Route path='/' element={<AccountList />} />\n      <Route path='/new' element={<CreateEditAccount mode={ManageMode.create} />} />\n      <Route path='/view/:id' element={<CreateEditAccount mode={ManageMode.view} />} />\n      <Route path='/edit/:id' element={<CreateEditAccount mode={ManageMode.edit} />} />\n      <Route path='*' element={<Navigate to={ROUTES.accounts.path} replace />} />\n    </Routes>\n  );\n};\n\nexport default Accounts;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import * as React from 'react';\nimport { useFormContext, Controller, ControllerRenderProps, ControllerFieldState } from 'react-hook-form';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\ntype FormIconProps = {\n  name: string;\n  label: string;\n  render: ({ field, fieldState }: { field: ControllerRenderProps, fieldState: ControllerFieldState }) => React.ReactElement;\n  rules?: FormControlRules;\n};\n\nconst FormIcon: React.FC<FormIconProps> = ({ name, label, rules = {}, render }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState }) => (\n        <>\n          <InputLabel sx={{ marginBottom: 2 }}>{label}</InputLabel>\n          {render({ field, fieldState })}\n          {errors[name] && <FormHelperText error>{fieldState.error?.message}</FormHelperText>}\n        </>\n      )}\n    />\n  );\n};\n\nexport default FormIcon;\n","import styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Theme } from '@mui/material/styles';\n\ninterface StyledTextFieldProps {\n  theme: Theme;\n}\n\nexport const StyledTextField = styled(TextField)<StyledTextFieldProps>`\n  &.MuiInputBase-input {\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.primary.main};\n  },\n  &.MuiOutlinedInput-root {\n    &.Mui-error {\n      & .MuiOutlinedInput-notchedOutline: {\n        border-color: ${(props) => props.theme.palette.error.main},\n      }\n    }\n    border-color: ${(props) => props.theme.palette.primary.main};\n    color: ${(props) => props.theme.palette.error.main};\n  }\n`;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport { TextFieldProps } from '@mui/material/TextField';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { FormControlRules } from 'shared/models';\nimport { StyledTextField } from './FormInput.styles';\n\ntype FormInputProps = {\n  name: string;\n  rules?: FormControlRules;\n} & TextFieldProps;\n\nconst FormInput: React.FC<FormInputProps> = ({ name, rules = {}, ...props }) => {\n  const theme = useTheme();\n\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <StyledTextField\n            fullWidth\n            {...field}\n            {...props}\n            theme={theme}\n            error={!!errors[name]}\n          />\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormInput;\n","import * as React from 'react';\nimport { useFormContext, Controller } from 'react-hook-form';\nimport Select, { SelectProps } from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport { FormControlRules } from 'shared/models';\n\nexport interface SelectOption {\n  label: string;\n  value: string;\n}\n\ntype FormSelectProps = {\n  name: string;\n  label: string;\n  rules?: FormControlRules;\n} & SelectProps<SelectOption['value']>;\n\nconst FormSelect: React.FC<FormSelectProps> = ({ name, label, rules = {}, children, ...props }) => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      rules={rules}\n      render={({ field, fieldState: { error } }) => (\n        <Box position='relative'>\n          <InputLabel>{label}</InputLabel>\n          <Select\n            fullWidth\n            variant='outlined'\n            error={!!errors[name]}\n            {...field}\n            {...props}>\n            {children}\n          </Select>\n          {errors[name] && <FormHelperText sx={{ position: 'absolute' }} error>{error?.message}</FormHelperText>}\n        </Box>\n      )}\n    />\n  );\n};\n\nexport default FormSelect;\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport { IconType } from 'shared/models';\nimport Icon from 'shared/components/Icon';\n\ninterface ItemIconProps {\n  id: string;\n  icon: IconType;\n  selected?: string;\n  size?: number;\n  disabled?: boolean;\n  readonly?: boolean;\n  onClick?: ({ id }: { id: string }) => void;\n}\n\nconst ItemIcon: React.FC<ItemIconProps> = ({ id, selected, icon, size = 64, disabled, readonly, onClick }) => {\n  const { palette: { primary: { main, contrastText }, action } } = useTheme();\n\n  const onItemClick = (id: string) => (): void => {\n    if (readonly) {\n      return;\n    }\n\n    if (onClick) {\n      onClick({ id });\n    }\n  };\n\n  const getColor = (): string => {\n    return selected === id ? contrastText : main;\n  };\n\n  const getBorder = (): string => {\n    return disabled ? 'none' : `1px solid ${main}`;\n  };\n\n  const getBackgroundColor = (): string => {\n    if (disabled) {\n      return action.disabled;\n    }\n\n    return selected === id ? main : 'transparent';\n  };\n\n  return (\n    <Box display='flex' flexDirection='column' alignItems='center' width={size + 20}>\n      <Box\n        onClick={onItemClick(id)}\n        sx={{\n          backgroundColor: getBackgroundColor(),\n          border: getBorder(),\n          color: getColor(),\n          height: size,\n          width: size,\n          borderRadius: '50%',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: (disabled || readonly) ? 'default' : 'pointer'\n        }}>\n        <Icon name={icon}></Icon>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ItemIcon;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n","import * as React from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport MuiSnackbar, { SnackbarProps as MuiSnackbarProps } from '@mui/material/Snackbar';\n\ntype SnackbarProps = {\n  open: boolean;\n  text: string;\n  type: AlertColor;\n  onClose: () => void;\n} & MuiSnackbarProps;\n\nconst Snackbar: React.FC<SnackbarProps> = ({ open = false, text, type, onClose, ...props }) => {\n\n  const onSnackbarClose = (): void => {\n    onClose();\n  };\n\n  return (\n    <MuiSnackbar\n      open={open}\n      autoHideDuration={5000}\n      onClose={onSnackbarClose}\n      {...props}\n    >\n      <MuiAlert severity={type}>\n        {text}\n      </MuiAlert>\n    </MuiSnackbar>\n  );\n};\n\nexport default Snackbar;\n"],"names":["_ref","data","onClick","palette","primary","main","contrastText","useTheme","name","icon","balance","_jsx","Paper","elevation","sx","paddingX","backgroundColor","children","_jsxs","Grid","container","display","alignItems","justifyContent","flexGrow","columnSpacing","borderRadius","minHeight","cursor","onAccountClick","item","xs","Icon","fontSize","sm","color","Typography","noWrap","Balance","positiveColor","props","info","navigate","useNavigate","t","useTranslation","Box","flexDirection","paddingBottom","borderBottom","theme","concat","secondary","marginBottom","marginRight","gap","Button","variant","startIcon","IconType","currencyExchange","width","openAccountTransferPage","ROUTES","transfers","path","history","openTransferListPage","AccountList","dispatch","useAppDispatch","accounts","status","useAppSelector","selectAccount","balanceStatus","selectSummary","handleAccountItemClick","id","state","React","getAccounts","getBalance","TransferButtons","marginTop","PageTitle","text","rowGap","Skeleton","type","length","_Fragment","map","account","Account","nameKey","EmptyState","IconButton","openNewAccountPage","alignSelf","plus","mode","regex","NUMERIC_REGEX","currencies","CURRENCIES","icons","ACCOUNT_ICONS_LIST","useLocation","getStatus","createEditStatus","deleteStatus","error","selectAccountError","selectCurrentAccount","defaultCurrency","iso","selectSettings","helper","accountHelper","formSubmitted","setFormSubmitted","deleteClicked","setDeleteClicked","showSnackbar","setShowSnackbar","dialogOpened","setDialogOpened","loading","deleteLoading","accountId","accountName","isCreateMode","ManageMode","create","isEditMode","edit","isViewMode","view","title","getPageTitle","defaultValues","currencyIso","methods","useForm","reValidateMode","setValue","handleSubmit","watch","reset","watchCurrency","AccountField","handleAccountIconClick","_ref2","shouldValidate","handleCurrencyChange","event","target","value","handleFormSubmit","mappedData","Number","editAccount","createAccount","setFormValues","mapCurrencyStringToInputString","resetAccount","resetGetAccountStatus","goBack","setGetAccountErrorStatus","getAccount","component","onSubmit","withBackButton","withEditButton","withDeleteButton","withCancelButton","onBackButtonClick","onEditButtonClick","handleEditButtonClick","onDeleteButtonClick","handleOpenDialog","onCancelButtonClick","handleCancelButtonClick","FormProvider","FormInput","InputProps","readOnly","label","rules","required","message","pattern","FormSelect","inputProps","onChange","_ref3","symbol","MenuItem","FormIcon","render","_ref4","field","columnGap","_ref5","ItemIcon","selected","size","readonly","fullWidth","Snackbar","open","messageKey","onClose","handleSnackbarClose","Dialog","maxWidth","actionButtonText","handleCloseDialog","onAction","handleDeleteAccount","deleteAccount","Accounts","Routes","Route","element","CreateEditAccount","Navigate","to","replace","textValue","control","formState","errors","useFormContext","Controller","_fieldState$error","fieldState","InputLabel","FormHelperText","StyledTextField","styled","TextField","_templateObject","_taggedTemplateLiteral","position","Select","disabled","action","onItemClick","border","height","isForm","getSize","firstBar","secondBar","thirdBar","MuiSkeleton","animation","MuiSnackbar","autoHideDuration","onSnackbarClose","MuiAlert","severity"],"sourceRoot":""}