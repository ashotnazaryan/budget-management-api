{"version":3,"file":"static/js/569.cd8e53f1.chunk.js","mappings":"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","sources":["modules/Reports.tsx","shared/components/EmptyState.tsx","shared/components/Skeleton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, ChartData } from 'chart.js';\nimport type { ChartOptions } from 'chart.js';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useTheme } from '@mui/material/styles';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { useTranslation } from 'core/i18n';\nimport { getReport, selectReport } from 'store/reducers';\nimport { CHART_COLOR_SCHEME, MONTHS } from 'shared/constants';\nimport PageTitle from 'shared/components/PageTitle';\nimport Skeleton from 'shared/components/Skeleton';\nimport EmptyState from 'shared/components/EmptyState';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Reports: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n  const { report, status } = useAppSelector(selectReport);\n  const { palette: { info: { contrastText } } } = useTheme();\n\n  const months = report.reports.map((report) => {\n    const monthName = MONTHS.find(({ index }) => index === report.month)?.nameKey || '';\n\n    return t(monthName);\n  });\n\n  const values = report.reports.map(({ value }) => value);\n  const loading = status === 'loading';\n\n  const data: ChartData<'doughnut', number[], string> = {\n    labels: months,\n    datasets: [\n      {\n        label: t('COMMON.AMOUNT') as string,\n        data: values,\n        backgroundColor: CHART_COLOR_SCHEME,\n        borderWidth: 1\n      },\n    ],\n  };\n\n  const options: ChartOptions<'doughnut'> = {\n    responsive: true,\n    aspectRatio: 1.5,\n    color: contrastText,\n    plugins: {\n      legend: {\n        display: true,\n        labels: {\n          usePointStyle: true\n        }\n      }\n    }\n  };\n\n  const renderContent = (): React.ReactElement => {\n    if (loading) {\n      return <Skeleton type='list' />;\n    }\n\n    if ((status === 'failed' || status === 'succeeded') && !report.reports?.length) {\n      return (\n        <Grid item xs={12}>\n          <EmptyState text={t('REPORTS.EMPTY_TEXT')} />\n        </Grid>\n      );\n    }\n\n    return (\n      <Box display='flex' flexDirection='column' justifyContent='center'>\n        <Doughnut data={data} options={options} />\n        <Typography color={contrastText} sx={{ textAlign: 'center', marginTop: 3 }}>{t('COMMON.TOTAL')}: {report.total}</Typography>\n        {report.limit && (\n          <Typography color={contrastText} sx={{ textAlign: 'center', marginTop: 3 }}>{t('COMMON.LIMIT')}: {report.limit}</Typography>\n        )}\n      </Box>\n    );\n  };\n\n  React.useEffect(() => {\n    if (status === 'idle') {\n      dispatch(getReport());\n    }\n  }, [dispatch, status]);\n\n  return (\n    <Box display='flex' flexDirection='column' flexGrow={1}>\n      <PageTitle data-testid='page-title' text={t('REPORTS.PAGE_TITLE')} />\n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default Reports;\n","import * as React from 'react';\nimport Box, { BoxProps } from '@mui/material/Box';\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport { useTranslation } from 'core/i18n';\n\ntype EmptyStateProps = {\n  text: string;\n} & BoxProps\n\nconst EmptyState: React.FC<EmptyStateProps> = ({ text, ...props }) => {\n  const { palette: { info: { contrastText } } } = useTheme();\n  const { t } = useTranslation();\n  const textValue = text || t('COMMON.NO_DATA');\n\n  return (\n    <Box\n      display='flex'\n      justifyContent='center'\n      {...props}\n      sx={{\n        width: '100%',\n        ...props.sx\n      }}>\n      <Typography noWrap color={contrastText} fontSize={{ sm: 18, xs: 16 }}>{textValue}</Typography>\n    </Box>\n  );\n};\n\nexport default EmptyState;\n","import * as React from 'react';\nimport MuiSkeleton, { SkeletonProps as MuiSkeletonProps } from '@mui/material/Skeleton';\nimport Grid from '@mui/material/Grid';\n\ntype SkeletonProps = {\n  type: 'list' | 'form' | 'summary' | 'circular'\n} & MuiSkeletonProps;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ type, ...props }) => {\n  const isCircular = type === 'circular';\n  const isForm = type === 'form';\n\n  const getSize = () => {\n    switch (type) {\n    case 'list':\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n\n    case 'form':\n      return { firstBar: 56, secondBar: 56, thirdBar: 56 };\n\n    case 'summary':\n      return { firstBar: 30, secondBar: 60, thirdBar: 120 };\n\n    case 'circular':\n      return { firstBar: 64, secondBar: 64, thirdBar: 64 };\n\n    default:\n      return { firstBar: 40, secondBar: 40, thirdBar: 40 };\n    }\n  };\n\n  return isCircular\n    ? (\n      <Grid container columnGap={4} rowGap={4}>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().firstBar} width={getSize().firstBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().secondBar} width={getSize().secondBar} />\n        </Grid>\n        <Grid item width={100} display='flex' justifyContent='center'>\n          <MuiSkeleton {...props} variant='circular' height={getSize().thirdBar} width={getSize().firstBar} />\n        </Grid>\n      </Grid>\n    )\n    : (\n      <Grid container justifyContent='center' rowGap={isForm ? 5 : 2}>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().firstBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' animation='wave' height={getSize().secondBar} />\n        </Grid>\n        <Grid item xs={12}>\n          <MuiSkeleton {...props} variant='rounded' height={getSize().thirdBar} />\n        </Grid>\n      </Grid>\n    );\n};\n\nexport default Skeleton;\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","Reports","t","useTranslation","dispatch","useAppDispatch","report","status","useAppSelector","selectReport","palette","info","contrastText","useTheme","months","reports","map","_MONTHS$find","monthName","MONTHS","find","_ref","index","month","nameKey","values","_ref2","value","loading","data","labels","datasets","label","backgroundColor","CHART_COLOR_SCHEME","borderWidth","options","responsive","aspectRatio","color","plugins","legend","display","usePointStyle","React","getReport","_jsxs","Box","flexDirection","flexGrow","children","_jsx","PageTitle","text","renderContent","_report$reports","Skeleton","type","length","justifyContent","Doughnut","Typography","sx","textAlign","marginTop","total","limit","Grid","item","xs","EmptyState","props","textValue","width","noWrap","fontSize","sm","isForm","getSize","firstBar","secondBar","thirdBar","container","columnGap","rowGap","MuiSkeleton","variant","height","animation"],"sourceRoot":""}